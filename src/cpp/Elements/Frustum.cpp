/*****************************************************************************/
/*  STAP++ : A C++ FEM code sharing the same input data file with STAP90     */
/*     Computational Dynamics Laboratory                                     */
/*     School of Aerospace Engineering, Tsinghua University                  */
/*                                                                           */
/*     Release 1.02, October 27, 2017                                        */
/*                                                                           */
/*     http://www.comdyn.cn/                                                 */
/*****************************************************************************/

#include "Elements/Frustum.h"

#include <iostream>
#include <iomanip>
#include <cmath>

using namespace std;

//	Constructor
CFrustum::CFrustum()
{
	NEN = 2;	// Each element has 2 nodes
	nodes = new CNode*[NEN];

	ND = 12;
	LocationMatrix = new unsigned int[ND];

	ElementMaterial = NULL;
}

//	Desconstructor
CFrustum::~CFrustum()
{
}

//	Read element data from stream Input
bool CFrustum::Read(ifstream& Input, unsigned int Ele, CMaterial* MaterialSets, CNode* NodeList)
{
	unsigned int N;

	Input >> N;	// element number

	if (N != Ele + 1)
	{
		cerr << "*** Error *** Elements must be inputted in order !" << endl
			<< "    Expected element : " << Ele + 1 << endl
			<< "    Provided element : " << N << endl;

		return false;
	}

	unsigned int MSet;	// Material property set number
	unsigned int N1, N2;	// Left node number and right node number

	Input >> N1 >> N2 >> MSet;
	ElementMaterial = static_cast<CShellMaterial*>(MaterialSets) + MSet - 1;
	nodes[0] = &NodeList[N1 - 1];
	nodes[1] = &NodeList[N2 - 1];

	return true;
}

//	Write element data to stream
void CFrustum::Write(COutputter& output, unsigned int Ele)
{
	output << setw(5) << Ele + 1 << setw(11) << nodes[0]->NodeNumber
		<< setw(9) << nodes[1]->NodeNumber << setw(12) << ElementMaterial->nset << endl;
}

//  Generate location matrix: the global equation number that corresponding to each DOF of the element
//	Caution:  Equation number is numbered from 1 !
void CFrustum::GenerateLocationMatrix()
{
	unsigned int i = 0;
	for (unsigned int N = 0; N < NEN; N++)
		for (unsigned int D = 0; D < 6; D++)
			LocationMatrix[i++] = nodes[N]->bcode[D];
}


//	Return the size of the element stiffness matrix (stored as an array column by column)
//	For 2 node frustum shell element, element stiffness is a 12x12 matrix, whose upper triangular part
//	has 78 elements
unsigned int CFrustum::SizeOfStiffnessMatrix() { return 78; }

//	Calculate element stiffness matrix 
//	Upper triangular matrix, stored as an array column by colum starting from the diagonal element
void CFrustum::ElementStiffness(double* Matrix)
{
	clear(Matrix, SizeOfStiffnessMatrix());

	//	Only X and Z matter
	double DX = nodes[1]->XYZ[0] - nodes[0]->XYZ[0];
	double DZ = nodes[1]->XYZ[2] - nodes[0]->XYZ[2];
	double l = sqrt(DX * DX + DZ * DZ);
	double prmeter = 2 * 3.1415926535897932384626434 * l;
	double S = DZ / l;
	double C = DX / l;
	double r0 = nodes[0]->XYZ[2];


	//	Get material/section property
	CShellMaterial* material = static_cast<CShellMaterial*>(ElementMaterial);	// Pointer to material of the element

	const double nu = material->nu;
	const double h = material->h;
	const double k = material->E / (1 - nu*nu) * h;

	//	Calculate element stiffness matrix
	//	Use 4-point Gauss Quadrature
	const double xi1 = 0.8611363116;
	const double xi2 = 0.3399810436;
	const double weight1 = 0.3478548451;
	const double weight2 = 0.6521451549;

	Matrix[0] = S*(C*prmeter*(C*weight1*((k*nu) / l + (S*k*(xi1*(1.0 / 2.0) - 1.0 / 2.0)) / (r0 + S*l*(xi1*(1.0 / 2.0) + 1.0 / 2.0)))*(pow(xi1*(1.0 / 2.0) + 1.0 / 2.0, 2.0)*-3.0 + pow(xi1*(1.0 / 2.0) + 1.0 / 2.0, 3.0)*2.0 + 1.0) - C*weight1*((k*nu) / l - (S*k*(xi1*(1.0 / 2.0) + 1.0 / 2.0)) / (r0 - S*l*(xi1*(1.0 / 2.0) - 1.0 / 2.0)))*(pow(xi1*(1.0 / 2.0) - 1.0 / 2.0, 2.0)*3.0 + pow(xi1*(1.0 / 2.0) - 1.0 / 2.0, 3.0)*2.0 - 1.0) + C*weight2*((k*nu) / l + (S*k*(xi2*(1.0 / 2.0) - 1.0 / 2.0)) / (r0 + S*l*(xi2*(1.0 / 2.0) + 1.0 / 2.0)))*(pow(xi2*(1.0 / 2.0) + 1.0 / 2.0, 2.0)*-3.0 + pow(xi2*(1.0 / 2.0) + 1.0 / 2.0, 3.0)*2.0 + 1.0) - C*weight2*((k*nu) / l - (S*k*(xi2*(1.0 / 2.0) + 1.0 / 2.0)) / (r0 - S*l*(xi2*(1.0 / 2.0) - 1.0 / 2.0)))*(pow(xi2*(1.0 / 2.0) - 1.0 / 2.0, 2.0)*3.0 + pow(xi2*(1.0 / 2.0) - 1.0 / 2.0, 3.0)*2.0 - 1.0)) + S*prmeter*(weight1*(r0 + S*l*(xi1*(1.0 / 2.0) + 1.0 / 2.0))*(1.0 / (l*l)*xi1*((h*h)*k*1.0 / (l*l)*xi1*(1.0 / 2.0) - (S*(h*h)*k*nu*(xi1*3.0 - pow(xi1*(1.0 / 2.0) + 1.0 / 2.0, 2.0)*6.0 + 3.0)*(1.0 / 1.2E1)) / (l*(r0 + S*l*(xi1*(1.0 / 2.0) + 1.0 / 2.0))))*6.0 + (C*C)*k*1.0 / pow(r0 + S*l*(xi1*(1.0 / 2.0) + 1.0 / 2.0), 2.0)*pow(pow(xi1*(1.0 / 2.0) + 1.0 / 2.0, 2.0)*-3.0 + pow(xi1*(1.0 / 2.0) + 1.0 / 2.0, 3.0)*2.0 + 1.0, 2.0) - (S*((h*h)*k*1.0 / (l*l)*nu*xi1*(1.0 / 2.0) - (S*(h*h)*k*(xi1*3.0 - pow(xi1*(1.0 / 2.0) + 1.0 / 2.0, 2.0)*6.0 + 3.0)*(1.0 / 1.2E1)) / (l*(r0 + S*l*(xi1*(1.0 / 2.0) + 1.0 / 2.0))))*(xi1*3.0 - pow(xi1*(1.0 / 2.0) + 1.0 / 2.0, 2.0)*6.0 + 3.0)) / (l*(r0 + S*l*(xi1*(1.0 / 2.0) + 1.0 / 2.0)))) + weight1*(r0 - S*l*(xi1*(1.0 / 2.0) - 1.0 / 2.0))*(1.0 / (l*l)*xi1*((h*h)*k*1.0 / (l*l)*xi1*(1.0 / 2.0) - (S*(h*h)*k*nu*(xi1*3.0 + pow(xi1*(1.0 / 2.0) - 1.0 / 2.0, 2.0)*6.0 - 3.0)*(1.0 / 1.2E1)) / (l*(r0 - S*l*(xi1*(1.0 / 2.0) - 1.0 / 2.0))))*6.0 + (C*C)*k*1.0 / pow(r0 - S*l*(xi1*(1.0 / 2.0) - 1.0 / 2.0), 2.0)*pow(pow(xi1*(1.0 / 2.0) - 1.0 / 2.0, 2.0)*3.0 + pow(xi1*(1.0 / 2.0) - 1.0 / 2.0, 3.0)*2.0 - 1.0, 2.0) - (S*((h*h)*k*1.0 / (l*l)*nu*xi1*(1.0 / 2.0) - (S*(h*h)*k*(xi1*3.0 + pow(xi1*(1.0 / 2.0) - 1.0 / 2.0, 2.0)*6.0 - 3.0)*(1.0 / 1.2E1)) / (l*(r0 - S*l*(xi1*(1.0 / 2.0) - 1.0 / 2.0))))*(xi1*3.0 + pow(xi1*(1.0 / 2.0) - 1.0 / 2.0, 2.0)*6.0 - 3.0)) / (l*(r0 - S*l*(xi1*(1.0 / 2.0) - 1.0 / 2.0)))) + weight2*(r0 + S*l*(xi2*(1.0 / 2.0) + 1.0 / 2.0))*(1.0 / (l*l)*xi2*((h*h)*k*1.0 / (l*l)*xi2*(1.0 / 2.0) - (S*(h*h)*k*nu*(xi2*3.0 - pow(xi2*(1.0 / 2.0) + 1.0 / 2.0, 2.0)*6.0 + 3.0)*(1.0 / 1.2E1)) / (l*(r0 + S*l*(xi2*(1.0 / 2.0) + 1.0 / 2.0))))*6.0 + (C*C)*k*1.0 / pow(r0 + S*l*(xi2*(1.0 / 2.0) + 1.0 / 2.0), 2.0)*pow(pow(xi2*(1.0 / 2.0) + 1.0 / 2.0, 2.0)*-3.0 + pow(xi2*(1.0 / 2.0) + 1.0 / 2.0, 3.0)*2.0 + 1.0, 2.0) - (S*((h*h)*k*1.0 / (l*l)*nu*xi2*(1.0 / 2.0) - (S*(h*h)*k*(xi2*3.0 - pow(xi2*(1.0 / 2.0) + 1.0 / 2.0, 2.0)*6.0 + 3.0)*(1.0 / 1.2E1)) / (l*(r0 + S*l*(xi2*(1.0 / 2.0) + 1.0 / 2.0))))*(xi2*3.0 - pow(xi2*(1.0 / 2.0) + 1.0 / 2.0, 2.0)*6.0 + 3.0)) / (l*(r0 + S*l*(xi2*(1.0 / 2.0) + 1.0 / 2.0)))) + weight2*(r0 - S*l*(xi2*(1.0 / 2.0) - 1.0 / 2.0))*(1.0 / (l*l)*xi2*((h*h)*k*1.0 / (l*l)*xi2*(1.0 / 2.0) - (S*(h*h)*k*nu*(xi2*3.0 + pow(xi2*(1.0 / 2.0) - 1.0 / 2.0, 2.0)*6.0 - 3.0)*(1.0 / 1.2E1)) / (l*(r0 - S*l*(xi2*(1.0 / 2.0) - 1.0 / 2.0))))*6.0 + (C*C)*k*1.0 / pow(r0 - S*l*(xi2*(1.0 / 2.0) - 1.0 / 2.0), 2.0)*pow(pow(xi2*(1.0 / 2.0) - 1.0 / 2.0, 2.0)*3.0 + pow(xi2*(1.0 / 2.0) - 1.0 / 2.0, 3.0)*2.0 - 1.0, 2.0) - (S*((h*h)*k*1.0 / (l*l)*nu*xi2*(1.0 / 2.0) - (S*(h*h)*k*(xi2*3.0 + pow(xi2*(1.0 / 2.0) - 1.0 / 2.0, 2.0)*6.0 - 3.0)*(1.0 / 1.2E1)) / (l*(r0 - S*l*(xi2*(1.0 / 2.0) - 1.0 / 2.0))))*(xi2*3.0 + pow(xi2*(1.0 / 2.0) - 1.0 / 2.0, 2.0)*6.0 - 3.0)) / (l*(r0 - S*l*(xi2*(1.0 / 2.0) - 1.0 / 2.0)))))) + C*(S*prmeter*(weight1*(r0 + S*l*(xi1*(1.0 / 2.0) + 1.0 / 2.0))*((C*k*nu*(pow(xi1*(1.0 / 2.0) + 1.0 / 2.0, 2.0)*-3.0 + pow(xi1*(1.0 / 2.0) + 1.0 / 2.0, 3.0)*2.0 + 1.0)) / (l*(r0 + S*l*(xi1*(1.0 / 2.0) + 1.0 / 2.0))) + C*S*k*1.0 / pow(r0 + S*l*(xi1*(1.0 / 2.0) + 1.0 / 2.0), 2.0)*(xi1*(1.0 / 2.0) - 1.0 / 2.0)*(pow(xi1*(1.0 / 2.0) + 1.0 / 2.0, 2.0)*-3.0 + pow(xi1*(1.0 / 2.0) + 1.0 / 2.0, 3.0)*2.0 + 1.0)) - weight1*(r0 - S*l*(xi1*(1.0 / 2.0) - 1.0 / 2.0))*((C*k*nu*(pow(xi1*(1.0 / 2.0) - 1.0 / 2.0, 2.0)*3.0 + pow(xi1*(1.0 / 2.0) - 1.0 / 2.0, 3.0)*2.0 - 1.0)) / (l*(r0 - S*l*(xi1*(1.0 / 2.0) - 1.0 / 2.0))) - C*S*k*1.0 / pow(r0 - S*l*(xi1*(1.0 / 2.0) - 1.0 / 2.0), 2.0)*(xi1*(1.0 / 2.0) + 1.0 / 2.0)*(pow(xi1*(1.0 / 2.0) - 1.0 / 2.0, 2.0)*3.0 + pow(xi1*(1.0 / 2.0) - 1.0 / 2.0, 3.0)*2.0 - 1.0)) + weight2*(r0 + S*l*(xi2*(1.0 / 2.0) + 1.0 / 2.0))*((C*k*nu*(pow(xi2*(1.0 / 2.0) + 1.0 / 2.0, 2.0)*-3.0 + pow(xi2*(1.0 / 2.0) + 1.0 / 2.0, 3.0)*2.0 + 1.0)) / (l*(r0 + S*l*(xi2*(1.0 / 2.0) + 1.0 / 2.0))) + C*S*k*1.0 / pow(r0 + S*l*(xi2*(1.0 / 2.0) + 1.0 / 2.0), 2.0)*(xi2*(1.0 / 2.0) - 1.0 / 2.0)*(pow(xi2*(1.0 / 2.0) + 1.0 / 2.0, 2.0)*-3.0 + pow(xi2*(1.0 / 2.0) + 1.0 / 2.0, 3.0)*2.0 + 1.0)) - weight2*(r0 - S*l*(xi2*(1.0 / 2.0) - 1.0 / 2.0))*((C*k*nu*(pow(xi2*(1.0 / 2.0) - 1.0 / 2.0, 2.0)*3.0 + pow(xi2*(1.0 / 2.0) - 1.0 / 2.0, 3.0)*2.0 - 1.0)) / (l*(r0 - S*l*(xi2*(1.0 / 2.0) - 1.0 / 2.0))) - C*S*k*1.0 / pow(r0 - S*l*(xi2*(1.0 / 2.0) - 1.0 / 2.0), 2.0)*(xi2*(1.0 / 2.0) + 1.0 / 2.0)*(pow(xi2*(1.0 / 2.0) - 1.0 / 2.0, 2.0)*3.0 + pow(xi2*(1.0 / 2.0) - 1.0 / 2.0, 3.0)*2.0 - 1.0))) + C*prmeter*(weight1*(r0 + S*l*(xi1*(1.0 / 2.0) + 1.0 / 2.0))*((k / l + (S*k*nu*(xi1*(1.0 / 2.0) - 1.0 / 2.0)) / (r0 + S*l*(xi1*(1.0 / 2.0) + 1.0 / 2.0))) / l + (S*(xi1*(1.0 / 2.0) - 1.0 / 2.0)*((k*nu) / l + (S*k*(xi1*(1.0 / 2.0) - 1.0 / 2.0)) / (r0 + S*l*(xi1*(1.0 / 2.0) + 1.0 / 2.0)))) / (r0 + S*l*(xi1*(1.0 / 2.0) + 1.0 / 2.0))) + weight1*(r0 - S*l*(xi1*(1.0 / 2.0) - 1.0 / 2.0))*((k / l - (S*k*nu*(xi1*(1.0 / 2.0) + 1.0 / 2.0)) / (r0 - S*l*(xi1*(1.0 / 2.0) - 1.0 / 2.0))) / l - (S*(xi1*(1.0 / 2.0) + 1.0 / 2.0)*((k*nu) / l - (S*k*(xi1*(1.0 / 2.0) + 1.0 / 2.0)) / (r0 - S*l*(xi1*(1.0 / 2.0) - 1.0 / 2.0)))) / (r0 - S*l*(xi1*(1.0 / 2.0) - 1.0 / 2.0))) + weight2*(r0 + S*l*(xi2*(1.0 / 2.0) + 1.0 / 2.0))*((k / l + (S*k*nu*(xi2*(1.0 / 2.0) - 1.0 / 2.0)) / (r0 + S*l*(xi2*(1.0 / 2.0) + 1.0 / 2.0))) / l + (S*(xi2*(1.0 / 2.0) - 1.0 / 2.0)*((k*nu) / l + (S*k*(xi2*(1.0 / 2.0) - 1.0 / 2.0)) / (r0 + S*l*(xi2*(1.0 / 2.0) + 1.0 / 2.0)))) / (r0 + S*l*(xi2*(1.0 / 2.0) + 1.0 / 2.0))) + weight2*(r0 - S*l*(xi2*(1.0 / 2.0) - 1.0 / 2.0))*((k / l - (S*k*nu*(xi2*(1.0 / 2.0) + 1.0 / 2.0)) / (r0 - S*l*(xi2*(1.0 / 2.0) - 1.0 / 2.0))) / l - (S*(xi2*(1.0 / 2.0) + 1.0 / 2.0)*((k*nu) / l - (S*k*(xi2*(1.0 / 2.0) + 1.0 / 2.0)) / (r0 - S*l*(xi2*(1.0 / 2.0) - 1.0 / 2.0)))) / (r0 - S*l*(xi2*(1.0 / 2.0) - 1.0 / 2.0)))));
	
	Matrix[3] = -C*(S*prmeter*(C*weight1*((k*nu) / l + (S*k*(xi1*(1.0 / 2.0) - 1.0 / 2.0)) / (r0 + S*l*(xi1*(1.0 / 2.0) + 1.0 / 2.0)))*(pow(xi1*(1.0 / 2.0) + 1.0 / 2.0, 2.0)*-3.0 + pow(xi1*(1.0 / 2.0) + 1.0 / 2.0, 3.0)*2.0 + 1.0) - C*weight1*((k*nu) / l - (S*k*(xi1*(1.0 / 2.0) + 1.0 / 2.0)) / (r0 - S*l*(xi1*(1.0 / 2.0) - 1.0 / 2.0)))*(pow(xi1*(1.0 / 2.0) - 1.0 / 2.0, 2.0)*3.0 + pow(xi1*(1.0 / 2.0) - 1.0 / 2.0, 3.0)*2.0 - 1.0) + C*weight2*((k*nu) / l + (S*k*(xi2*(1.0 / 2.0) - 1.0 / 2.0)) / (r0 + S*l*(xi2*(1.0 / 2.0) + 1.0 / 2.0)))*(pow(xi2*(1.0 / 2.0) + 1.0 / 2.0, 2.0)*-3.0 + pow(xi2*(1.0 / 2.0) + 1.0 / 2.0, 3.0)*2.0 + 1.0) - C*weight2*((k*nu) / l - (S*k*(xi2*(1.0 / 2.0) + 1.0 / 2.0)) / (r0 - S*l*(xi2*(1.0 / 2.0) - 1.0 / 2.0)))*(pow(xi2*(1.0 / 2.0) - 1.0 / 2.0, 2.0)*3.0 + pow(xi2*(1.0 / 2.0) - 1.0 / 2.0, 3.0)*2.0 - 1.0)) - C*prmeter*(weight1*(r0 + S*l*(xi1*(1.0 / 2.0) + 1.0 / 2.0))*(1.0 / (l*l)*xi1*((h*h)*k*1.0 / (l*l)*xi1*(1.0 / 2.0) - (S*(h*h)*k*nu*(xi1*3.0 - pow(xi1*(1.0 / 2.0) + 1.0 / 2.0, 2.0)*6.0 + 3.0)*(1.0 / 1.2E1)) / (l*(r0 + S*l*(xi1*(1.0 / 2.0) + 1.0 / 2.0))))*6.0 + (C*C)*k*1.0 / pow(r0 + S*l*(xi1*(1.0 / 2.0) + 1.0 / 2.0), 2.0)*pow(pow(xi1*(1.0 / 2.0) + 1.0 / 2.0, 2.0)*-3.0 + pow(xi1*(1.0 / 2.0) + 1.0 / 2.0, 3.0)*2.0 + 1.0, 2.0) - (S*((h*h)*k*1.0 / (l*l)*nu*xi1*(1.0 / 2.0) - (S*(h*h)*k*(xi1*3.0 - pow(xi1*(1.0 / 2.0) + 1.0 / 2.0, 2.0)*6.0 + 3.0)*(1.0 / 1.2E1)) / (l*(r0 + S*l*(xi1*(1.0 / 2.0) + 1.0 / 2.0))))*(xi1*3.0 - pow(xi1*(1.0 / 2.0) + 1.0 / 2.0, 2.0)*6.0 + 3.0)) / (l*(r0 + S*l*(xi1*(1.0 / 2.0) + 1.0 / 2.0)))) + weight1*(r0 - S*l*(xi1*(1.0 / 2.0) - 1.0 / 2.0))*(1.0 / (l*l)*xi1*((h*h)*k*1.0 / (l*l)*xi1*(1.0 / 2.0) - (S*(h*h)*k*nu*(xi1*3.0 + pow(xi1*(1.0 / 2.0) - 1.0 / 2.0, 2.0)*6.0 - 3.0)*(1.0 / 1.2E1)) / (l*(r0 - S*l*(xi1*(1.0 / 2.0) - 1.0 / 2.0))))*6.0 + (C*C)*k*1.0 / pow(r0 - S*l*(xi1*(1.0 / 2.0) - 1.0 / 2.0), 2.0)*pow(pow(xi1*(1.0 / 2.0) - 1.0 / 2.0, 2.0)*3.0 + pow(xi1*(1.0 / 2.0) - 1.0 / 2.0, 3.0)*2.0 - 1.0, 2.0) - (S*((h*h)*k*1.0 / (l*l)*nu*xi1*(1.0 / 2.0) - (S*(h*h)*k*(xi1*3.0 + pow(xi1*(1.0 / 2.0) - 1.0 / 2.0, 2.0)*6.0 - 3.0)*(1.0 / 1.2E1)) / (l*(r0 - S*l*(xi1*(1.0 / 2.0) - 1.0 / 2.0))))*(xi1*3.0 + pow(xi1*(1.0 / 2.0) - 1.0 / 2.0, 2.0)*6.0 - 3.0)) / (l*(r0 - S*l*(xi1*(1.0 / 2.0) - 1.0 / 2.0)))) + weight2*(r0 + S*l*(xi2*(1.0 / 2.0) + 1.0 / 2.0))*(1.0 / (l*l)*xi2*((h*h)*k*1.0 / (l*l)*xi2*(1.0 / 2.0) - (S*(h*h)*k*nu*(xi2*3.0 - pow(xi2*(1.0 / 2.0) + 1.0 / 2.0, 2.0)*6.0 + 3.0)*(1.0 / 1.2E1)) / (l*(r0 + S*l*(xi2*(1.0 / 2.0) + 1.0 / 2.0))))*6.0 + (C*C)*k*1.0 / pow(r0 + S*l*(xi2*(1.0 / 2.0) + 1.0 / 2.0), 2.0)*pow(pow(xi2*(1.0 / 2.0) + 1.0 / 2.0, 2.0)*-3.0 + pow(xi2*(1.0 / 2.0) + 1.0 / 2.0, 3.0)*2.0 + 1.0, 2.0) - (S*((h*h)*k*1.0 / (l*l)*nu*xi2*(1.0 / 2.0) - (S*(h*h)*k*(xi2*3.0 - pow(xi2*(1.0 / 2.0) + 1.0 / 2.0, 2.0)*6.0 + 3.0)*(1.0 / 1.2E1)) / (l*(r0 + S*l*(xi2*(1.0 / 2.0) + 1.0 / 2.0))))*(xi2*3.0 - pow(xi2*(1.0 / 2.0) + 1.0 / 2.0, 2.0)*6.0 + 3.0)) / (l*(r0 + S*l*(xi2*(1.0 / 2.0) + 1.0 / 2.0)))) + weight2*(r0 - S*l*(xi2*(1.0 / 2.0) - 1.0 / 2.0))*(1.0 / (l*l)*xi2*((h*h)*k*1.0 / (l*l)*xi2*(1.0 / 2.0) - (S*(h*h)*k*nu*(xi2*3.0 + pow(xi2*(1.0 / 2.0) - 1.0 / 2.0, 2.0)*6.0 - 3.0)*(1.0 / 1.2E1)) / (l*(r0 - S*l*(xi2*(1.0 / 2.0) - 1.0 / 2.0))))*6.0 + (C*C)*k*1.0 / pow(r0 - S*l*(xi2*(1.0 / 2.0) - 1.0 / 2.0), 2.0)*pow(pow(xi2*(1.0 / 2.0) - 1.0 / 2.0, 2.0)*3.0 + pow(xi2*(1.0 / 2.0) - 1.0 / 2.0, 3.0)*2.0 - 1.0, 2.0) - (S*((h*h)*k*1.0 / (l*l)*nu*xi2*(1.0 / 2.0) - (S*(h*h)*k*(xi2*3.0 + pow(xi2*(1.0 / 2.0) - 1.0 / 2.0, 2.0)*6.0 - 3.0)*(1.0 / 1.2E1)) / (l*(r0 - S*l*(xi2*(1.0 / 2.0) - 1.0 / 2.0))))*(xi2*3.0 + pow(xi2*(1.0 / 2.0) - 1.0 / 2.0, 2.0)*6.0 - 3.0)) / (l*(r0 - S*l*(xi2*(1.0 / 2.0) - 1.0 / 2.0)))))) + S*(S*prmeter*(weight1*(r0 + S*l*(xi1*(1.0 / 2.0) + 1.0 / 2.0))*((k / l + (S*k*nu*(xi1*(1.0 / 2.0) - 1.0 / 2.0)) / (r0 + S*l*(xi1*(1.0 / 2.0) + 1.0 / 2.0))) / l + (S*(xi1*(1.0 / 2.0) - 1.0 / 2.0)*((k*nu) / l + (S*k*(xi1*(1.0 / 2.0) - 1.0 / 2.0)) / (r0 + S*l*(xi1*(1.0 / 2.0) + 1.0 / 2.0)))) / (r0 + S*l*(xi1*(1.0 / 2.0) + 1.0 / 2.0))) + weight1*(r0 - S*l*(xi1*(1.0 / 2.0) - 1.0 / 2.0))*((k / l - (S*k*nu*(xi1*(1.0 / 2.0) + 1.0 / 2.0)) / (r0 - S*l*(xi1*(1.0 / 2.0) - 1.0 / 2.0))) / l - (S*(xi1*(1.0 / 2.0) + 1.0 / 2.0)*((k*nu) / l - (S*k*(xi1*(1.0 / 2.0) + 1.0 / 2.0)) / (r0 - S*l*(xi1*(1.0 / 2.0) - 1.0 / 2.0)))) / (r0 - S*l*(xi1*(1.0 / 2.0) - 1.0 / 2.0))) + weight2*(r0 + S*l*(xi2*(1.0 / 2.0) + 1.0 / 2.0))*((k / l + (S*k*nu*(xi2*(1.0 / 2.0) - 1.0 / 2.0)) / (r0 + S*l*(xi2*(1.0 / 2.0) + 1.0 / 2.0))) / l + (S*(xi2*(1.0 / 2.0) - 1.0 / 2.0)*((k*nu) / l + (S*k*(xi2*(1.0 / 2.0) - 1.0 / 2.0)) / (r0 + S*l*(xi2*(1.0 / 2.0) + 1.0 / 2.0)))) / (r0 + S*l*(xi2*(1.0 / 2.0) + 1.0 / 2.0))) + weight2*(r0 - S*l*(xi2*(1.0 / 2.0) - 1.0 / 2.0))*((k / l - (S*k*nu*(xi2*(1.0 / 2.0) + 1.0 / 2.0)) / (r0 - S*l*(xi2*(1.0 / 2.0) - 1.0 / 2.0))) / l - (S*(xi2*(1.0 / 2.0) + 1.0 / 2.0)*((k*nu) / l - (S*k*(xi2*(1.0 / 2.0) + 1.0 / 2.0)) / (r0 - S*l*(xi2*(1.0 / 2.0) - 1.0 / 2.0)))) / (r0 - S*l*(xi2*(1.0 / 2.0) - 1.0 / 2.0)))) - C*prmeter*(weight1*(r0 + S*l*(xi1*(1.0 / 2.0) + 1.0 / 2.0))*((C*k*nu*(pow(xi1*(1.0 / 2.0) + 1.0 / 2.0, 2.0)*-3.0 + pow(xi1*(1.0 / 2.0) + 1.0 / 2.0, 3.0)*2.0 + 1.0)) / (l*(r0 + S*l*(xi1*(1.0 / 2.0) + 1.0 / 2.0))) + C*S*k*1.0 / pow(r0 + S*l*(xi1*(1.0 / 2.0) + 1.0 / 2.0), 2.0)*(xi1*(1.0 / 2.0) - 1.0 / 2.0)*(pow(xi1*(1.0 / 2.0) + 1.0 / 2.0, 2.0)*-3.0 + pow(xi1*(1.0 / 2.0) + 1.0 / 2.0, 3.0)*2.0 + 1.0)) - weight1*(r0 - S*l*(xi1*(1.0 / 2.0) - 1.0 / 2.0))*((C*k*nu*(pow(xi1*(1.0 / 2.0) - 1.0 / 2.0, 2.0)*3.0 + pow(xi1*(1.0 / 2.0) - 1.0 / 2.0, 3.0)*2.0 - 1.0)) / (l*(r0 - S*l*(xi1*(1.0 / 2.0) - 1.0 / 2.0))) - C*S*k*1.0 / pow(r0 - S*l*(xi1*(1.0 / 2.0) - 1.0 / 2.0), 2.0)*(xi1*(1.0 / 2.0) + 1.0 / 2.0)*(pow(xi1*(1.0 / 2.0) - 1.0 / 2.0, 2.0)*3.0 + pow(xi1*(1.0 / 2.0) - 1.0 / 2.0, 3.0)*2.0 - 1.0)) + weight2*(r0 + S*l*(xi2*(1.0 / 2.0) + 1.0 / 2.0))*((C*k*nu*(pow(xi2*(1.0 / 2.0) + 1.0 / 2.0, 2.0)*-3.0 + pow(xi2*(1.0 / 2.0) + 1.0 / 2.0, 3.0)*2.0 + 1.0)) / (l*(r0 + S*l*(xi2*(1.0 / 2.0) + 1.0 / 2.0))) + C*S*k*1.0 / pow(r0 + S*l*(xi2*(1.0 / 2.0) + 1.0 / 2.0), 2.0)*(xi2*(1.0 / 2.0) - 1.0 / 2.0)*(pow(xi2*(1.0 / 2.0) + 1.0 / 2.0, 2.0)*-3.0 + pow(xi2*(1.0 / 2.0) + 1.0 / 2.0, 3.0)*2.0 + 1.0)) - weight2*(r0 - S*l*(xi2*(1.0 / 2.0) - 1.0 / 2.0))*((C*k*nu*(pow(xi2*(1.0 / 2.0) - 1.0 / 2.0, 2.0)*3.0 + pow(xi2*(1.0 / 2.0) - 1.0 / 2.0, 3.0)*2.0 - 1.0)) / (l*(r0 - S*l*(xi2*(1.0 / 2.0) - 1.0 / 2.0))) - C*S*k*1.0 / pow(r0 - S*l*(xi2*(1.0 / 2.0) - 1.0 / 2.0), 2.0)*(xi2*(1.0 / 2.0) + 1.0 / 2.0)*(pow(xi2*(1.0 / 2.0) - 1.0 / 2.0, 2.0)*3.0 + pow(xi2*(1.0 / 2.0) - 1.0 / 2.0, 3.0)*2.0 - 1.0))));
	Matrix[5] = -C*(C*prmeter*(C*weight1*((k*nu) / l + (S*k*(xi1*(1.0 / 2.0) - 1.0 / 2.0)) / (r0 + S*l*(xi1*(1.0 / 2.0) + 1.0 / 2.0)))*(pow(xi1*(1.0 / 2.0) + 1.0 / 2.0, 2.0)*-3.0 + pow(xi1*(1.0 / 2.0) + 1.0 / 2.0, 3.0)*2.0 + 1.0) - C*weight1*((k*nu) / l - (S*k*(xi1*(1.0 / 2.0) + 1.0 / 2.0)) / (r0 - S*l*(xi1*(1.0 / 2.0) - 1.0 / 2.0)))*(pow(xi1*(1.0 / 2.0) - 1.0 / 2.0, 2.0)*3.0 + pow(xi1*(1.0 / 2.0) - 1.0 / 2.0, 3.0)*2.0 - 1.0) + C*weight2*((k*nu) / l + (S*k*(xi2*(1.0 / 2.0) - 1.0 / 2.0)) / (r0 + S*l*(xi2*(1.0 / 2.0) + 1.0 / 2.0)))*(pow(xi2*(1.0 / 2.0) + 1.0 / 2.0, 2.0)*-3.0 + pow(xi2*(1.0 / 2.0) + 1.0 / 2.0, 3.0)*2.0 + 1.0) - C*weight2*((k*nu) / l - (S*k*(xi2*(1.0 / 2.0) + 1.0 / 2.0)) / (r0 - S*l*(xi2*(1.0 / 2.0) - 1.0 / 2.0)))*(pow(xi2*(1.0 / 2.0) - 1.0 / 2.0, 2.0)*3.0 + pow(xi2*(1.0 / 2.0) - 1.0 / 2.0, 3.0)*2.0 - 1.0)) + S*prmeter*(weight1*(r0 + S*l*(xi1*(1.0 / 2.0) + 1.0 / 2.0))*(1.0 / (l*l)*xi1*((h*h)*k*1.0 / (l*l)*xi1*(1.0 / 2.0) - (S*(h*h)*k*nu*(xi1*3.0 - pow(xi1*(1.0 / 2.0) + 1.0 / 2.0, 2.0)*6.0 + 3.0)*(1.0 / 1.2E1)) / (l*(r0 + S*l*(xi1*(1.0 / 2.0) + 1.0 / 2.0))))*6.0 + (C*C)*k*1.0 / pow(r0 + S*l*(xi1*(1.0 / 2.0) + 1.0 / 2.0), 2.0)*pow(pow(xi1*(1.0 / 2.0) + 1.0 / 2.0, 2.0)*-3.0 + pow(xi1*(1.0 / 2.0) + 1.0 / 2.0, 3.0)*2.0 + 1.0, 2.0) - (S*((h*h)*k*1.0 / (l*l)*nu*xi1*(1.0 / 2.0) - (S*(h*h)*k*(xi1*3.0 - pow(xi1*(1.0 / 2.0) + 1.0 / 2.0, 2.0)*6.0 + 3.0)*(1.0 / 1.2E1)) / (l*(r0 + S*l*(xi1*(1.0 / 2.0) + 1.0 / 2.0))))*(xi1*3.0 - pow(xi1*(1.0 / 2.0) + 1.0 / 2.0, 2.0)*6.0 + 3.0)) / (l*(r0 + S*l*(xi1*(1.0 / 2.0) + 1.0 / 2.0)))) + weight1*(r0 - S*l*(xi1*(1.0 / 2.0) - 1.0 / 2.0))*(1.0 / (l*l)*xi1*((h*h)*k*1.0 / (l*l)*xi1*(1.0 / 2.0) - (S*(h*h)*k*nu*(xi1*3.0 + pow(xi1*(1.0 / 2.0) - 1.0 / 2.0, 2.0)*6.0 - 3.0)*(1.0 / 1.2E1)) / (l*(r0 - S*l*(xi1*(1.0 / 2.0) - 1.0 / 2.0))))*6.0 + (C*C)*k*1.0 / pow(r0 - S*l*(xi1*(1.0 / 2.0) - 1.0 / 2.0), 2.0)*pow(pow(xi1*(1.0 / 2.0) - 1.0 / 2.0, 2.0)*3.0 + pow(xi1*(1.0 / 2.0) - 1.0 / 2.0, 3.0)*2.0 - 1.0, 2.0) - (S*((h*h)*k*1.0 / (l*l)*nu*xi1*(1.0 / 2.0) - (S*(h*h)*k*(xi1*3.0 + pow(xi1*(1.0 / 2.0) - 1.0 / 2.0, 2.0)*6.0 - 3.0)*(1.0 / 1.2E1)) / (l*(r0 - S*l*(xi1*(1.0 / 2.0) - 1.0 / 2.0))))*(xi1*3.0 + pow(xi1*(1.0 / 2.0) - 1.0 / 2.0, 2.0)*6.0 - 3.0)) / (l*(r0 - S*l*(xi1*(1.0 / 2.0) - 1.0 / 2.0)))) + weight2*(r0 + S*l*(xi2*(1.0 / 2.0) + 1.0 / 2.0))*(1.0 / (l*l)*xi2*((h*h)*k*1.0 / (l*l)*xi2*(1.0 / 2.0) - (S*(h*h)*k*nu*(xi2*3.0 - pow(xi2*(1.0 / 2.0) + 1.0 / 2.0, 2.0)*6.0 + 3.0)*(1.0 / 1.2E1)) / (l*(r0 + S*l*(xi2*(1.0 / 2.0) + 1.0 / 2.0))))*6.0 + (C*C)*k*1.0 / pow(r0 + S*l*(xi2*(1.0 / 2.0) + 1.0 / 2.0), 2.0)*pow(pow(xi2*(1.0 / 2.0) + 1.0 / 2.0, 2.0)*-3.0 + pow(xi2*(1.0 / 2.0) + 1.0 / 2.0, 3.0)*2.0 + 1.0, 2.0) - (S*((h*h)*k*1.0 / (l*l)*nu*xi2*(1.0 / 2.0) - (S*(h*h)*k*(xi2*3.0 - pow(xi2*(1.0 / 2.0) + 1.0 / 2.0, 2.0)*6.0 + 3.0)*(1.0 / 1.2E1)) / (l*(r0 + S*l*(xi2*(1.0 / 2.0) + 1.0 / 2.0))))*(xi2*3.0 - pow(xi2*(1.0 / 2.0) + 1.0 / 2.0, 2.0)*6.0 + 3.0)) / (l*(r0 + S*l*(xi2*(1.0 / 2.0) + 1.0 / 2.0)))) + weight2*(r0 - S*l*(xi2*(1.0 / 2.0) - 1.0 / 2.0))*(1.0 / (l*l)*xi2*((h*h)*k*1.0 / (l*l)*xi2*(1.0 / 2.0) - (S*(h*h)*k*nu*(xi2*3.0 + pow(xi2*(1.0 / 2.0) - 1.0 / 2.0, 2.0)*6.0 - 3.0)*(1.0 / 1.2E1)) / (l*(r0 - S*l*(xi2*(1.0 / 2.0) - 1.0 / 2.0))))*6.0 + (C*C)*k*1.0 / pow(r0 - S*l*(xi2*(1.0 / 2.0) - 1.0 / 2.0), 2.0)*pow(pow(xi2*(1.0 / 2.0) - 1.0 / 2.0, 2.0)*3.0 + pow(xi2*(1.0 / 2.0) - 1.0 / 2.0, 3.0)*2.0 - 1.0, 2.0) - (S*((h*h)*k*1.0 / (l*l)*nu*xi2*(1.0 / 2.0) - (S*(h*h)*k*(xi2*3.0 + pow(xi2*(1.0 / 2.0) - 1.0 / 2.0, 2.0)*6.0 - 3.0)*(1.0 / 1.2E1)) / (l*(r0 - S*l*(xi2*(1.0 / 2.0) - 1.0 / 2.0))))*(xi2*3.0 + pow(xi2*(1.0 / 2.0) - 1.0 / 2.0, 2.0)*6.0 - 3.0)) / (l*(r0 - S*l*(xi2*(1.0 / 2.0) - 1.0 / 2.0)))))) + S*(S*prmeter*(weight1*(r0 + S*l*(xi1*(1.0 / 2.0) + 1.0 / 2.0))*((C*k*nu*(pow(xi1*(1.0 / 2.0) + 1.0 / 2.0, 2.0)*-3.0 + pow(xi1*(1.0 / 2.0) + 1.0 / 2.0, 3.0)*2.0 + 1.0)) / (l*(r0 + S*l*(xi1*(1.0 / 2.0) + 1.0 / 2.0))) + C*S*k*1.0 / pow(r0 + S*l*(xi1*(1.0 / 2.0) + 1.0 / 2.0), 2.0)*(xi1*(1.0 / 2.0) - 1.0 / 2.0)*(pow(xi1*(1.0 / 2.0) + 1.0 / 2.0, 2.0)*-3.0 + pow(xi1*(1.0 / 2.0) + 1.0 / 2.0, 3.0)*2.0 + 1.0)) - weight1*(r0 - S*l*(xi1*(1.0 / 2.0) - 1.0 / 2.0))*((C*k*nu*(pow(xi1*(1.0 / 2.0) - 1.0 / 2.0, 2.0)*3.0 + pow(xi1*(1.0 / 2.0) - 1.0 / 2.0, 3.0)*2.0 - 1.0)) / (l*(r0 - S*l*(xi1*(1.0 / 2.0) - 1.0 / 2.0))) - C*S*k*1.0 / pow(r0 - S*l*(xi1*(1.0 / 2.0) - 1.0 / 2.0), 2.0)*(xi1*(1.0 / 2.0) + 1.0 / 2.0)*(pow(xi1*(1.0 / 2.0) - 1.0 / 2.0, 2.0)*3.0 + pow(xi1*(1.0 / 2.0) - 1.0 / 2.0, 3.0)*2.0 - 1.0)) + weight2*(r0 + S*l*(xi2*(1.0 / 2.0) + 1.0 / 2.0))*((C*k*nu*(pow(xi2*(1.0 / 2.0) + 1.0 / 2.0, 2.0)*-3.0 + pow(xi2*(1.0 / 2.0) + 1.0 / 2.0, 3.0)*2.0 + 1.0)) / (l*(r0 + S*l*(xi2*(1.0 / 2.0) + 1.0 / 2.0))) + C*S*k*1.0 / pow(r0 + S*l*(xi2*(1.0 / 2.0) + 1.0 / 2.0), 2.0)*(xi2*(1.0 / 2.0) - 1.0 / 2.0)*(pow(xi2*(1.0 / 2.0) + 1.0 / 2.0, 2.0)*-3.0 + pow(xi2*(1.0 / 2.0) + 1.0 / 2.0, 3.0)*2.0 + 1.0)) - weight2*(r0 - S*l*(xi2*(1.0 / 2.0) - 1.0 / 2.0))*((C*k*nu*(pow(xi2*(1.0 / 2.0) - 1.0 / 2.0, 2.0)*3.0 + pow(xi2*(1.0 / 2.0) - 1.0 / 2.0, 3.0)*2.0 - 1.0)) / (l*(r0 - S*l*(xi2*(1.0 / 2.0) - 1.0 / 2.0))) - C*S*k*1.0 / pow(r0 - S*l*(xi2*(1.0 / 2.0) - 1.0 / 2.0), 2.0)*(xi2*(1.0 / 2.0) + 1.0 / 2.0)*(pow(xi2*(1.0 / 2.0) - 1.0 / 2.0, 2.0)*3.0 + pow(xi2*(1.0 / 2.0) - 1.0 / 2.0, 3.0)*2.0 - 1.0))) + C*prmeter*(weight1*(r0 + S*l*(xi1*(1.0 / 2.0) + 1.0 / 2.0))*((k / l + (S*k*nu*(xi1*(1.0 / 2.0) - 1.0 / 2.0)) / (r0 + S*l*(xi1*(1.0 / 2.0) + 1.0 / 2.0))) / l + (S*(xi1*(1.0 / 2.0) - 1.0 / 2.0)*((k*nu) / l + (S*k*(xi1*(1.0 / 2.0) - 1.0 / 2.0)) / (r0 + S*l*(xi1*(1.0 / 2.0) + 1.0 / 2.0)))) / (r0 + S*l*(xi1*(1.0 / 2.0) + 1.0 / 2.0))) + weight1*(r0 - S*l*(xi1*(1.0 / 2.0) - 1.0 / 2.0))*((k / l - (S*k*nu*(xi1*(1.0 / 2.0) + 1.0 / 2.0)) / (r0 - S*l*(xi1*(1.0 / 2.0) - 1.0 / 2.0))) / l - (S*(xi1*(1.0 / 2.0) + 1.0 / 2.0)*((k*nu) / l - (S*k*(xi1*(1.0 / 2.0) + 1.0 / 2.0)) / (r0 - S*l*(xi1*(1.0 / 2.0) - 1.0 / 2.0)))) / (r0 - S*l*(xi1*(1.0 / 2.0) - 1.0 / 2.0))) + weight2*(r0 + S*l*(xi2*(1.0 / 2.0) + 1.0 / 2.0))*((k / l + (S*k*nu*(xi2*(1.0 / 2.0) - 1.0 / 2.0)) / (r0 + S*l*(xi2*(1.0 / 2.0) + 1.0 / 2.0))) / l + (S*(xi2*(1.0 / 2.0) - 1.0 / 2.0)*((k*nu) / l + (S*k*(xi2*(1.0 / 2.0) - 1.0 / 2.0)) / (r0 + S*l*(xi2*(1.0 / 2.0) + 1.0 / 2.0)))) / (r0 + S*l*(xi2*(1.0 / 2.0) + 1.0 / 2.0))) + weight2*(r0 - S*l*(xi2*(1.0 / 2.0) - 1.0 / 2.0))*((k / l - (S*k*nu*(xi2*(1.0 / 2.0) + 1.0 / 2.0)) / (r0 - S*l*(xi2*(1.0 / 2.0) - 1.0 / 2.0))) / l - (S*(xi2*(1.0 / 2.0) + 1.0 / 2.0)*((k*nu) / l - (S*k*(xi2*(1.0 / 2.0) + 1.0 / 2.0)) / (r0 - S*l*(xi2*(1.0 / 2.0) - 1.0 / 2.0)))) / (r0 - S*l*(xi2*(1.0 / 2.0) - 1.0 / 2.0)))));
	
	Matrix[10] = prmeter*(weight1*(r0 + S*l*(xi1*(1.0 / 2.0) + 1.0 / 2.0))*(((xi1*3.0 - 1.0)*(((h*h)*k*(xi1*3.0 - 1.0)*(1.0 / 1.2E1)) / l - (S*(h*h)*k*nu*(xi1*2.0 - pow(xi1*(1.0 / 2.0) + 1.0 / 2.0, 2.0)*3.0 + 1.0)*(1.0 / 1.2E1)) / (r0 + S*l*(xi1*(1.0 / 2.0) + 1.0 / 2.0)))) / l - (S*(((h*h)*k*nu*(xi1*3.0 - 1.0)*(1.0 / 1.2E1)) / l - (S*(h*h)*k*(xi1*2.0 - pow(xi1*(1.0 / 2.0) + 1.0 / 2.0, 2.0)*3.0 + 1.0)*(1.0 / 1.2E1)) / (r0 + S*l*(xi1*(1.0 / 2.0) + 1.0 / 2.0)))*(xi1*2.0 - pow(xi1*(1.0 / 2.0) + 1.0 / 2.0, 2.0)*3.0 + 1.0)) / (r0 + S*l*(xi1*(1.0 / 2.0) + 1.0 / 2.0)) + (C*C)*k*(l*l)*1.0 / pow(r0 + S*l*(xi1*(1.0 / 2.0) + 1.0 / 2.0), 2.0)*pow(xi1*(1.0 / 2.0) - pow(xi1*(1.0 / 2.0) + 1.0 / 2.0, 2.0)*2.0 + pow(xi1*(1.0 / 2.0) + 1.0 / 2.0, 3.0) + 1.0 / 2.0, 2.0)) + weight1*(r0 - S*l*(xi1*(1.0 / 2.0) - 1.0 / 2.0))*(((xi1*3.0 + 1.0)*(((h*h)*k*(xi1*3.0 + 1.0)*(1.0 / 1.2E1)) / l - (S*(h*h)*k*nu*(xi1*2.0 + pow(xi1*(1.0 / 2.0) - 1.0 / 2.0, 2.0)*3.0 - 1.0)*(1.0 / 1.2E1)) / (r0 - S*l*(xi1*(1.0 / 2.0) - 1.0 / 2.0)))) / l - (S*(((h*h)*k*nu*(xi1*3.0 + 1.0)*(1.0 / 1.2E1)) / l - (S*(h*h)*k*(xi1*2.0 + pow(xi1*(1.0 / 2.0) - 1.0 / 2.0, 2.0)*3.0 - 1.0)*(1.0 / 1.2E1)) / (r0 - S*l*(xi1*(1.0 / 2.0) - 1.0 / 2.0)))*(xi1*2.0 + pow(xi1*(1.0 / 2.0) - 1.0 / 2.0, 2.0)*3.0 - 1.0)) / (r0 - S*l*(xi1*(1.0 / 2.0) - 1.0 / 2.0)) + (C*C)*k*(l*l)*1.0 / pow(r0 - S*l*(xi1*(1.0 / 2.0) - 1.0 / 2.0), 2.0)*pow(xi1*(1.0 / 2.0) + pow(xi1*(1.0 / 2.0) - 1.0 / 2.0, 2.0)*2.0 + pow(xi1*(1.0 / 2.0) - 1.0 / 2.0, 3.0) - 1.0 / 2.0, 2.0)) + weight2*(r0 + S*l*(xi2*(1.0 / 2.0) + 1.0 / 2.0))*(((xi2*3.0 - 1.0)*(((h*h)*k*(xi2*3.0 - 1.0)*(1.0 / 1.2E1)) / l - (S*(h*h)*k*nu*(xi2*2.0 - pow(xi2*(1.0 / 2.0) + 1.0 / 2.0, 2.0)*3.0 + 1.0)*(1.0 / 1.2E1)) / (r0 + S*l*(xi2*(1.0 / 2.0) + 1.0 / 2.0)))) / l - (S*(((h*h)*k*nu*(xi2*3.0 - 1.0)*(1.0 / 1.2E1)) / l - (S*(h*h)*k*(xi2*2.0 - pow(xi2*(1.0 / 2.0) + 1.0 / 2.0, 2.0)*3.0 + 1.0)*(1.0 / 1.2E1)) / (r0 + S*l*(xi2*(1.0 / 2.0) + 1.0 / 2.0)))*(xi2*2.0 - pow(xi2*(1.0 / 2.0) + 1.0 / 2.0, 2.0)*3.0 + 1.0)) / (r0 + S*l*(xi2*(1.0 / 2.0) + 1.0 / 2.0)) + (C*C)*k*(l*l)*1.0 / pow(r0 + S*l*(xi2*(1.0 / 2.0) + 1.0 / 2.0), 2.0)*pow(xi2*(1.0 / 2.0) - pow(xi2*(1.0 / 2.0) + 1.0 / 2.0, 2.0)*2.0 + pow(xi2*(1.0 / 2.0) + 1.0 / 2.0, 3.0) + 1.0 / 2.0, 2.0)) + weight2*(r0 - S*l*(xi2*(1.0 / 2.0) - 1.0 / 2.0))*(((xi2*3.0 + 1.0)*(((h*h)*k*(xi2*3.0 + 1.0)*(1.0 / 1.2E1)) / l - (S*(h*h)*k*nu*(xi2*2.0 + pow(xi2*(1.0 / 2.0) - 1.0 / 2.0, 2.0)*3.0 - 1.0)*(1.0 / 1.2E1)) / (r0 - S*l*(xi2*(1.0 / 2.0) - 1.0 / 2.0)))) / l - (S*(((h*h)*k*nu*(xi2*3.0 + 1.0)*(1.0 / 1.2E1)) / l - (S*(h*h)*k*(xi2*2.0 + pow(xi2*(1.0 / 2.0) - 1.0 / 2.0, 2.0)*3.0 - 1.0)*(1.0 / 1.2E1)) / (r0 - S*l*(xi2*(1.0 / 2.0) - 1.0 / 2.0)))*(xi2*2.0 + pow(xi2*(1.0 / 2.0) - 1.0 / 2.0, 2.0)*3.0 - 1.0)) / (r0 - S*l*(xi2*(1.0 / 2.0) - 1.0 / 2.0)) + (C*C)*k*(l*l)*1.0 / pow(r0 - S*l*(xi2*(1.0 / 2.0) - 1.0 / 2.0), 2.0)*pow(xi2*(1.0 / 2.0) + pow(xi2*(1.0 / 2.0) - 1.0 / 2.0, 2.0)*2.0 + pow(xi2*(1.0 / 2.0) - 1.0 / 2.0, 3.0) - 1.0 / 2.0, 2.0)));
	Matrix[12] = C*prmeter*(weight1*(r0 + S*l*(xi1*(1.0 / 2.0) + 1.0 / 2.0))*((((h*h)*k*1.0 / (l*l)*xi1*(1.0 / 2.0) - (S*(h*h)*k*nu*(xi1*3.0 - pow(xi1*(1.0 / 2.0) + 1.0 / 2.0, 2.0)*6.0 + 3.0)*(1.0 / 1.2E1)) / (l*(r0 + S*l*(xi1*(1.0 / 2.0) + 1.0 / 2.0))))*(xi1*3.0 - 1.0)) / l - (S*((h*h)*k*1.0 / (l*l)*nu*xi1*(1.0 / 2.0) - (S*(h*h)*k*(xi1*3.0 - pow(xi1*(1.0 / 2.0) + 1.0 / 2.0, 2.0)*6.0 + 3.0)*(1.0 / 1.2E1)) / (l*(r0 + S*l*(xi1*(1.0 / 2.0) + 1.0 / 2.0))))*(xi1*2.0 - pow(xi1*(1.0 / 2.0) + 1.0 / 2.0, 2.0)*3.0 + 1.0)) / (r0 + S*l*(xi1*(1.0 / 2.0) + 1.0 / 2.0)) + (C*C)*k*l*1.0 / pow(r0 + S*l*(xi1*(1.0 / 2.0) + 1.0 / 2.0), 2.0)*(pow(xi1*(1.0 / 2.0) + 1.0 / 2.0, 2.0)*-3.0 + pow(xi1*(1.0 / 2.0) + 1.0 / 2.0, 3.0)*2.0 + 1.0)*(xi1*(1.0 / 2.0) - pow(xi1*(1.0 / 2.0) + 1.0 / 2.0, 2.0)*2.0 + pow(xi1*(1.0 / 2.0) + 1.0 / 2.0, 3.0) + 1.0 / 2.0)) + weight1*(r0 - S*l*(xi1*(1.0 / 2.0) - 1.0 / 2.0))*((((h*h)*k*1.0 / (l*l)*xi1*(1.0 / 2.0) - (S*(h*h)*k*nu*(xi1*3.0 + pow(xi1*(1.0 / 2.0) - 1.0 / 2.0, 2.0)*6.0 - 3.0)*(1.0 / 1.2E1)) / (l*(r0 - S*l*(xi1*(1.0 / 2.0) - 1.0 / 2.0))))*(xi1*3.0 + 1.0)) / l - (S*((h*h)*k*1.0 / (l*l)*nu*xi1*(1.0 / 2.0) - (S*(h*h)*k*(xi1*3.0 + pow(xi1*(1.0 / 2.0) - 1.0 / 2.0, 2.0)*6.0 - 3.0)*(1.0 / 1.2E1)) / (l*(r0 - S*l*(xi1*(1.0 / 2.0) - 1.0 / 2.0))))*(xi1*2.0 + pow(xi1*(1.0 / 2.0) - 1.0 / 2.0, 2.0)*3.0 - 1.0)) / (r0 - S*l*(xi1*(1.0 / 2.0) - 1.0 / 2.0)) + (C*C)*k*l*1.0 / pow(r0 - S*l*(xi1*(1.0 / 2.0) - 1.0 / 2.0), 2.0)*(pow(xi1*(1.0 / 2.0) - 1.0 / 2.0, 2.0)*3.0 + pow(xi1*(1.0 / 2.0) - 1.0 / 2.0, 3.0)*2.0 - 1.0)*(xi1*(1.0 / 2.0) + pow(xi1*(1.0 / 2.0) - 1.0 / 2.0, 2.0)*2.0 + pow(xi1*(1.0 / 2.0) - 1.0 / 2.0, 3.0) - 1.0 / 2.0)) + weight2*(r0 + S*l*(xi2*(1.0 / 2.0) + 1.0 / 2.0))*((((h*h)*k*1.0 / (l*l)*xi2*(1.0 / 2.0) - (S*(h*h)*k*nu*(xi2*3.0 - pow(xi2*(1.0 / 2.0) + 1.0 / 2.0, 2.0)*6.0 + 3.0)*(1.0 / 1.2E1)) / (l*(r0 + S*l*(xi2*(1.0 / 2.0) + 1.0 / 2.0))))*(xi2*3.0 - 1.0)) / l - (S*((h*h)*k*1.0 / (l*l)*nu*xi2*(1.0 / 2.0) - (S*(h*h)*k*(xi2*3.0 - pow(xi2*(1.0 / 2.0) + 1.0 / 2.0, 2.0)*6.0 + 3.0)*(1.0 / 1.2E1)) / (l*(r0 + S*l*(xi2*(1.0 / 2.0) + 1.0 / 2.0))))*(xi2*2.0 - pow(xi2*(1.0 / 2.0) + 1.0 / 2.0, 2.0)*3.0 + 1.0)) / (r0 + S*l*(xi2*(1.0 / 2.0) + 1.0 / 2.0)) + (C*C)*k*l*1.0 / pow(r0 + S*l*(xi2*(1.0 / 2.0) + 1.0 / 2.0), 2.0)*(pow(xi2*(1.0 / 2.0) + 1.0 / 2.0, 2.0)*-3.0 + pow(xi2*(1.0 / 2.0) + 1.0 / 2.0, 3.0)*2.0 + 1.0)*(xi2*(1.0 / 2.0) - pow(xi2*(1.0 / 2.0) + 1.0 / 2.0, 2.0)*2.0 + pow(xi2*(1.0 / 2.0) + 1.0 / 2.0, 3.0) + 1.0 / 2.0)) + weight2*(r0 - S*l*(xi2*(1.0 / 2.0) - 1.0 / 2.0))*((((h*h)*k*1.0 / (l*l)*xi2*(1.0 / 2.0) - (S*(h*h)*k*nu*(xi2*3.0 + pow(xi2*(1.0 / 2.0) - 1.0 / 2.0, 2.0)*6.0 - 3.0)*(1.0 / 1.2E1)) / (l*(r0 - S*l*(xi2*(1.0 / 2.0) - 1.0 / 2.0))))*(xi2*3.0 + 1.0)) / l - (S*((h*h)*k*1.0 / (l*l)*nu*xi2*(1.0 / 2.0) - (S*(h*h)*k*(xi2*3.0 + pow(xi2*(1.0 / 2.0) - 1.0 / 2.0, 2.0)*6.0 - 3.0)*(1.0 / 1.2E1)) / (l*(r0 - S*l*(xi2*(1.0 / 2.0) - 1.0 / 2.0))))*(xi2*2.0 + pow(xi2*(1.0 / 2.0) - 1.0 / 2.0, 2.0)*3.0 - 1.0)) / (r0 - S*l*(xi2*(1.0 / 2.0) - 1.0 / 2.0)) + (C*C)*k*l*1.0 / pow(r0 - S*l*(xi2*(1.0 / 2.0) - 1.0 / 2.0), 2.0)*(pow(xi2*(1.0 / 2.0) - 1.0 / 2.0, 2.0)*3.0 + pow(xi2*(1.0 / 2.0) - 1.0 / 2.0, 3.0)*2.0 - 1.0)*(xi2*(1.0 / 2.0) + pow(xi2*(1.0 / 2.0) - 1.0 / 2.0, 2.0)*2.0 + pow(xi2*(1.0 / 2.0) - 1.0 / 2.0, 3.0) - 1.0 / 2.0))) - S*prmeter*(C*l*weight1*((k*nu) / l + (S*k*(xi1*(1.0 / 2.0) - 1.0 / 2.0)) / (r0 + S*l*(xi1*(1.0 / 2.0) + 1.0 / 2.0)))*(xi1*(1.0 / 2.0) - pow(xi1*(1.0 / 2.0) + 1.0 / 2.0, 2.0)*2.0 + pow(xi1*(1.0 / 2.0) + 1.0 / 2.0, 3.0) + 1.0 / 2.0) - C*l*weight1*((k*nu) / l - (S*k*(xi1*(1.0 / 2.0) + 1.0 / 2.0)) / (r0 - S*l*(xi1*(1.0 / 2.0) - 1.0 / 2.0)))*(xi1*(1.0 / 2.0) + pow(xi1*(1.0 / 2.0) - 1.0 / 2.0, 2.0)*2.0 + pow(xi1*(1.0 / 2.0) - 1.0 / 2.0, 3.0) - 1.0 / 2.0) + C*l*weight2*((k*nu) / l + (S*k*(xi2*(1.0 / 2.0) - 1.0 / 2.0)) / (r0 + S*l*(xi2*(1.0 / 2.0) + 1.0 / 2.0)))*(xi2*(1.0 / 2.0) - pow(xi2*(1.0 / 2.0) + 1.0 / 2.0, 2.0)*2.0 + pow(xi2*(1.0 / 2.0) + 1.0 / 2.0, 3.0) + 1.0 / 2.0) - C*l*weight2*((k*nu) / l - (S*k*(xi2*(1.0 / 2.0) + 1.0 / 2.0)) / (r0 - S*l*(xi2*(1.0 / 2.0) - 1.0 / 2.0)))*(xi2*(1.0 / 2.0) + pow(xi2*(1.0 / 2.0) - 1.0 / 2.0, 2.0)*2.0 + pow(xi2*(1.0 / 2.0) - 1.0 / 2.0, 3.0) - 1.0 / 2.0));
	Matrix[14] = -S*prmeter*(weight1*(r0 + S*l*(xi1*(1.0 / 2.0) + 1.0 / 2.0))*((((h*h)*k*1.0 / (l*l)*xi1*(1.0 / 2.0) - (S*(h*h)*k*nu*(xi1*3.0 - pow(xi1*(1.0 / 2.0) + 1.0 / 2.0, 2.0)*6.0 + 3.0)*(1.0 / 1.2E1)) / (l*(r0 + S*l*(xi1*(1.0 / 2.0) + 1.0 / 2.0))))*(xi1*3.0 - 1.0)) / l - (S*((h*h)*k*1.0 / (l*l)*nu*xi1*(1.0 / 2.0) - (S*(h*h)*k*(xi1*3.0 - pow(xi1*(1.0 / 2.0) + 1.0 / 2.0, 2.0)*6.0 + 3.0)*(1.0 / 1.2E1)) / (l*(r0 + S*l*(xi1*(1.0 / 2.0) + 1.0 / 2.0))))*(xi1*2.0 - pow(xi1*(1.0 / 2.0) + 1.0 / 2.0, 2.0)*3.0 + 1.0)) / (r0 + S*l*(xi1*(1.0 / 2.0) + 1.0 / 2.0)) + (C*C)*k*l*1.0 / pow(r0 + S*l*(xi1*(1.0 / 2.0) + 1.0 / 2.0), 2.0)*(pow(xi1*(1.0 / 2.0) + 1.0 / 2.0, 2.0)*-3.0 + pow(xi1*(1.0 / 2.0) + 1.0 / 2.0, 3.0)*2.0 + 1.0)*(xi1*(1.0 / 2.0) - pow(xi1*(1.0 / 2.0) + 1.0 / 2.0, 2.0)*2.0 + pow(xi1*(1.0 / 2.0) + 1.0 / 2.0, 3.0) + 1.0 / 2.0)) + weight1*(r0 - S*l*(xi1*(1.0 / 2.0) - 1.0 / 2.0))*((((h*h)*k*1.0 / (l*l)*xi1*(1.0 / 2.0) - (S*(h*h)*k*nu*(xi1*3.0 + pow(xi1*(1.0 / 2.0) - 1.0 / 2.0, 2.0)*6.0 - 3.0)*(1.0 / 1.2E1)) / (l*(r0 - S*l*(xi1*(1.0 / 2.0) - 1.0 / 2.0))))*(xi1*3.0 + 1.0)) / l - (S*((h*h)*k*1.0 / (l*l)*nu*xi1*(1.0 / 2.0) - (S*(h*h)*k*(xi1*3.0 + pow(xi1*(1.0 / 2.0) - 1.0 / 2.0, 2.0)*6.0 - 3.0)*(1.0 / 1.2E1)) / (l*(r0 - S*l*(xi1*(1.0 / 2.0) - 1.0 / 2.0))))*(xi1*2.0 + pow(xi1*(1.0 / 2.0) - 1.0 / 2.0, 2.0)*3.0 - 1.0)) / (r0 - S*l*(xi1*(1.0 / 2.0) - 1.0 / 2.0)) + (C*C)*k*l*1.0 / pow(r0 - S*l*(xi1*(1.0 / 2.0) - 1.0 / 2.0), 2.0)*(pow(xi1*(1.0 / 2.0) - 1.0 / 2.0, 2.0)*3.0 + pow(xi1*(1.0 / 2.0) - 1.0 / 2.0, 3.0)*2.0 - 1.0)*(xi1*(1.0 / 2.0) + pow(xi1*(1.0 / 2.0) - 1.0 / 2.0, 2.0)*2.0 + pow(xi1*(1.0 / 2.0) - 1.0 / 2.0, 3.0) - 1.0 / 2.0)) + weight2*(r0 + S*l*(xi2*(1.0 / 2.0) + 1.0 / 2.0))*((((h*h)*k*1.0 / (l*l)*xi2*(1.0 / 2.0) - (S*(h*h)*k*nu*(xi2*3.0 - pow(xi2*(1.0 / 2.0) + 1.0 / 2.0, 2.0)*6.0 + 3.0)*(1.0 / 1.2E1)) / (l*(r0 + S*l*(xi2*(1.0 / 2.0) + 1.0 / 2.0))))*(xi2*3.0 - 1.0)) / l - (S*((h*h)*k*1.0 / (l*l)*nu*xi2*(1.0 / 2.0) - (S*(h*h)*k*(xi2*3.0 - pow(xi2*(1.0 / 2.0) + 1.0 / 2.0, 2.0)*6.0 + 3.0)*(1.0 / 1.2E1)) / (l*(r0 + S*l*(xi2*(1.0 / 2.0) + 1.0 / 2.0))))*(xi2*2.0 - pow(xi2*(1.0 / 2.0) + 1.0 / 2.0, 2.0)*3.0 + 1.0)) / (r0 + S*l*(xi2*(1.0 / 2.0) + 1.0 / 2.0)) + (C*C)*k*l*1.0 / pow(r0 + S*l*(xi2*(1.0 / 2.0) + 1.0 / 2.0), 2.0)*(pow(xi2*(1.0 / 2.0) + 1.0 / 2.0, 2.0)*-3.0 + pow(xi2*(1.0 / 2.0) + 1.0 / 2.0, 3.0)*2.0 + 1.0)*(xi2*(1.0 / 2.0) - pow(xi2*(1.0 / 2.0) + 1.0 / 2.0, 2.0)*2.0 + pow(xi2*(1.0 / 2.0) + 1.0 / 2.0, 3.0) + 1.0 / 2.0)) + weight2*(r0 - S*l*(xi2*(1.0 / 2.0) - 1.0 / 2.0))*((((h*h)*k*1.0 / (l*l)*xi2*(1.0 / 2.0) - (S*(h*h)*k*nu*(xi2*3.0 + pow(xi2*(1.0 / 2.0) - 1.0 / 2.0, 2.0)*6.0 - 3.0)*(1.0 / 1.2E1)) / (l*(r0 - S*l*(xi2*(1.0 / 2.0) - 1.0 / 2.0))))*(xi2*3.0 + 1.0)) / l - (S*((h*h)*k*1.0 / (l*l)*nu*xi2*(1.0 / 2.0) - (S*(h*h)*k*(xi2*3.0 + pow(xi2*(1.0 / 2.0) - 1.0 / 2.0, 2.0)*6.0 - 3.0)*(1.0 / 1.2E1)) / (l*(r0 - S*l*(xi2*(1.0 / 2.0) - 1.0 / 2.0))))*(xi2*2.0 + pow(xi2*(1.0 / 2.0) - 1.0 / 2.0, 2.0)*3.0 - 1.0)) / (r0 - S*l*(xi2*(1.0 / 2.0) - 1.0 / 2.0)) + (C*C)*k*l*1.0 / pow(r0 - S*l*(xi2*(1.0 / 2.0) - 1.0 / 2.0), 2.0)*(pow(xi2*(1.0 / 2.0) - 1.0 / 2.0, 2.0)*3.0 + pow(xi2*(1.0 / 2.0) - 1.0 / 2.0, 3.0)*2.0 - 1.0)*(xi2*(1.0 / 2.0) + pow(xi2*(1.0 / 2.0) - 1.0 / 2.0, 2.0)*2.0 + pow(xi2*(1.0 / 2.0) - 1.0 / 2.0, 3.0) - 1.0 / 2.0))) - C*prmeter*(C*l*weight1*((k*nu) / l + (S*k*(xi1*(1.0 / 2.0) - 1.0 / 2.0)) / (r0 + S*l*(xi1*(1.0 / 2.0) + 1.0 / 2.0)))*(xi1*(1.0 / 2.0) - pow(xi1*(1.0 / 2.0) + 1.0 / 2.0, 2.0)*2.0 + pow(xi1*(1.0 / 2.0) + 1.0 / 2.0, 3.0) + 1.0 / 2.0) - C*l*weight1*((k*nu) / l - (S*k*(xi1*(1.0 / 2.0) + 1.0 / 2.0)) / (r0 - S*l*(xi1*(1.0 / 2.0) - 1.0 / 2.0)))*(xi1*(1.0 / 2.0) + pow(xi1*(1.0 / 2.0) - 1.0 / 2.0, 2.0)*2.0 + pow(xi1*(1.0 / 2.0) - 1.0 / 2.0, 3.0) - 1.0 / 2.0) + C*l*weight2*((k*nu) / l + (S*k*(xi2*(1.0 / 2.0) - 1.0 / 2.0)) / (r0 + S*l*(xi2*(1.0 / 2.0) + 1.0 / 2.0)))*(xi2*(1.0 / 2.0) - pow(xi2*(1.0 / 2.0) + 1.0 / 2.0, 2.0)*2.0 + pow(xi2*(1.0 / 2.0) + 1.0 / 2.0, 3.0) + 1.0 / 2.0) - C*l*weight2*((k*nu) / l - (S*k*(xi2*(1.0 / 2.0) + 1.0 / 2.0)) / (r0 - S*l*(xi2*(1.0 / 2.0) - 1.0 / 2.0)))*(xi2*(1.0 / 2.0) + pow(xi2*(1.0 / 2.0) - 1.0 / 2.0, 2.0)*2.0 + pow(xi2*(1.0 / 2.0) - 1.0 / 2.0, 3.0) - 1.0 / 2.0));
	
	Matrix[21] = -S*(C*prmeter*(C*weight1*((k*nu) / l + (S*k*(xi1*(1.0 / 2.0) + 1.0 / 2.0)) / (r0 + S*l*(xi1*(1.0 / 2.0) + 1.0 / 2.0)))*(pow(xi1*(1.0 / 2.0) + 1.0 / 2.0, 2.0)*3.0 - pow(xi1*(1.0 / 2.0) + 1.0 / 2.0, 3.0)*2.0) + C*weight1*((k*nu) / l - (S*k*(xi1*(1.0 / 2.0) - 1.0 / 2.0)) / (r0 - S*l*(xi1*(1.0 / 2.0) - 1.0 / 2.0)))*(pow(xi1*(1.0 / 2.0) - 1.0 / 2.0, 2.0)*3.0 + pow(xi1*(1.0 / 2.0) - 1.0 / 2.0, 3.0)*2.0) + C*weight2*((k*nu) / l + (S*k*(xi2*(1.0 / 2.0) + 1.0 / 2.0)) / (r0 + S*l*(xi2*(1.0 / 2.0) + 1.0 / 2.0)))*(pow(xi2*(1.0 / 2.0) + 1.0 / 2.0, 2.0)*3.0 - pow(xi2*(1.0 / 2.0) + 1.0 / 2.0, 3.0)*2.0) + C*weight2*((k*nu) / l - (S*k*(xi2*(1.0 / 2.0) - 1.0 / 2.0)) / (r0 - S*l*(xi2*(1.0 / 2.0) - 1.0 / 2.0)))*(pow(xi2*(1.0 / 2.0) - 1.0 / 2.0, 2.0)*3.0 + pow(xi2*(1.0 / 2.0) - 1.0 / 2.0, 3.0)*2.0)) - S*prmeter*(weight1*(r0 + S*l*(xi1*(1.0 / 2.0) + 1.0 / 2.0))*(1.0 / (l*l)*xi1*((h*h)*k*1.0 / (l*l)*xi1*(1.0 / 2.0) - (S*(h*h)*k*nu*(xi1*3.0 - pow(xi1*(1.0 / 2.0) + 1.0 / 2.0, 2.0)*6.0 + 3.0)*(1.0 / 1.2E1)) / (l*(r0 + S*l*(xi1*(1.0 / 2.0) + 1.0 / 2.0))))*6.0 + (C*C)*k*1.0 / pow(r0 + S*l*(xi1*(1.0 / 2.0) + 1.0 / 2.0), 2.0)*pow(pow(xi1*(1.0 / 2.0) + 1.0 / 2.0, 2.0)*3.0 - pow(xi1*(1.0 / 2.0) + 1.0 / 2.0, 3.0)*2.0, 2.0) - (S*((h*h)*k*1.0 / (l*l)*nu*xi1*(1.0 / 2.0) - (S*(h*h)*k*(xi1*3.0 - pow(xi1*(1.0 / 2.0) + 1.0 / 2.0, 2.0)*6.0 + 3.0)*(1.0 / 1.2E1)) / (l*(r0 + S*l*(xi1*(1.0 / 2.0) + 1.0 / 2.0))))*(xi1*3.0 - pow(xi1*(1.0 / 2.0) + 1.0 / 2.0, 2.0)*6.0 + 3.0)) / (l*(r0 + S*l*(xi1*(1.0 / 2.0) + 1.0 / 2.0)))) + weight1*(r0 - S*l*(xi1*(1.0 / 2.0) - 1.0 / 2.0))*(1.0 / (l*l)*xi1*((h*h)*k*1.0 / (l*l)*xi1*(1.0 / 2.0) - (S*(h*h)*k*nu*(xi1*3.0 + pow(xi1*(1.0 / 2.0) - 1.0 / 2.0, 2.0)*6.0 - 3.0)*(1.0 / 1.2E1)) / (l*(r0 - S*l*(xi1*(1.0 / 2.0) - 1.0 / 2.0))))*6.0 + (C*C)*k*1.0 / pow(r0 - S*l*(xi1*(1.0 / 2.0) - 1.0 / 2.0), 2.0)*pow(pow(xi1*(1.0 / 2.0) - 1.0 / 2.0, 2.0)*3.0 + pow(xi1*(1.0 / 2.0) - 1.0 / 2.0, 3.0)*2.0, 2.0) - (S*((h*h)*k*1.0 / (l*l)*nu*xi1*(1.0 / 2.0) - (S*(h*h)*k*(xi1*3.0 + pow(xi1*(1.0 / 2.0) - 1.0 / 2.0, 2.0)*6.0 - 3.0)*(1.0 / 1.2E1)) / (l*(r0 - S*l*(xi1*(1.0 / 2.0) - 1.0 / 2.0))))*(xi1*3.0 + pow(xi1*(1.0 / 2.0) - 1.0 / 2.0, 2.0)*6.0 - 3.0)) / (l*(r0 - S*l*(xi1*(1.0 / 2.0) - 1.0 / 2.0)))) + weight2*(r0 + S*l*(xi2*(1.0 / 2.0) + 1.0 / 2.0))*(1.0 / (l*l)*xi2*((h*h)*k*1.0 / (l*l)*xi2*(1.0 / 2.0) - (S*(h*h)*k*nu*(xi2*3.0 - pow(xi2*(1.0 / 2.0) + 1.0 / 2.0, 2.0)*6.0 + 3.0)*(1.0 / 1.2E1)) / (l*(r0 + S*l*(xi2*(1.0 / 2.0) + 1.0 / 2.0))))*6.0 + (C*C)*k*1.0 / pow(r0 + S*l*(xi2*(1.0 / 2.0) + 1.0 / 2.0), 2.0)*pow(pow(xi2*(1.0 / 2.0) + 1.0 / 2.0, 2.0)*3.0 - pow(xi2*(1.0 / 2.0) + 1.0 / 2.0, 3.0)*2.0, 2.0) - (S*((h*h)*k*1.0 / (l*l)*nu*xi2*(1.0 / 2.0) - (S*(h*h)*k*(xi2*3.0 - pow(xi2*(1.0 / 2.0) + 1.0 / 2.0, 2.0)*6.0 + 3.0)*(1.0 / 1.2E1)) / (l*(r0 + S*l*(xi2*(1.0 / 2.0) + 1.0 / 2.0))))*(xi2*3.0 - pow(xi2*(1.0 / 2.0) + 1.0 / 2.0, 2.0)*6.0 + 3.0)) / (l*(r0 + S*l*(xi2*(1.0 / 2.0) + 1.0 / 2.0)))) + weight2*(r0 - S*l*(xi2*(1.0 / 2.0) - 1.0 / 2.0))*(1.0 / (l*l)*xi2*((h*h)*k*1.0 / (l*l)*xi2*(1.0 / 2.0) - (S*(h*h)*k*nu*(xi2*3.0 + pow(xi2*(1.0 / 2.0) - 1.0 / 2.0, 2.0)*6.0 - 3.0)*(1.0 / 1.2E1)) / (l*(r0 - S*l*(xi2*(1.0 / 2.0) - 1.0 / 2.0))))*6.0 + (C*C)*k*1.0 / pow(r0 - S*l*(xi2*(1.0 / 2.0) - 1.0 / 2.0), 2.0)*pow(pow(xi2*(1.0 / 2.0) - 1.0 / 2.0, 2.0)*3.0 + pow(xi2*(1.0 / 2.0) - 1.0 / 2.0, 3.0)*2.0, 2.0) - (S*((h*h)*k*1.0 / (l*l)*nu*xi2*(1.0 / 2.0) - (S*(h*h)*k*(xi2*3.0 + pow(xi2*(1.0 / 2.0) - 1.0 / 2.0, 2.0)*6.0 - 3.0)*(1.0 / 1.2E1)) / (l*(r0 - S*l*(xi2*(1.0 / 2.0) - 1.0 / 2.0))))*(xi2*3.0 + pow(xi2*(1.0 / 2.0) - 1.0 / 2.0, 2.0)*6.0 - 3.0)) / (l*(r0 - S*l*(xi2*(1.0 / 2.0) - 1.0 / 2.0)))))) - C*(S*prmeter*(weight1*(r0 + S*l*(xi1*(1.0 / 2.0) + 1.0 / 2.0))*((C*k*nu*(pow(xi1*(1.0 / 2.0) + 1.0 / 2.0, 2.0)*3.0 - pow(xi1*(1.0 / 2.0) + 1.0 / 2.0, 3.0)*2.0)) / (l*(r0 + S*l*(xi1*(1.0 / 2.0) + 1.0 / 2.0))) + C*S*k*1.0 / pow(r0 + S*l*(xi1*(1.0 / 2.0) + 1.0 / 2.0), 2.0)*(xi1*(1.0 / 2.0) + 1.0 / 2.0)*(pow(xi1*(1.0 / 2.0) + 1.0 / 2.0, 2.0)*3.0 - pow(xi1*(1.0 / 2.0) + 1.0 / 2.0, 3.0)*2.0)) + weight1*(r0 - S*l*(xi1*(1.0 / 2.0) - 1.0 / 2.0))*((C*k*nu*(pow(xi1*(1.0 / 2.0) - 1.0 / 2.0, 2.0)*3.0 + pow(xi1*(1.0 / 2.0) - 1.0 / 2.0, 3.0)*2.0)) / (l*(r0 - S*l*(xi1*(1.0 / 2.0) - 1.0 / 2.0))) - C*S*k*1.0 / pow(r0 - S*l*(xi1*(1.0 / 2.0) - 1.0 / 2.0), 2.0)*(xi1*(1.0 / 2.0) - 1.0 / 2.0)*(pow(xi1*(1.0 / 2.0) - 1.0 / 2.0, 2.0)*3.0 + pow(xi1*(1.0 / 2.0) - 1.0 / 2.0, 3.0)*2.0)) + weight2*(r0 + S*l*(xi2*(1.0 / 2.0) + 1.0 / 2.0))*((C*k*nu*(pow(xi2*(1.0 / 2.0) + 1.0 / 2.0, 2.0)*3.0 - pow(xi2*(1.0 / 2.0) + 1.0 / 2.0, 3.0)*2.0)) / (l*(r0 + S*l*(xi2*(1.0 / 2.0) + 1.0 / 2.0))) + C*S*k*1.0 / pow(r0 + S*l*(xi2*(1.0 / 2.0) + 1.0 / 2.0), 2.0)*(xi2*(1.0 / 2.0) + 1.0 / 2.0)*(pow(xi2*(1.0 / 2.0) + 1.0 / 2.0, 2.0)*3.0 - pow(xi2*(1.0 / 2.0) + 1.0 / 2.0, 3.0)*2.0)) + weight2*(r0 - S*l*(xi2*(1.0 / 2.0) - 1.0 / 2.0))*((C*k*nu*(pow(xi2*(1.0 / 2.0) - 1.0 / 2.0, 2.0)*3.0 + pow(xi2*(1.0 / 2.0) - 1.0 / 2.0, 3.0)*2.0)) / (l*(r0 - S*l*(xi2*(1.0 / 2.0) - 1.0 / 2.0))) - C*S*k*1.0 / pow(r0 - S*l*(xi2*(1.0 / 2.0) - 1.0 / 2.0), 2.0)*(xi2*(1.0 / 2.0) - 1.0 / 2.0)*(pow(xi2*(1.0 / 2.0) - 1.0 / 2.0, 2.0)*3.0 + pow(xi2*(1.0 / 2.0) - 1.0 / 2.0, 3.0)*2.0))) - C*prmeter*(weight1*(r0 + S*l*(xi1*(1.0 / 2.0) + 1.0 / 2.0))*((k / l + (S*k*nu*(xi1*(1.0 / 2.0) + 1.0 / 2.0)) / (r0 + S*l*(xi1*(1.0 / 2.0) + 1.0 / 2.0))) / l + (S*(xi1*(1.0 / 2.0) + 1.0 / 2.0)*((k*nu) / l + (S*k*(xi1*(1.0 / 2.0) + 1.0 / 2.0)) / (r0 + S*l*(xi1*(1.0 / 2.0) + 1.0 / 2.0)))) / (r0 + S*l*(xi1*(1.0 / 2.0) + 1.0 / 2.0))) + weight1*(r0 - S*l*(xi1*(1.0 / 2.0) - 1.0 / 2.0))*((k / l - (S*k*nu*(xi1*(1.0 / 2.0) - 1.0 / 2.0)) / (r0 - S*l*(xi1*(1.0 / 2.0) - 1.0 / 2.0))) / l - (S*(xi1*(1.0 / 2.0) - 1.0 / 2.0)*((k*nu) / l - (S*k*(xi1*(1.0 / 2.0) - 1.0 / 2.0)) / (r0 - S*l*(xi1*(1.0 / 2.0) - 1.0 / 2.0)))) / (r0 - S*l*(xi1*(1.0 / 2.0) - 1.0 / 2.0))) + weight2*(r0 + S*l*(xi2*(1.0 / 2.0) + 1.0 / 2.0))*((k / l + (S*k*nu*(xi2*(1.0 / 2.0) + 1.0 / 2.0)) / (r0 + S*l*(xi2*(1.0 / 2.0) + 1.0 / 2.0))) / l + (S*(xi2*(1.0 / 2.0) + 1.0 / 2.0)*((k*nu) / l + (S*k*(xi2*(1.0 / 2.0) + 1.0 / 2.0)) / (r0 + S*l*(xi2*(1.0 / 2.0) + 1.0 / 2.0)))) / (r0 + S*l*(xi2*(1.0 / 2.0) + 1.0 / 2.0))) + weight2*(r0 - S*l*(xi2*(1.0 / 2.0) - 1.0 / 2.0))*((k / l - (S*k*nu*(xi2*(1.0 / 2.0) - 1.0 / 2.0)) / (r0 - S*l*(xi2*(1.0 / 2.0) - 1.0 / 2.0))) / l - (S*(xi2*(1.0 / 2.0) - 1.0 / 2.0)*((k*nu) / l - (S*k*(xi2*(1.0 / 2.0) - 1.0 / 2.0)) / (r0 - S*l*(xi2*(1.0 / 2.0) - 1.0 / 2.0)))) / (r0 - S*l*(xi2*(1.0 / 2.0) - 1.0 / 2.0)))));
	Matrix[23] = C*prmeter*(weight1*(r0 + S*l*(xi1*(1.0 / 2.0) + 1.0 / 2.0))*((C*k*nu*(xi1*(1.0 / 2.0) - pow(xi1*(1.0 / 2.0) + 1.0 / 2.0, 2.0)*2.0 + pow(xi1*(1.0 / 2.0) + 1.0 / 2.0, 3.0) + 1.0 / 2.0)) / (r0 + S*l*(xi1*(1.0 / 2.0) + 1.0 / 2.0)) + C*S*k*l*1.0 / pow(r0 + S*l*(xi1*(1.0 / 2.0) + 1.0 / 2.0), 2.0)*(xi1*(1.0 / 2.0) + 1.0 / 2.0)*(xi1*(1.0 / 2.0) - pow(xi1*(1.0 / 2.0) + 1.0 / 2.0, 2.0)*2.0 + pow(xi1*(1.0 / 2.0) + 1.0 / 2.0, 3.0) + 1.0 / 2.0)) - weight1*(r0 - S*l*(xi1*(1.0 / 2.0) - 1.0 / 2.0))*((C*k*nu*(xi1*(1.0 / 2.0) + pow(xi1*(1.0 / 2.0) - 1.0 / 2.0, 2.0)*2.0 + pow(xi1*(1.0 / 2.0) - 1.0 / 2.0, 3.0) - 1.0 / 2.0)) / (r0 - S*l*(xi1*(1.0 / 2.0) - 1.0 / 2.0)) - C*S*k*l*1.0 / pow(r0 - S*l*(xi1*(1.0 / 2.0) - 1.0 / 2.0), 2.0)*(xi1*(1.0 / 2.0) - 1.0 / 2.0)*(xi1*(1.0 / 2.0) + pow(xi1*(1.0 / 2.0) - 1.0 / 2.0, 2.0)*2.0 + pow(xi1*(1.0 / 2.0) - 1.0 / 2.0, 3.0) - 1.0 / 2.0)) + weight2*(r0 + S*l*(xi2*(1.0 / 2.0) + 1.0 / 2.0))*((C*k*nu*(xi2*(1.0 / 2.0) - pow(xi2*(1.0 / 2.0) + 1.0 / 2.0, 2.0)*2.0 + pow(xi2*(1.0 / 2.0) + 1.0 / 2.0, 3.0) + 1.0 / 2.0)) / (r0 + S*l*(xi2*(1.0 / 2.0) + 1.0 / 2.0)) + C*S*k*l*1.0 / pow(r0 + S*l*(xi2*(1.0 / 2.0) + 1.0 / 2.0), 2.0)*(xi2*(1.0 / 2.0) + 1.0 / 2.0)*(xi2*(1.0 / 2.0) - pow(xi2*(1.0 / 2.0) + 1.0 / 2.0, 2.0)*2.0 + pow(xi2*(1.0 / 2.0) + 1.0 / 2.0, 3.0) + 1.0 / 2.0)) - weight2*(r0 - S*l*(xi2*(1.0 / 2.0) - 1.0 / 2.0))*((C*k*nu*(xi2*(1.0 / 2.0) + pow(xi2*(1.0 / 2.0) - 1.0 / 2.0, 2.0)*2.0 + pow(xi2*(1.0 / 2.0) - 1.0 / 2.0, 3.0) - 1.0 / 2.0)) / (r0 - S*l*(xi2*(1.0 / 2.0) - 1.0 / 2.0)) - C*S*k*l*1.0 / pow(r0 - S*l*(xi2*(1.0 / 2.0) - 1.0 / 2.0), 2.0)*(xi2*(1.0 / 2.0) - 1.0 / 2.0)*(xi2*(1.0 / 2.0) + pow(xi2*(1.0 / 2.0) - 1.0 / 2.0, 2.0)*2.0 + pow(xi2*(1.0 / 2.0) - 1.0 / 2.0, 3.0) - 1.0 / 2.0))) - S*prmeter*(weight1*(r0 + S*l*(xi1*(1.0 / 2.0) + 1.0 / 2.0))*(1.0 / (l*l)*xi1*(((h*h)*k*(xi1*3.0 - 1.0)*(1.0 / 1.2E1)) / l - (S*(h*h)*k*nu*(xi1*2.0 - pow(xi1*(1.0 / 2.0) + 1.0 / 2.0, 2.0)*3.0 + 1.0)*(1.0 / 1.2E1)) / (r0 + S*l*(xi1*(1.0 / 2.0) + 1.0 / 2.0)))*-6.0 + (S*(((h*h)*k*nu*(xi1*3.0 - 1.0)*(1.0 / 1.2E1)) / l - (S*(h*h)*k*(xi1*2.0 - pow(xi1*(1.0 / 2.0) + 1.0 / 2.0, 2.0)*3.0 + 1.0)*(1.0 / 1.2E1)) / (r0 + S*l*(xi1*(1.0 / 2.0) + 1.0 / 2.0)))*(xi1*3.0 - pow(xi1*(1.0 / 2.0) + 1.0 / 2.0, 2.0)*6.0 + 3.0)) / (l*(r0 + S*l*(xi1*(1.0 / 2.0) + 1.0 / 2.0))) + (C*C)*k*l*1.0 / pow(r0 + S*l*(xi1*(1.0 / 2.0) + 1.0 / 2.0), 2.0)*(pow(xi1*(1.0 / 2.0) + 1.0 / 2.0, 2.0)*3.0 - pow(xi1*(1.0 / 2.0) + 1.0 / 2.0, 3.0)*2.0)*(xi1*(1.0 / 2.0) - pow(xi1*(1.0 / 2.0) + 1.0 / 2.0, 2.0)*2.0 + pow(xi1*(1.0 / 2.0) + 1.0 / 2.0, 3.0) + 1.0 / 2.0)) - weight1*(r0 - S*l*(xi1*(1.0 / 2.0) - 1.0 / 2.0))*(1.0 / (l*l)*xi1*(((h*h)*k*(xi1*3.0 + 1.0)*(1.0 / 1.2E1)) / l - (S*(h*h)*k*nu*(xi1*2.0 + pow(xi1*(1.0 / 2.0) - 1.0 / 2.0, 2.0)*3.0 - 1.0)*(1.0 / 1.2E1)) / (r0 - S*l*(xi1*(1.0 / 2.0) - 1.0 / 2.0)))*6.0 - (S*(((h*h)*k*nu*(xi1*3.0 + 1.0)*(1.0 / 1.2E1)) / l - (S*(h*h)*k*(xi1*2.0 + pow(xi1*(1.0 / 2.0) - 1.0 / 2.0, 2.0)*3.0 - 1.0)*(1.0 / 1.2E1)) / (r0 - S*l*(xi1*(1.0 / 2.0) - 1.0 / 2.0)))*(xi1*3.0 + pow(xi1*(1.0 / 2.0) - 1.0 / 2.0, 2.0)*6.0 - 3.0)) / (l*(r0 - S*l*(xi1*(1.0 / 2.0) - 1.0 / 2.0))) + (C*C)*k*l*1.0 / pow(r0 - S*l*(xi1*(1.0 / 2.0) - 1.0 / 2.0), 2.0)*(pow(xi1*(1.0 / 2.0) - 1.0 / 2.0, 2.0)*3.0 + pow(xi1*(1.0 / 2.0) - 1.0 / 2.0, 3.0)*2.0)*(xi1*(1.0 / 2.0) + pow(xi1*(1.0 / 2.0) - 1.0 / 2.0, 2.0)*2.0 + pow(xi1*(1.0 / 2.0) - 1.0 / 2.0, 3.0) - 1.0 / 2.0)) + weight2*(r0 + S*l*(xi2*(1.0 / 2.0) + 1.0 / 2.0))*(1.0 / (l*l)*xi2*(((h*h)*k*(xi2*3.0 - 1.0)*(1.0 / 1.2E1)) / l - (S*(h*h)*k*nu*(xi2*2.0 - pow(xi2*(1.0 / 2.0) + 1.0 / 2.0, 2.0)*3.0 + 1.0)*(1.0 / 1.2E1)) / (r0 + S*l*(xi2*(1.0 / 2.0) + 1.0 / 2.0)))*-6.0 + (S*(((h*h)*k*nu*(xi2*3.0 - 1.0)*(1.0 / 1.2E1)) / l - (S*(h*h)*k*(xi2*2.0 - pow(xi2*(1.0 / 2.0) + 1.0 / 2.0, 2.0)*3.0 + 1.0)*(1.0 / 1.2E1)) / (r0 + S*l*(xi2*(1.0 / 2.0) + 1.0 / 2.0)))*(xi2*3.0 - pow(xi2*(1.0 / 2.0) + 1.0 / 2.0, 2.0)*6.0 + 3.0)) / (l*(r0 + S*l*(xi2*(1.0 / 2.0) + 1.0 / 2.0))) + (C*C)*k*l*1.0 / pow(r0 + S*l*(xi2*(1.0 / 2.0) + 1.0 / 2.0), 2.0)*(pow(xi2*(1.0 / 2.0) + 1.0 / 2.0, 2.0)*3.0 - pow(xi2*(1.0 / 2.0) + 1.0 / 2.0, 3.0)*2.0)*(xi2*(1.0 / 2.0) - pow(xi2*(1.0 / 2.0) + 1.0 / 2.0, 2.0)*2.0 + pow(xi2*(1.0 / 2.0) + 1.0 / 2.0, 3.0) + 1.0 / 2.0)) - weight2*(r0 - S*l*(xi2*(1.0 / 2.0) - 1.0 / 2.0))*(1.0 / (l*l)*xi2*(((h*h)*k*(xi2*3.0 + 1.0)*(1.0 / 1.2E1)) / l - (S*(h*h)*k*nu*(xi2*2.0 + pow(xi2*(1.0 / 2.0) - 1.0 / 2.0, 2.0)*3.0 - 1.0)*(1.0 / 1.2E1)) / (r0 - S*l*(xi2*(1.0 / 2.0) - 1.0 / 2.0)))*6.0 - (S*(((h*h)*k*nu*(xi2*3.0 + 1.0)*(1.0 / 1.2E1)) / l - (S*(h*h)*k*(xi2*2.0 + pow(xi2*(1.0 / 2.0) - 1.0 / 2.0, 2.0)*3.0 - 1.0)*(1.0 / 1.2E1)) / (r0 - S*l*(xi2*(1.0 / 2.0) - 1.0 / 2.0)))*(xi2*3.0 + pow(xi2*(1.0 / 2.0) - 1.0 / 2.0, 2.0)*6.0 - 3.0)) / (l*(r0 - S*l*(xi2*(1.0 / 2.0) - 1.0 / 2.0))) + (C*C)*k*l*1.0 / pow(r0 - S*l*(xi2*(1.0 / 2.0) - 1.0 / 2.0), 2.0)*(pow(xi2*(1.0 / 2.0) - 1.0 / 2.0, 2.0)*3.0 + pow(xi2*(1.0 / 2.0) - 1.0 / 2.0, 3.0)*2.0)*(xi2*(1.0 / 2.0) + pow(xi2*(1.0 / 2.0) - 1.0 / 2.0, 2.0)*2.0 + pow(xi2*(1.0 / 2.0) - 1.0 / 2.0, 3.0) - 1.0 / 2.0)));
	Matrix[25] = -C*(S*prmeter*(weight1*(r0 + S*l*(xi1*(1.0 / 2.0) + 1.0 / 2.0))*((k / l + (S*k*nu*(xi1*(1.0 / 2.0) - 1.0 / 2.0)) / (r0 + S*l*(xi1*(1.0 / 2.0) + 1.0 / 2.0))) / l + (S*(xi1*(1.0 / 2.0) + 1.0 / 2.0)*((k*nu) / l + (S*k*(xi1*(1.0 / 2.0) - 1.0 / 2.0)) / (r0 + S*l*(xi1*(1.0 / 2.0) + 1.0 / 2.0)))) / (r0 + S*l*(xi1*(1.0 / 2.0) + 1.0 / 2.0))) + weight1*(r0 - S*l*(xi1*(1.0 / 2.0) - 1.0 / 2.0))*((k / l - (S*k*nu*(xi1*(1.0 / 2.0) + 1.0 / 2.0)) / (r0 - S*l*(xi1*(1.0 / 2.0) - 1.0 / 2.0))) / l - (S*(xi1*(1.0 / 2.0) - 1.0 / 2.0)*((k*nu) / l - (S*k*(xi1*(1.0 / 2.0) + 1.0 / 2.0)) / (r0 - S*l*(xi1*(1.0 / 2.0) - 1.0 / 2.0)))) / (r0 - S*l*(xi1*(1.0 / 2.0) - 1.0 / 2.0))) + weight2*(r0 + S*l*(xi2*(1.0 / 2.0) + 1.0 / 2.0))*((k / l + (S*k*nu*(xi2*(1.0 / 2.0) - 1.0 / 2.0)) / (r0 + S*l*(xi2*(1.0 / 2.0) + 1.0 / 2.0))) / l + (S*(xi2*(1.0 / 2.0) + 1.0 / 2.0)*((k*nu) / l + (S*k*(xi2*(1.0 / 2.0) - 1.0 / 2.0)) / (r0 + S*l*(xi2*(1.0 / 2.0) + 1.0 / 2.0)))) / (r0 + S*l*(xi2*(1.0 / 2.0) + 1.0 / 2.0))) + weight2*(r0 - S*l*(xi2*(1.0 / 2.0) - 1.0 / 2.0))*((k / l - (S*k*nu*(xi2*(1.0 / 2.0) + 1.0 / 2.0)) / (r0 - S*l*(xi2*(1.0 / 2.0) - 1.0 / 2.0))) / l - (S*(xi2*(1.0 / 2.0) - 1.0 / 2.0)*((k*nu) / l - (S*k*(xi2*(1.0 / 2.0) + 1.0 / 2.0)) / (r0 - S*l*(xi2*(1.0 / 2.0) - 1.0 / 2.0)))) / (r0 - S*l*(xi2*(1.0 / 2.0) - 1.0 / 2.0)))) - C*prmeter*(weight1*(r0 + S*l*(xi1*(1.0 / 2.0) + 1.0 / 2.0))*((C*k*nu*(pow(xi1*(1.0 / 2.0) + 1.0 / 2.0, 2.0)*-3.0 + pow(xi1*(1.0 / 2.0) + 1.0 / 2.0, 3.0)*2.0 + 1.0)) / (l*(r0 + S*l*(xi1*(1.0 / 2.0) + 1.0 / 2.0))) + C*S*k*1.0 / pow(r0 + S*l*(xi1*(1.0 / 2.0) + 1.0 / 2.0), 2.0)*(xi1*(1.0 / 2.0) + 1.0 / 2.0)*(pow(xi1*(1.0 / 2.0) + 1.0 / 2.0, 2.0)*-3.0 + pow(xi1*(1.0 / 2.0) + 1.0 / 2.0, 3.0)*2.0 + 1.0)) - weight1*(r0 - S*l*(xi1*(1.0 / 2.0) - 1.0 / 2.0))*((C*k*nu*(pow(xi1*(1.0 / 2.0) - 1.0 / 2.0, 2.0)*3.0 + pow(xi1*(1.0 / 2.0) - 1.0 / 2.0, 3.0)*2.0 - 1.0)) / (l*(r0 - S*l*(xi1*(1.0 / 2.0) - 1.0 / 2.0))) - C*S*k*1.0 / pow(r0 - S*l*(xi1*(1.0 / 2.0) - 1.0 / 2.0), 2.0)*(xi1*(1.0 / 2.0) - 1.0 / 2.0)*(pow(xi1*(1.0 / 2.0) - 1.0 / 2.0, 2.0)*3.0 + pow(xi1*(1.0 / 2.0) - 1.0 / 2.0, 3.0)*2.0 - 1.0)) + weight2*(r0 + S*l*(xi2*(1.0 / 2.0) + 1.0 / 2.0))*((C*k*nu*(pow(xi2*(1.0 / 2.0) + 1.0 / 2.0, 2.0)*-3.0 + pow(xi2*(1.0 / 2.0) + 1.0 / 2.0, 3.0)*2.0 + 1.0)) / (l*(r0 + S*l*(xi2*(1.0 / 2.0) + 1.0 / 2.0))) + C*S*k*1.0 / pow(r0 + S*l*(xi2*(1.0 / 2.0) + 1.0 / 2.0), 2.0)*(xi2*(1.0 / 2.0) + 1.0 / 2.0)*(pow(xi2*(1.0 / 2.0) + 1.0 / 2.0, 2.0)*-3.0 + pow(xi2*(1.0 / 2.0) + 1.0 / 2.0, 3.0)*2.0 + 1.0)) - weight2*(r0 - S*l*(xi2*(1.0 / 2.0) - 1.0 / 2.0))*((C*k*nu*(pow(xi2*(1.0 / 2.0) - 1.0 / 2.0, 2.0)*3.0 + pow(xi2*(1.0 / 2.0) - 1.0 / 2.0, 3.0)*2.0 - 1.0)) / (l*(r0 - S*l*(xi2*(1.0 / 2.0) - 1.0 / 2.0))) - C*S*k*1.0 / pow(r0 - S*l*(xi2*(1.0 / 2.0) - 1.0 / 2.0), 2.0)*(xi2*(1.0 / 2.0) - 1.0 / 2.0)*(pow(xi2*(1.0 / 2.0) - 1.0 / 2.0, 2.0)*3.0 + pow(xi2*(1.0 / 2.0) - 1.0 / 2.0, 3.0)*2.0 - 1.0)))) + S*(S*prmeter*(C*weight1*((k*nu) / l + (S*k*(xi1*(1.0 / 2.0) - 1.0 / 2.0)) / (r0 + S*l*(xi1*(1.0 / 2.0) + 1.0 / 2.0)))*(pow(xi1*(1.0 / 2.0) + 1.0 / 2.0, 2.0)*3.0 - pow(xi1*(1.0 / 2.0) + 1.0 / 2.0, 3.0)*2.0) + C*weight1*((k*nu) / l - (S*k*(xi1*(1.0 / 2.0) + 1.0 / 2.0)) / (r0 - S*l*(xi1*(1.0 / 2.0) - 1.0 / 2.0)))*(pow(xi1*(1.0 / 2.0) - 1.0 / 2.0, 2.0)*3.0 + pow(xi1*(1.0 / 2.0) - 1.0 / 2.0, 3.0)*2.0) + C*weight2*((k*nu) / l + (S*k*(xi2*(1.0 / 2.0) - 1.0 / 2.0)) / (r0 + S*l*(xi2*(1.0 / 2.0) + 1.0 / 2.0)))*(pow(xi2*(1.0 / 2.0) + 1.0 / 2.0, 2.0)*3.0 - pow(xi2*(1.0 / 2.0) + 1.0 / 2.0, 3.0)*2.0) + C*weight2*((k*nu) / l - (S*k*(xi2*(1.0 / 2.0) + 1.0 / 2.0)) / (r0 - S*l*(xi2*(1.0 / 2.0) - 1.0 / 2.0)))*(pow(xi2*(1.0 / 2.0) - 1.0 / 2.0, 2.0)*3.0 + pow(xi2*(1.0 / 2.0) - 1.0 / 2.0, 3.0)*2.0)) - C*prmeter*(weight1*(r0 + S*l*(xi1*(1.0 / 2.0) + 1.0 / 2.0))*(1.0 / (l*l)*xi1*((h*h)*k*1.0 / (l*l)*xi1*(1.0 / 2.0) - (S*(h*h)*k*nu*(xi1*3.0 - pow(xi1*(1.0 / 2.0) + 1.0 / 2.0, 2.0)*6.0 + 3.0)*(1.0 / 1.2E1)) / (l*(r0 + S*l*(xi1*(1.0 / 2.0) + 1.0 / 2.0))))*-6.0 + (S*((h*h)*k*1.0 / (l*l)*nu*xi1*(1.0 / 2.0) - (S*(h*h)*k*(xi1*3.0 - pow(xi1*(1.0 / 2.0) + 1.0 / 2.0, 2.0)*6.0 + 3.0)*(1.0 / 1.2E1)) / (l*(r0 + S*l*(xi1*(1.0 / 2.0) + 1.0 / 2.0))))*(xi1*3.0 - pow(xi1*(1.0 / 2.0) + 1.0 / 2.0, 2.0)*6.0 + 3.0)) / (l*(r0 + S*l*(xi1*(1.0 / 2.0) + 1.0 / 2.0))) + (C*C)*k*1.0 / pow(r0 + S*l*(xi1*(1.0 / 2.0) + 1.0 / 2.0), 2.0)*(pow(xi1*(1.0 / 2.0) + 1.0 / 2.0, 2.0)*3.0 - pow(xi1*(1.0 / 2.0) + 1.0 / 2.0, 3.0)*2.0)*(pow(xi1*(1.0 / 2.0) + 1.0 / 2.0, 2.0)*-3.0 + pow(xi1*(1.0 / 2.0) + 1.0 / 2.0, 3.0)*2.0 + 1.0)) - weight1*(r0 - S*l*(xi1*(1.0 / 2.0) - 1.0 / 2.0))*(1.0 / (l*l)*xi1*((h*h)*k*1.0 / (l*l)*xi1*(1.0 / 2.0) - (S*(h*h)*k*nu*(xi1*3.0 + pow(xi1*(1.0 / 2.0) - 1.0 / 2.0, 2.0)*6.0 - 3.0)*(1.0 / 1.2E1)) / (l*(r0 - S*l*(xi1*(1.0 / 2.0) - 1.0 / 2.0))))*6.0 - (S*((h*h)*k*1.0 / (l*l)*nu*xi1*(1.0 / 2.0) - (S*(h*h)*k*(xi1*3.0 + pow(xi1*(1.0 / 2.0) - 1.0 / 2.0, 2.0)*6.0 - 3.0)*(1.0 / 1.2E1)) / (l*(r0 - S*l*(xi1*(1.0 / 2.0) - 1.0 / 2.0))))*(xi1*3.0 + pow(xi1*(1.0 / 2.0) - 1.0 / 2.0, 2.0)*6.0 - 3.0)) / (l*(r0 - S*l*(xi1*(1.0 / 2.0) - 1.0 / 2.0))) + (C*C)*k*1.0 / pow(r0 - S*l*(xi1*(1.0 / 2.0) - 1.0 / 2.0), 2.0)*(pow(xi1*(1.0 / 2.0) - 1.0 / 2.0, 2.0)*3.0 + pow(xi1*(1.0 / 2.0) - 1.0 / 2.0, 3.0)*2.0)*(pow(xi1*(1.0 / 2.0) - 1.0 / 2.0, 2.0)*3.0 + pow(xi1*(1.0 / 2.0) - 1.0 / 2.0, 3.0)*2.0 - 1.0)) + weight2*(r0 + S*l*(xi2*(1.0 / 2.0) + 1.0 / 2.0))*(1.0 / (l*l)*xi2*((h*h)*k*1.0 / (l*l)*xi2*(1.0 / 2.0) - (S*(h*h)*k*nu*(xi2*3.0 - pow(xi2*(1.0 / 2.0) + 1.0 / 2.0, 2.0)*6.0 + 3.0)*(1.0 / 1.2E1)) / (l*(r0 + S*l*(xi2*(1.0 / 2.0) + 1.0 / 2.0))))*-6.0 + (S*((h*h)*k*1.0 / (l*l)*nu*xi2*(1.0 / 2.0) - (S*(h*h)*k*(xi2*3.0 - pow(xi2*(1.0 / 2.0) + 1.0 / 2.0, 2.0)*6.0 + 3.0)*(1.0 / 1.2E1)) / (l*(r0 + S*l*(xi2*(1.0 / 2.0) + 1.0 / 2.0))))*(xi2*3.0 - pow(xi2*(1.0 / 2.0) + 1.0 / 2.0, 2.0)*6.0 + 3.0)) / (l*(r0 + S*l*(xi2*(1.0 / 2.0) + 1.0 / 2.0))) + (C*C)*k*1.0 / pow(r0 + S*l*(xi2*(1.0 / 2.0) + 1.0 / 2.0), 2.0)*(pow(xi2*(1.0 / 2.0) + 1.0 / 2.0, 2.0)*3.0 - pow(xi2*(1.0 / 2.0) + 1.0 / 2.0, 3.0)*2.0)*(pow(xi2*(1.0 / 2.0) + 1.0 / 2.0, 2.0)*-3.0 + pow(xi2*(1.0 / 2.0) + 1.0 / 2.0, 3.0)*2.0 + 1.0)) - weight2*(r0 - S*l*(xi2*(1.0 / 2.0) - 1.0 / 2.0))*(1.0 / (l*l)*xi2*((h*h)*k*1.0 / (l*l)*xi2*(1.0 / 2.0) - (S*(h*h)*k*nu*(xi2*3.0 + pow(xi2*(1.0 / 2.0) - 1.0 / 2.0, 2.0)*6.0 - 3.0)*(1.0 / 1.2E1)) / (l*(r0 - S*l*(xi2*(1.0 / 2.0) - 1.0 / 2.0))))*6.0 - (S*((h*h)*k*1.0 / (l*l)*nu*xi2*(1.0 / 2.0) - (S*(h*h)*k*(xi2*3.0 + pow(xi2*(1.0 / 2.0) - 1.0 / 2.0, 2.0)*6.0 - 3.0)*(1.0 / 1.2E1)) / (l*(r0 - S*l*(xi2*(1.0 / 2.0) - 1.0 / 2.0))))*(xi2*3.0 + pow(xi2*(1.0 / 2.0) - 1.0 / 2.0, 2.0)*6.0 - 3.0)) / (l*(r0 - S*l*(xi2*(1.0 / 2.0) - 1.0 / 2.0))) + (C*C)*k*1.0 / pow(r0 - S*l*(xi2*(1.0 / 2.0) - 1.0 / 2.0), 2.0)*(pow(xi2*(1.0 / 2.0) - 1.0 / 2.0, 2.0)*3.0 + pow(xi2*(1.0 / 2.0) - 1.0 / 2.0, 3.0)*2.0)*(pow(xi2*(1.0 / 2.0) - 1.0 / 2.0, 2.0)*3.0 + pow(xi2*(1.0 / 2.0) - 1.0 / 2.0, 3.0)*2.0 - 1.0))));
	Matrix[27] = -C*(S*prmeter*(weight1*(r0 + S*l*(xi1*(1.0 / 2.0) + 1.0 / 2.0))*((C*k*nu*(pow(xi1*(1.0 / 2.0) + 1.0 / 2.0, 2.0)*-3.0 + pow(xi1*(1.0 / 2.0) + 1.0 / 2.0, 3.0)*2.0 + 1.0)) / (l*(r0 + S*l*(xi1*(1.0 / 2.0) + 1.0 / 2.0))) + C*S*k*1.0 / pow(r0 + S*l*(xi1*(1.0 / 2.0) + 1.0 / 2.0), 2.0)*(xi1*(1.0 / 2.0) + 1.0 / 2.0)*(pow(xi1*(1.0 / 2.0) + 1.0 / 2.0, 2.0)*-3.0 + pow(xi1*(1.0 / 2.0) + 1.0 / 2.0, 3.0)*2.0 + 1.0)) - weight1*(r0 - S*l*(xi1*(1.0 / 2.0) - 1.0 / 2.0))*((C*k*nu*(pow(xi1*(1.0 / 2.0) - 1.0 / 2.0, 2.0)*3.0 + pow(xi1*(1.0 / 2.0) - 1.0 / 2.0, 3.0)*2.0 - 1.0)) / (l*(r0 - S*l*(xi1*(1.0 / 2.0) - 1.0 / 2.0))) - C*S*k*1.0 / pow(r0 - S*l*(xi1*(1.0 / 2.0) - 1.0 / 2.0), 2.0)*(xi1*(1.0 / 2.0) - 1.0 / 2.0)*(pow(xi1*(1.0 / 2.0) - 1.0 / 2.0, 2.0)*3.0 + pow(xi1*(1.0 / 2.0) - 1.0 / 2.0, 3.0)*2.0 - 1.0)) + weight2*(r0 + S*l*(xi2*(1.0 / 2.0) + 1.0 / 2.0))*((C*k*nu*(pow(xi2*(1.0 / 2.0) + 1.0 / 2.0, 2.0)*-3.0 + pow(xi2*(1.0 / 2.0) + 1.0 / 2.0, 3.0)*2.0 + 1.0)) / (l*(r0 + S*l*(xi2*(1.0 / 2.0) + 1.0 / 2.0))) + C*S*k*1.0 / pow(r0 + S*l*(xi2*(1.0 / 2.0) + 1.0 / 2.0), 2.0)*(xi2*(1.0 / 2.0) + 1.0 / 2.0)*(pow(xi2*(1.0 / 2.0) + 1.0 / 2.0, 2.0)*-3.0 + pow(xi2*(1.0 / 2.0) + 1.0 / 2.0, 3.0)*2.0 + 1.0)) - weight2*(r0 - S*l*(xi2*(1.0 / 2.0) - 1.0 / 2.0))*((C*k*nu*(pow(xi2*(1.0 / 2.0) - 1.0 / 2.0, 2.0)*3.0 + pow(xi2*(1.0 / 2.0) - 1.0 / 2.0, 3.0)*2.0 - 1.0)) / (l*(r0 - S*l*(xi2*(1.0 / 2.0) - 1.0 / 2.0))) - C*S*k*1.0 / pow(r0 - S*l*(xi2*(1.0 / 2.0) - 1.0 / 2.0), 2.0)*(xi2*(1.0 / 2.0) - 1.0 / 2.0)*(pow(xi2*(1.0 / 2.0) - 1.0 / 2.0, 2.0)*3.0 + pow(xi2*(1.0 / 2.0) - 1.0 / 2.0, 3.0)*2.0 - 1.0))) + C*prmeter*(weight1*(r0 + S*l*(xi1*(1.0 / 2.0) + 1.0 / 2.0))*((k / l + (S*k*nu*(xi1*(1.0 / 2.0) - 1.0 / 2.0)) / (r0 + S*l*(xi1*(1.0 / 2.0) + 1.0 / 2.0))) / l + (S*(xi1*(1.0 / 2.0) + 1.0 / 2.0)*((k*nu) / l + (S*k*(xi1*(1.0 / 2.0) - 1.0 / 2.0)) / (r0 + S*l*(xi1*(1.0 / 2.0) + 1.0 / 2.0)))) / (r0 + S*l*(xi1*(1.0 / 2.0) + 1.0 / 2.0))) + weight1*(r0 - S*l*(xi1*(1.0 / 2.0) - 1.0 / 2.0))*((k / l - (S*k*nu*(xi1*(1.0 / 2.0) + 1.0 / 2.0)) / (r0 - S*l*(xi1*(1.0 / 2.0) - 1.0 / 2.0))) / l - (S*(xi1*(1.0 / 2.0) - 1.0 / 2.0)*((k*nu) / l - (S*k*(xi1*(1.0 / 2.0) + 1.0 / 2.0)) / (r0 - S*l*(xi1*(1.0 / 2.0) - 1.0 / 2.0)))) / (r0 - S*l*(xi1*(1.0 / 2.0) - 1.0 / 2.0))) + weight2*(r0 + S*l*(xi2*(1.0 / 2.0) + 1.0 / 2.0))*((k / l + (S*k*nu*(xi2*(1.0 / 2.0) - 1.0 / 2.0)) / (r0 + S*l*(xi2*(1.0 / 2.0) + 1.0 / 2.0))) / l + (S*(xi2*(1.0 / 2.0) + 1.0 / 2.0)*((k*nu) / l + (S*k*(xi2*(1.0 / 2.0) - 1.0 / 2.0)) / (r0 + S*l*(xi2*(1.0 / 2.0) + 1.0 / 2.0)))) / (r0 + S*l*(xi2*(1.0 / 2.0) + 1.0 / 2.0))) + weight2*(r0 - S*l*(xi2*(1.0 / 2.0) - 1.0 / 2.0))*((k / l - (S*k*nu*(xi2*(1.0 / 2.0) + 1.0 / 2.0)) / (r0 - S*l*(xi2*(1.0 / 2.0) - 1.0 / 2.0))) / l - (S*(xi2*(1.0 / 2.0) - 1.0 / 2.0)*((k*nu) / l - (S*k*(xi2*(1.0 / 2.0) + 1.0 / 2.0)) / (r0 - S*l*(xi2*(1.0 / 2.0) - 1.0 / 2.0)))) / (r0 - S*l*(xi2*(1.0 / 2.0) - 1.0 / 2.0))))) + S*(C*prmeter*(C*weight1*((k*nu) / l + (S*k*(xi1*(1.0 / 2.0) - 1.0 / 2.0)) / (r0 + S*l*(xi1*(1.0 / 2.0) + 1.0 / 2.0)))*(pow(xi1*(1.0 / 2.0) + 1.0 / 2.0, 2.0)*3.0 - pow(xi1*(1.0 / 2.0) + 1.0 / 2.0, 3.0)*2.0) + C*weight1*((k*nu) / l - (S*k*(xi1*(1.0 / 2.0) + 1.0 / 2.0)) / (r0 - S*l*(xi1*(1.0 / 2.0) - 1.0 / 2.0)))*(pow(xi1*(1.0 / 2.0) - 1.0 / 2.0, 2.0)*3.0 + pow(xi1*(1.0 / 2.0) - 1.0 / 2.0, 3.0)*2.0) + C*weight2*((k*nu) / l + (S*k*(xi2*(1.0 / 2.0) - 1.0 / 2.0)) / (r0 + S*l*(xi2*(1.0 / 2.0) + 1.0 / 2.0)))*(pow(xi2*(1.0 / 2.0) + 1.0 / 2.0, 2.0)*3.0 - pow(xi2*(1.0 / 2.0) + 1.0 / 2.0, 3.0)*2.0) + C*weight2*((k*nu) / l - (S*k*(xi2*(1.0 / 2.0) + 1.0 / 2.0)) / (r0 - S*l*(xi2*(1.0 / 2.0) - 1.0 / 2.0)))*(pow(xi2*(1.0 / 2.0) - 1.0 / 2.0, 2.0)*3.0 + pow(xi2*(1.0 / 2.0) - 1.0 / 2.0, 3.0)*2.0)) + S*prmeter*(weight1*(r0 + S*l*(xi1*(1.0 / 2.0) + 1.0 / 2.0))*(1.0 / (l*l)*xi1*((h*h)*k*1.0 / (l*l)*xi1*(1.0 / 2.0) - (S*(h*h)*k*nu*(xi1*3.0 - pow(xi1*(1.0 / 2.0) + 1.0 / 2.0, 2.0)*6.0 + 3.0)*(1.0 / 1.2E1)) / (l*(r0 + S*l*(xi1*(1.0 / 2.0) + 1.0 / 2.0))))*-6.0 + (S*((h*h)*k*1.0 / (l*l)*nu*xi1*(1.0 / 2.0) - (S*(h*h)*k*(xi1*3.0 - pow(xi1*(1.0 / 2.0) + 1.0 / 2.0, 2.0)*6.0 + 3.0)*(1.0 / 1.2E1)) / (l*(r0 + S*l*(xi1*(1.0 / 2.0) + 1.0 / 2.0))))*(xi1*3.0 - pow(xi1*(1.0 / 2.0) + 1.0 / 2.0, 2.0)*6.0 + 3.0)) / (l*(r0 + S*l*(xi1*(1.0 / 2.0) + 1.0 / 2.0))) + (C*C)*k*1.0 / pow(r0 + S*l*(xi1*(1.0 / 2.0) + 1.0 / 2.0), 2.0)*(pow(xi1*(1.0 / 2.0) + 1.0 / 2.0, 2.0)*3.0 - pow(xi1*(1.0 / 2.0) + 1.0 / 2.0, 3.0)*2.0)*(pow(xi1*(1.0 / 2.0) + 1.0 / 2.0, 2.0)*-3.0 + pow(xi1*(1.0 / 2.0) + 1.0 / 2.0, 3.0)*2.0 + 1.0)) - weight1*(r0 - S*l*(xi1*(1.0 / 2.0) - 1.0 / 2.0))*(1.0 / (l*l)*xi1*((h*h)*k*1.0 / (l*l)*xi1*(1.0 / 2.0) - (S*(h*h)*k*nu*(xi1*3.0 + pow(xi1*(1.0 / 2.0) - 1.0 / 2.0, 2.0)*6.0 - 3.0)*(1.0 / 1.2E1)) / (l*(r0 - S*l*(xi1*(1.0 / 2.0) - 1.0 / 2.0))))*6.0 - (S*((h*h)*k*1.0 / (l*l)*nu*xi1*(1.0 / 2.0) - (S*(h*h)*k*(xi1*3.0 + pow(xi1*(1.0 / 2.0) - 1.0 / 2.0, 2.0)*6.0 - 3.0)*(1.0 / 1.2E1)) / (l*(r0 - S*l*(xi1*(1.0 / 2.0) - 1.0 / 2.0))))*(xi1*3.0 + pow(xi1*(1.0 / 2.0) - 1.0 / 2.0, 2.0)*6.0 - 3.0)) / (l*(r0 - S*l*(xi1*(1.0 / 2.0) - 1.0 / 2.0))) + (C*C)*k*1.0 / pow(r0 - S*l*(xi1*(1.0 / 2.0) - 1.0 / 2.0), 2.0)*(pow(xi1*(1.0 / 2.0) - 1.0 / 2.0, 2.0)*3.0 + pow(xi1*(1.0 / 2.0) - 1.0 / 2.0, 3.0)*2.0)*(pow(xi1*(1.0 / 2.0) - 1.0 / 2.0, 2.0)*3.0 + pow(xi1*(1.0 / 2.0) - 1.0 / 2.0, 3.0)*2.0 - 1.0)) + weight2*(r0 + S*l*(xi2*(1.0 / 2.0) + 1.0 / 2.0))*(1.0 / (l*l)*xi2*((h*h)*k*1.0 / (l*l)*xi2*(1.0 / 2.0) - (S*(h*h)*k*nu*(xi2*3.0 - pow(xi2*(1.0 / 2.0) + 1.0 / 2.0, 2.0)*6.0 + 3.0)*(1.0 / 1.2E1)) / (l*(r0 + S*l*(xi2*(1.0 / 2.0) + 1.0 / 2.0))))*-6.0 + (S*((h*h)*k*1.0 / (l*l)*nu*xi2*(1.0 / 2.0) - (S*(h*h)*k*(xi2*3.0 - pow(xi2*(1.0 / 2.0) + 1.0 / 2.0, 2.0)*6.0 + 3.0)*(1.0 / 1.2E1)) / (l*(r0 + S*l*(xi2*(1.0 / 2.0) + 1.0 / 2.0))))*(xi2*3.0 - pow(xi2*(1.0 / 2.0) + 1.0 / 2.0, 2.0)*6.0 + 3.0)) / (l*(r0 + S*l*(xi2*(1.0 / 2.0) + 1.0 / 2.0))) + (C*C)*k*1.0 / pow(r0 + S*l*(xi2*(1.0 / 2.0) + 1.0 / 2.0), 2.0)*(pow(xi2*(1.0 / 2.0) + 1.0 / 2.0, 2.0)*3.0 - pow(xi2*(1.0 / 2.0) + 1.0 / 2.0, 3.0)*2.0)*(pow(xi2*(1.0 / 2.0) + 1.0 / 2.0, 2.0)*-3.0 + pow(xi2*(1.0 / 2.0) + 1.0 / 2.0, 3.0)*2.0 + 1.0)) - weight2*(r0 - S*l*(xi2*(1.0 / 2.0) - 1.0 / 2.0))*(1.0 / (l*l)*xi2*((h*h)*k*1.0 / (l*l)*xi2*(1.0 / 2.0) - (S*(h*h)*k*nu*(xi2*3.0 + pow(xi2*(1.0 / 2.0) - 1.0 / 2.0, 2.0)*6.0 - 3.0)*(1.0 / 1.2E1)) / (l*(r0 - S*l*(xi2*(1.0 / 2.0) - 1.0 / 2.0))))*6.0 - (S*((h*h)*k*1.0 / (l*l)*nu*xi2*(1.0 / 2.0) - (S*(h*h)*k*(xi2*3.0 + pow(xi2*(1.0 / 2.0) - 1.0 / 2.0, 2.0)*6.0 - 3.0)*(1.0 / 1.2E1)) / (l*(r0 - S*l*(xi2*(1.0 / 2.0) - 1.0 / 2.0))))*(xi2*3.0 + pow(xi2*(1.0 / 2.0) - 1.0 / 2.0, 2.0)*6.0 - 3.0)) / (l*(r0 - S*l*(xi2*(1.0 / 2.0) - 1.0 / 2.0))) + (C*C)*k*1.0 / pow(r0 - S*l*(xi2*(1.0 / 2.0) - 1.0 / 2.0), 2.0)*(pow(xi2*(1.0 / 2.0) - 1.0 / 2.0, 2.0)*3.0 + pow(xi2*(1.0 / 2.0) - 1.0 / 2.0, 3.0)*2.0)*(pow(xi2*(1.0 / 2.0) - 1.0 / 2.0, 2.0)*3.0 + pow(xi2*(1.0 / 2.0) - 1.0 / 2.0, 3.0)*2.0 - 1.0))));
	
	Matrix[36] = C*(S*prmeter*(C*weight1*((k*nu) / l + (S*k*(xi1*(1.0 / 2.0) + 1.0 / 2.0)) / (r0 + S*l*(xi1*(1.0 / 2.0) + 1.0 / 2.0)))*(pow(xi1*(1.0 / 2.0) + 1.0 / 2.0, 2.0)*3.0 - pow(xi1*(1.0 / 2.0) + 1.0 / 2.0, 3.0)*2.0) + C*weight1*((k*nu) / l - (S*k*(xi1*(1.0 / 2.0) - 1.0 / 2.0)) / (r0 - S*l*(xi1*(1.0 / 2.0) - 1.0 / 2.0)))*(pow(xi1*(1.0 / 2.0) - 1.0 / 2.0, 2.0)*3.0 + pow(xi1*(1.0 / 2.0) - 1.0 / 2.0, 3.0)*2.0) + C*weight2*((k*nu) / l + (S*k*(xi2*(1.0 / 2.0) + 1.0 / 2.0)) / (r0 + S*l*(xi2*(1.0 / 2.0) + 1.0 / 2.0)))*(pow(xi2*(1.0 / 2.0) + 1.0 / 2.0, 2.0)*3.0 - pow(xi2*(1.0 / 2.0) + 1.0 / 2.0, 3.0)*2.0) + C*weight2*((k*nu) / l - (S*k*(xi2*(1.0 / 2.0) - 1.0 / 2.0)) / (r0 - S*l*(xi2*(1.0 / 2.0) - 1.0 / 2.0)))*(pow(xi2*(1.0 / 2.0) - 1.0 / 2.0, 2.0)*3.0 + pow(xi2*(1.0 / 2.0) - 1.0 / 2.0, 3.0)*2.0)) + C*prmeter*(weight1*(r0 + S*l*(xi1*(1.0 / 2.0) + 1.0 / 2.0))*(1.0 / (l*l)*xi1*((h*h)*k*1.0 / (l*l)*xi1*(1.0 / 2.0) - (S*(h*h)*k*nu*(xi1*3.0 - pow(xi1*(1.0 / 2.0) + 1.0 / 2.0, 2.0)*6.0 + 3.0)*(1.0 / 1.2E1)) / (l*(r0 + S*l*(xi1*(1.0 / 2.0) + 1.0 / 2.0))))*6.0 + (C*C)*k*1.0 / pow(r0 + S*l*(xi1*(1.0 / 2.0) + 1.0 / 2.0), 2.0)*pow(pow(xi1*(1.0 / 2.0) + 1.0 / 2.0, 2.0)*3.0 - pow(xi1*(1.0 / 2.0) + 1.0 / 2.0, 3.0)*2.0, 2.0) - (S*((h*h)*k*1.0 / (l*l)*nu*xi1*(1.0 / 2.0) - (S*(h*h)*k*(xi1*3.0 - pow(xi1*(1.0 / 2.0) + 1.0 / 2.0, 2.0)*6.0 + 3.0)*(1.0 / 1.2E1)) / (l*(r0 + S*l*(xi1*(1.0 / 2.0) + 1.0 / 2.0))))*(xi1*3.0 - pow(xi1*(1.0 / 2.0) + 1.0 / 2.0, 2.0)*6.0 + 3.0)) / (l*(r0 + S*l*(xi1*(1.0 / 2.0) + 1.0 / 2.0)))) + weight1*(r0 - S*l*(xi1*(1.0 / 2.0) - 1.0 / 2.0))*(1.0 / (l*l)*xi1*((h*h)*k*1.0 / (l*l)*xi1*(1.0 / 2.0) - (S*(h*h)*k*nu*(xi1*3.0 + pow(xi1*(1.0 / 2.0) - 1.0 / 2.0, 2.0)*6.0 - 3.0)*(1.0 / 1.2E1)) / (l*(r0 - S*l*(xi1*(1.0 / 2.0) - 1.0 / 2.0))))*6.0 + (C*C)*k*1.0 / pow(r0 - S*l*(xi1*(1.0 / 2.0) - 1.0 / 2.0), 2.0)*pow(pow(xi1*(1.0 / 2.0) - 1.0 / 2.0, 2.0)*3.0 + pow(xi1*(1.0 / 2.0) - 1.0 / 2.0, 3.0)*2.0, 2.0) - (S*((h*h)*k*1.0 / (l*l)*nu*xi1*(1.0 / 2.0) - (S*(h*h)*k*(xi1*3.0 + pow(xi1*(1.0 / 2.0) - 1.0 / 2.0, 2.0)*6.0 - 3.0)*(1.0 / 1.2E1)) / (l*(r0 - S*l*(xi1*(1.0 / 2.0) - 1.0 / 2.0))))*(xi1*3.0 + pow(xi1*(1.0 / 2.0) - 1.0 / 2.0, 2.0)*6.0 - 3.0)) / (l*(r0 - S*l*(xi1*(1.0 / 2.0) - 1.0 / 2.0)))) + weight2*(r0 + S*l*(xi2*(1.0 / 2.0) + 1.0 / 2.0))*(1.0 / (l*l)*xi2*((h*h)*k*1.0 / (l*l)*xi2*(1.0 / 2.0) - (S*(h*h)*k*nu*(xi2*3.0 - pow(xi2*(1.0 / 2.0) + 1.0 / 2.0, 2.0)*6.0 + 3.0)*(1.0 / 1.2E1)) / (l*(r0 + S*l*(xi2*(1.0 / 2.0) + 1.0 / 2.0))))*6.0 + (C*C)*k*1.0 / pow(r0 + S*l*(xi2*(1.0 / 2.0) + 1.0 / 2.0), 2.0)*pow(pow(xi2*(1.0 / 2.0) + 1.0 / 2.0, 2.0)*3.0 - pow(xi2*(1.0 / 2.0) + 1.0 / 2.0, 3.0)*2.0, 2.0) - (S*((h*h)*k*1.0 / (l*l)*nu*xi2*(1.0 / 2.0) - (S*(h*h)*k*(xi2*3.0 - pow(xi2*(1.0 / 2.0) + 1.0 / 2.0, 2.0)*6.0 + 3.0)*(1.0 / 1.2E1)) / (l*(r0 + S*l*(xi2*(1.0 / 2.0) + 1.0 / 2.0))))*(xi2*3.0 - pow(xi2*(1.0 / 2.0) + 1.0 / 2.0, 2.0)*6.0 + 3.0)) / (l*(r0 + S*l*(xi2*(1.0 / 2.0) + 1.0 / 2.0)))) + weight2*(r0 - S*l*(xi2*(1.0 / 2.0) - 1.0 / 2.0))*(1.0 / (l*l)*xi2*((h*h)*k*1.0 / (l*l)*xi2*(1.0 / 2.0) - (S*(h*h)*k*nu*(xi2*3.0 + pow(xi2*(1.0 / 2.0) - 1.0 / 2.0, 2.0)*6.0 - 3.0)*(1.0 / 1.2E1)) / (l*(r0 - S*l*(xi2*(1.0 / 2.0) - 1.0 / 2.0))))*6.0 + (C*C)*k*1.0 / pow(r0 - S*l*(xi2*(1.0 / 2.0) - 1.0 / 2.0), 2.0)*pow(pow(xi2*(1.0 / 2.0) - 1.0 / 2.0, 2.0)*3.0 + pow(xi2*(1.0 / 2.0) - 1.0 / 2.0, 3.0)*2.0, 2.0) - (S*((h*h)*k*1.0 / (l*l)*nu*xi2*(1.0 / 2.0) - (S*(h*h)*k*(xi2*3.0 + pow(xi2*(1.0 / 2.0) - 1.0 / 2.0, 2.0)*6.0 - 3.0)*(1.0 / 1.2E1)) / (l*(r0 - S*l*(xi2*(1.0 / 2.0) - 1.0 / 2.0))))*(xi2*3.0 + pow(xi2*(1.0 / 2.0) - 1.0 / 2.0, 2.0)*6.0 - 3.0)) / (l*(r0 - S*l*(xi2*(1.0 / 2.0) - 1.0 / 2.0)))))) + S*(S*prmeter*(weight1*(r0 + S*l*(xi1*(1.0 / 2.0) + 1.0 / 2.0))*((k / l + (S*k*nu*(xi1*(1.0 / 2.0) + 1.0 / 2.0)) / (r0 + S*l*(xi1*(1.0 / 2.0) + 1.0 / 2.0))) / l + (S*(xi1*(1.0 / 2.0) + 1.0 / 2.0)*((k*nu) / l + (S*k*(xi1*(1.0 / 2.0) + 1.0 / 2.0)) / (r0 + S*l*(xi1*(1.0 / 2.0) + 1.0 / 2.0)))) / (r0 + S*l*(xi1*(1.0 / 2.0) + 1.0 / 2.0))) + weight1*(r0 - S*l*(xi1*(1.0 / 2.0) - 1.0 / 2.0))*((k / l - (S*k*nu*(xi1*(1.0 / 2.0) - 1.0 / 2.0)) / (r0 - S*l*(xi1*(1.0 / 2.0) - 1.0 / 2.0))) / l - (S*(xi1*(1.0 / 2.0) - 1.0 / 2.0)*((k*nu) / l - (S*k*(xi1*(1.0 / 2.0) - 1.0 / 2.0)) / (r0 - S*l*(xi1*(1.0 / 2.0) - 1.0 / 2.0)))) / (r0 - S*l*(xi1*(1.0 / 2.0) - 1.0 / 2.0))) + weight2*(r0 + S*l*(xi2*(1.0 / 2.0) + 1.0 / 2.0))*((k / l + (S*k*nu*(xi2*(1.0 / 2.0) + 1.0 / 2.0)) / (r0 + S*l*(xi2*(1.0 / 2.0) + 1.0 / 2.0))) / l + (S*(xi2*(1.0 / 2.0) + 1.0 / 2.0)*((k*nu) / l + (S*k*(xi2*(1.0 / 2.0) + 1.0 / 2.0)) / (r0 + S*l*(xi2*(1.0 / 2.0) + 1.0 / 2.0)))) / (r0 + S*l*(xi2*(1.0 / 2.0) + 1.0 / 2.0))) + weight2*(r0 - S*l*(xi2*(1.0 / 2.0) - 1.0 / 2.0))*((k / l - (S*k*nu*(xi2*(1.0 / 2.0) - 1.0 / 2.0)) / (r0 - S*l*(xi2*(1.0 / 2.0) - 1.0 / 2.0))) / l - (S*(xi2*(1.0 / 2.0) - 1.0 / 2.0)*((k*nu) / l - (S*k*(xi2*(1.0 / 2.0) - 1.0 / 2.0)) / (r0 - S*l*(xi2*(1.0 / 2.0) - 1.0 / 2.0)))) / (r0 - S*l*(xi2*(1.0 / 2.0) - 1.0 / 2.0)))) + C*prmeter*(weight1*(r0 + S*l*(xi1*(1.0 / 2.0) + 1.0 / 2.0))*((C*k*nu*(pow(xi1*(1.0 / 2.0) + 1.0 / 2.0, 2.0)*3.0 - pow(xi1*(1.0 / 2.0) + 1.0 / 2.0, 3.0)*2.0)) / (l*(r0 + S*l*(xi1*(1.0 / 2.0) + 1.0 / 2.0))) + C*S*k*1.0 / pow(r0 + S*l*(xi1*(1.0 / 2.0) + 1.0 / 2.0), 2.0)*(xi1*(1.0 / 2.0) + 1.0 / 2.0)*(pow(xi1*(1.0 / 2.0) + 1.0 / 2.0, 2.0)*3.0 - pow(xi1*(1.0 / 2.0) + 1.0 / 2.0, 3.0)*2.0)) + weight1*(r0 - S*l*(xi1*(1.0 / 2.0) - 1.0 / 2.0))*((C*k*nu*(pow(xi1*(1.0 / 2.0) - 1.0 / 2.0, 2.0)*3.0 + pow(xi1*(1.0 / 2.0) - 1.0 / 2.0, 3.0)*2.0)) / (l*(r0 - S*l*(xi1*(1.0 / 2.0) - 1.0 / 2.0))) - C*S*k*1.0 / pow(r0 - S*l*(xi1*(1.0 / 2.0) - 1.0 / 2.0), 2.0)*(xi1*(1.0 / 2.0) - 1.0 / 2.0)*(pow(xi1*(1.0 / 2.0) - 1.0 / 2.0, 2.0)*3.0 + pow(xi1*(1.0 / 2.0) - 1.0 / 2.0, 3.0)*2.0)) + weight2*(r0 + S*l*(xi2*(1.0 / 2.0) + 1.0 / 2.0))*((C*k*nu*(pow(xi2*(1.0 / 2.0) + 1.0 / 2.0, 2.0)*3.0 - pow(xi2*(1.0 / 2.0) + 1.0 / 2.0, 3.0)*2.0)) / (l*(r0 + S*l*(xi2*(1.0 / 2.0) + 1.0 / 2.0))) + C*S*k*1.0 / pow(r0 + S*l*(xi2*(1.0 / 2.0) + 1.0 / 2.0), 2.0)*(xi2*(1.0 / 2.0) + 1.0 / 2.0)*(pow(xi2*(1.0 / 2.0) + 1.0 / 2.0, 2.0)*3.0 - pow(xi2*(1.0 / 2.0) + 1.0 / 2.0, 3.0)*2.0)) + weight2*(r0 - S*l*(xi2*(1.0 / 2.0) - 1.0 / 2.0))*((C*k*nu*(pow(xi2*(1.0 / 2.0) - 1.0 / 2.0, 2.0)*3.0 + pow(xi2*(1.0 / 2.0) - 1.0 / 2.0, 3.0)*2.0)) / (l*(r0 - S*l*(xi2*(1.0 / 2.0) - 1.0 / 2.0))) - C*S*k*1.0 / pow(r0 - S*l*(xi2*(1.0 / 2.0) - 1.0 / 2.0), 2.0)*(xi2*(1.0 / 2.0) - 1.0 / 2.0)*(pow(xi2*(1.0 / 2.0) - 1.0 / 2.0, 2.0)*3.0 + pow(xi2*(1.0 / 2.0) - 1.0 / 2.0, 3.0)*2.0))));
	Matrix[38] = C*(C*prmeter*(C*weight1*((k*nu) / l + (S*k*(xi1*(1.0 / 2.0) + 1.0 / 2.0)) / (r0 + S*l*(xi1*(1.0 / 2.0) + 1.0 / 2.0)))*(pow(xi1*(1.0 / 2.0) + 1.0 / 2.0, 2.0)*3.0 - pow(xi1*(1.0 / 2.0) + 1.0 / 2.0, 3.0)*2.0) + C*weight1*((k*nu) / l - (S*k*(xi1*(1.0 / 2.0) - 1.0 / 2.0)) / (r0 - S*l*(xi1*(1.0 / 2.0) - 1.0 / 2.0)))*(pow(xi1*(1.0 / 2.0) - 1.0 / 2.0, 2.0)*3.0 + pow(xi1*(1.0 / 2.0) - 1.0 / 2.0, 3.0)*2.0) + C*weight2*((k*nu) / l + (S*k*(xi2*(1.0 / 2.0) + 1.0 / 2.0)) / (r0 + S*l*(xi2*(1.0 / 2.0) + 1.0 / 2.0)))*(pow(xi2*(1.0 / 2.0) + 1.0 / 2.0, 2.0)*3.0 - pow(xi2*(1.0 / 2.0) + 1.0 / 2.0, 3.0)*2.0) + C*weight2*((k*nu) / l - (S*k*(xi2*(1.0 / 2.0) - 1.0 / 2.0)) / (r0 - S*l*(xi2*(1.0 / 2.0) - 1.0 / 2.0)))*(pow(xi2*(1.0 / 2.0) - 1.0 / 2.0, 2.0)*3.0 + pow(xi2*(1.0 / 2.0) - 1.0 / 2.0, 3.0)*2.0)) - S*prmeter*(weight1*(r0 + S*l*(xi1*(1.0 / 2.0) + 1.0 / 2.0))*(1.0 / (l*l)*xi1*((h*h)*k*1.0 / (l*l)*xi1*(1.0 / 2.0) - (S*(h*h)*k*nu*(xi1*3.0 - pow(xi1*(1.0 / 2.0) + 1.0 / 2.0, 2.0)*6.0 + 3.0)*(1.0 / 1.2E1)) / (l*(r0 + S*l*(xi1*(1.0 / 2.0) + 1.0 / 2.0))))*6.0 + (C*C)*k*1.0 / pow(r0 + S*l*(xi1*(1.0 / 2.0) + 1.0 / 2.0), 2.0)*pow(pow(xi1*(1.0 / 2.0) + 1.0 / 2.0, 2.0)*3.0 - pow(xi1*(1.0 / 2.0) + 1.0 / 2.0, 3.0)*2.0, 2.0) - (S*((h*h)*k*1.0 / (l*l)*nu*xi1*(1.0 / 2.0) - (S*(h*h)*k*(xi1*3.0 - pow(xi1*(1.0 / 2.0) + 1.0 / 2.0, 2.0)*6.0 + 3.0)*(1.0 / 1.2E1)) / (l*(r0 + S*l*(xi1*(1.0 / 2.0) + 1.0 / 2.0))))*(xi1*3.0 - pow(xi1*(1.0 / 2.0) + 1.0 / 2.0, 2.0)*6.0 + 3.0)) / (l*(r0 + S*l*(xi1*(1.0 / 2.0) + 1.0 / 2.0)))) + weight1*(r0 - S*l*(xi1*(1.0 / 2.0) - 1.0 / 2.0))*(1.0 / (l*l)*xi1*((h*h)*k*1.0 / (l*l)*xi1*(1.0 / 2.0) - (S*(h*h)*k*nu*(xi1*3.0 + pow(xi1*(1.0 / 2.0) - 1.0 / 2.0, 2.0)*6.0 - 3.0)*(1.0 / 1.2E1)) / (l*(r0 - S*l*(xi1*(1.0 / 2.0) - 1.0 / 2.0))))*6.0 + (C*C)*k*1.0 / pow(r0 - S*l*(xi1*(1.0 / 2.0) - 1.0 / 2.0), 2.0)*pow(pow(xi1*(1.0 / 2.0) - 1.0 / 2.0, 2.0)*3.0 + pow(xi1*(1.0 / 2.0) - 1.0 / 2.0, 3.0)*2.0, 2.0) - (S*((h*h)*k*1.0 / (l*l)*nu*xi1*(1.0 / 2.0) - (S*(h*h)*k*(xi1*3.0 + pow(xi1*(1.0 / 2.0) - 1.0 / 2.0, 2.0)*6.0 - 3.0)*(1.0 / 1.2E1)) / (l*(r0 - S*l*(xi1*(1.0 / 2.0) - 1.0 / 2.0))))*(xi1*3.0 + pow(xi1*(1.0 / 2.0) - 1.0 / 2.0, 2.0)*6.0 - 3.0)) / (l*(r0 - S*l*(xi1*(1.0 / 2.0) - 1.0 / 2.0)))) + weight2*(r0 + S*l*(xi2*(1.0 / 2.0) + 1.0 / 2.0))*(1.0 / (l*l)*xi2*((h*h)*k*1.0 / (l*l)*xi2*(1.0 / 2.0) - (S*(h*h)*k*nu*(xi2*3.0 - pow(xi2*(1.0 / 2.0) + 1.0 / 2.0, 2.0)*6.0 + 3.0)*(1.0 / 1.2E1)) / (l*(r0 + S*l*(xi2*(1.0 / 2.0) + 1.0 / 2.0))))*6.0 + (C*C)*k*1.0 / pow(r0 + S*l*(xi2*(1.0 / 2.0) + 1.0 / 2.0), 2.0)*pow(pow(xi2*(1.0 / 2.0) + 1.0 / 2.0, 2.0)*3.0 - pow(xi2*(1.0 / 2.0) + 1.0 / 2.0, 3.0)*2.0, 2.0) - (S*((h*h)*k*1.0 / (l*l)*nu*xi2*(1.0 / 2.0) - (S*(h*h)*k*(xi2*3.0 - pow(xi2*(1.0 / 2.0) + 1.0 / 2.0, 2.0)*6.0 + 3.0)*(1.0 / 1.2E1)) / (l*(r0 + S*l*(xi2*(1.0 / 2.0) + 1.0 / 2.0))))*(xi2*3.0 - pow(xi2*(1.0 / 2.0) + 1.0 / 2.0, 2.0)*6.0 + 3.0)) / (l*(r0 + S*l*(xi2*(1.0 / 2.0) + 1.0 / 2.0)))) + weight2*(r0 - S*l*(xi2*(1.0 / 2.0) - 1.0 / 2.0))*(1.0 / (l*l)*xi2*((h*h)*k*1.0 / (l*l)*xi2*(1.0 / 2.0) - (S*(h*h)*k*nu*(xi2*3.0 + pow(xi2*(1.0 / 2.0) - 1.0 / 2.0, 2.0)*6.0 - 3.0)*(1.0 / 1.2E1)) / (l*(r0 - S*l*(xi2*(1.0 / 2.0) - 1.0 / 2.0))))*6.0 + (C*C)*k*1.0 / pow(r0 - S*l*(xi2*(1.0 / 2.0) - 1.0 / 2.0), 2.0)*pow(pow(xi2*(1.0 / 2.0) - 1.0 / 2.0, 2.0)*3.0 + pow(xi2*(1.0 / 2.0) - 1.0 / 2.0, 3.0)*2.0, 2.0) - (S*((h*h)*k*1.0 / (l*l)*nu*xi2*(1.0 / 2.0) - (S*(h*h)*k*(xi2*3.0 + pow(xi2*(1.0 / 2.0) - 1.0 / 2.0, 2.0)*6.0 - 3.0)*(1.0 / 1.2E1)) / (l*(r0 - S*l*(xi2*(1.0 / 2.0) - 1.0 / 2.0))))*(xi2*3.0 + pow(xi2*(1.0 / 2.0) - 1.0 / 2.0, 2.0)*6.0 - 3.0)) / (l*(r0 - S*l*(xi2*(1.0 / 2.0) - 1.0 / 2.0)))))) - S*(S*prmeter*(weight1*(r0 + S*l*(xi1*(1.0 / 2.0) + 1.0 / 2.0))*((C*k*nu*(pow(xi1*(1.0 / 2.0) + 1.0 / 2.0, 2.0)*3.0 - pow(xi1*(1.0 / 2.0) + 1.0 / 2.0, 3.0)*2.0)) / (l*(r0 + S*l*(xi1*(1.0 / 2.0) + 1.0 / 2.0))) + C*S*k*1.0 / pow(r0 + S*l*(xi1*(1.0 / 2.0) + 1.0 / 2.0), 2.0)*(xi1*(1.0 / 2.0) + 1.0 / 2.0)*(pow(xi1*(1.0 / 2.0) + 1.0 / 2.0, 2.0)*3.0 - pow(xi1*(1.0 / 2.0) + 1.0 / 2.0, 3.0)*2.0)) + weight1*(r0 - S*l*(xi1*(1.0 / 2.0) - 1.0 / 2.0))*((C*k*nu*(pow(xi1*(1.0 / 2.0) - 1.0 / 2.0, 2.0)*3.0 + pow(xi1*(1.0 / 2.0) - 1.0 / 2.0, 3.0)*2.0)) / (l*(r0 - S*l*(xi1*(1.0 / 2.0) - 1.0 / 2.0))) - C*S*k*1.0 / pow(r0 - S*l*(xi1*(1.0 / 2.0) - 1.0 / 2.0), 2.0)*(xi1*(1.0 / 2.0) - 1.0 / 2.0)*(pow(xi1*(1.0 / 2.0) - 1.0 / 2.0, 2.0)*3.0 + pow(xi1*(1.0 / 2.0) - 1.0 / 2.0, 3.0)*2.0)) + weight2*(r0 + S*l*(xi2*(1.0 / 2.0) + 1.0 / 2.0))*((C*k*nu*(pow(xi2*(1.0 / 2.0) + 1.0 / 2.0, 2.0)*3.0 - pow(xi2*(1.0 / 2.0) + 1.0 / 2.0, 3.0)*2.0)) / (l*(r0 + S*l*(xi2*(1.0 / 2.0) + 1.0 / 2.0))) + C*S*k*1.0 / pow(r0 + S*l*(xi2*(1.0 / 2.0) + 1.0 / 2.0), 2.0)*(xi2*(1.0 / 2.0) + 1.0 / 2.0)*(pow(xi2*(1.0 / 2.0) + 1.0 / 2.0, 2.0)*3.0 - pow(xi2*(1.0 / 2.0) + 1.0 / 2.0, 3.0)*2.0)) + weight2*(r0 - S*l*(xi2*(1.0 / 2.0) - 1.0 / 2.0))*((C*k*nu*(pow(xi2*(1.0 / 2.0) - 1.0 / 2.0, 2.0)*3.0 + pow(xi2*(1.0 / 2.0) - 1.0 / 2.0, 3.0)*2.0)) / (l*(r0 - S*l*(xi2*(1.0 / 2.0) - 1.0 / 2.0))) - C*S*k*1.0 / pow(r0 - S*l*(xi2*(1.0 / 2.0) - 1.0 / 2.0), 2.0)*(xi2*(1.0 / 2.0) - 1.0 / 2.0)*(pow(xi2*(1.0 / 2.0) - 1.0 / 2.0, 2.0)*3.0 + pow(xi2*(1.0 / 2.0) - 1.0 / 2.0, 3.0)*2.0))) - C*prmeter*(weight1*(r0 + S*l*(xi1*(1.0 / 2.0) + 1.0 / 2.0))*((k / l + (S*k*nu*(xi1*(1.0 / 2.0) + 1.0 / 2.0)) / (r0 + S*l*(xi1*(1.0 / 2.0) + 1.0 / 2.0))) / l + (S*(xi1*(1.0 / 2.0) + 1.0 / 2.0)*((k*nu) / l + (S*k*(xi1*(1.0 / 2.0) + 1.0 / 2.0)) / (r0 + S*l*(xi1*(1.0 / 2.0) + 1.0 / 2.0)))) / (r0 + S*l*(xi1*(1.0 / 2.0) + 1.0 / 2.0))) + weight1*(r0 - S*l*(xi1*(1.0 / 2.0) - 1.0 / 2.0))*((k / l - (S*k*nu*(xi1*(1.0 / 2.0) - 1.0 / 2.0)) / (r0 - S*l*(xi1*(1.0 / 2.0) - 1.0 / 2.0))) / l - (S*(xi1*(1.0 / 2.0) - 1.0 / 2.0)*((k*nu) / l - (S*k*(xi1*(1.0 / 2.0) - 1.0 / 2.0)) / (r0 - S*l*(xi1*(1.0 / 2.0) - 1.0 / 2.0)))) / (r0 - S*l*(xi1*(1.0 / 2.0) - 1.0 / 2.0))) + weight2*(r0 + S*l*(xi2*(1.0 / 2.0) + 1.0 / 2.0))*((k / l + (S*k*nu*(xi2*(1.0 / 2.0) + 1.0 / 2.0)) / (r0 + S*l*(xi2*(1.0 / 2.0) + 1.0 / 2.0))) / l + (S*(xi2*(1.0 / 2.0) + 1.0 / 2.0)*((k*nu) / l + (S*k*(xi2*(1.0 / 2.0) + 1.0 / 2.0)) / (r0 + S*l*(xi2*(1.0 / 2.0) + 1.0 / 2.0)))) / (r0 + S*l*(xi2*(1.0 / 2.0) + 1.0 / 2.0))) + weight2*(r0 - S*l*(xi2*(1.0 / 2.0) - 1.0 / 2.0))*((k / l - (S*k*nu*(xi2*(1.0 / 2.0) - 1.0 / 2.0)) / (r0 - S*l*(xi2*(1.0 / 2.0) - 1.0 / 2.0))) / l - (S*(xi2*(1.0 / 2.0) - 1.0 / 2.0)*((k*nu) / l - (S*k*(xi2*(1.0 / 2.0) - 1.0 / 2.0)) / (r0 - S*l*(xi2*(1.0 / 2.0) - 1.0 / 2.0)))) / (r0 - S*l*(xi2*(1.0 / 2.0) - 1.0 / 2.0)))));
	Matrix[40] = S*prmeter*(weight1*(r0 + S*l*(xi1*(1.0 / 2.0) + 1.0 / 2.0))*((C*k*nu*(xi1*(1.0 / 2.0) - pow(xi1*(1.0 / 2.0) + 1.0 / 2.0, 2.0)*2.0 + pow(xi1*(1.0 / 2.0) + 1.0 / 2.0, 3.0) + 1.0 / 2.0)) / (r0 + S*l*(xi1*(1.0 / 2.0) + 1.0 / 2.0)) + C*S*k*l*1.0 / pow(r0 + S*l*(xi1*(1.0 / 2.0) + 1.0 / 2.0), 2.0)*(xi1*(1.0 / 2.0) + 1.0 / 2.0)*(xi1*(1.0 / 2.0) - pow(xi1*(1.0 / 2.0) + 1.0 / 2.0, 2.0)*2.0 + pow(xi1*(1.0 / 2.0) + 1.0 / 2.0, 3.0) + 1.0 / 2.0)) - weight1*(r0 - S*l*(xi1*(1.0 / 2.0) - 1.0 / 2.0))*((C*k*nu*(xi1*(1.0 / 2.0) + pow(xi1*(1.0 / 2.0) - 1.0 / 2.0, 2.0)*2.0 + pow(xi1*(1.0 / 2.0) - 1.0 / 2.0, 3.0) - 1.0 / 2.0)) / (r0 - S*l*(xi1*(1.0 / 2.0) - 1.0 / 2.0)) - C*S*k*l*1.0 / pow(r0 - S*l*(xi1*(1.0 / 2.0) - 1.0 / 2.0), 2.0)*(xi1*(1.0 / 2.0) - 1.0 / 2.0)*(xi1*(1.0 / 2.0) + pow(xi1*(1.0 / 2.0) - 1.0 / 2.0, 2.0)*2.0 + pow(xi1*(1.0 / 2.0) - 1.0 / 2.0, 3.0) - 1.0 / 2.0)) + weight2*(r0 + S*l*(xi2*(1.0 / 2.0) + 1.0 / 2.0))*((C*k*nu*(xi2*(1.0 / 2.0) - pow(xi2*(1.0 / 2.0) + 1.0 / 2.0, 2.0)*2.0 + pow(xi2*(1.0 / 2.0) + 1.0 / 2.0, 3.0) + 1.0 / 2.0)) / (r0 + S*l*(xi2*(1.0 / 2.0) + 1.0 / 2.0)) + C*S*k*l*1.0 / pow(r0 + S*l*(xi2*(1.0 / 2.0) + 1.0 / 2.0), 2.0)*(xi2*(1.0 / 2.0) + 1.0 / 2.0)*(xi2*(1.0 / 2.0) - pow(xi2*(1.0 / 2.0) + 1.0 / 2.0, 2.0)*2.0 + pow(xi2*(1.0 / 2.0) + 1.0 / 2.0, 3.0) + 1.0 / 2.0)) - weight2*(r0 - S*l*(xi2*(1.0 / 2.0) - 1.0 / 2.0))*((C*k*nu*(xi2*(1.0 / 2.0) + pow(xi2*(1.0 / 2.0) - 1.0 / 2.0, 2.0)*2.0 + pow(xi2*(1.0 / 2.0) - 1.0 / 2.0, 3.0) - 1.0 / 2.0)) / (r0 - S*l*(xi2*(1.0 / 2.0) - 1.0 / 2.0)) - C*S*k*l*1.0 / pow(r0 - S*l*(xi2*(1.0 / 2.0) - 1.0 / 2.0), 2.0)*(xi2*(1.0 / 2.0) - 1.0 / 2.0)*(xi2*(1.0 / 2.0) + pow(xi2*(1.0 / 2.0) - 1.0 / 2.0, 2.0)*2.0 + pow(xi2*(1.0 / 2.0) - 1.0 / 2.0, 3.0) - 1.0 / 2.0))) + C*prmeter*(weight1*(r0 + S*l*(xi1*(1.0 / 2.0) + 1.0 / 2.0))*(1.0 / (l*l)*xi1*(((h*h)*k*(xi1*3.0 - 1.0)*(1.0 / 1.2E1)) / l - (S*(h*h)*k*nu*(xi1*2.0 - pow(xi1*(1.0 / 2.0) + 1.0 / 2.0, 2.0)*3.0 + 1.0)*(1.0 / 1.2E1)) / (r0 + S*l*(xi1*(1.0 / 2.0) + 1.0 / 2.0)))*-6.0 + (S*(((h*h)*k*nu*(xi1*3.0 - 1.0)*(1.0 / 1.2E1)) / l - (S*(h*h)*k*(xi1*2.0 - pow(xi1*(1.0 / 2.0) + 1.0 / 2.0, 2.0)*3.0 + 1.0)*(1.0 / 1.2E1)) / (r0 + S*l*(xi1*(1.0 / 2.0) + 1.0 / 2.0)))*(xi1*3.0 - pow(xi1*(1.0 / 2.0) + 1.0 / 2.0, 2.0)*6.0 + 3.0)) / (l*(r0 + S*l*(xi1*(1.0 / 2.0) + 1.0 / 2.0))) + (C*C)*k*l*1.0 / pow(r0 + S*l*(xi1*(1.0 / 2.0) + 1.0 / 2.0), 2.0)*(pow(xi1*(1.0 / 2.0) + 1.0 / 2.0, 2.0)*3.0 - pow(xi1*(1.0 / 2.0) + 1.0 / 2.0, 3.0)*2.0)*(xi1*(1.0 / 2.0) - pow(xi1*(1.0 / 2.0) + 1.0 / 2.0, 2.0)*2.0 + pow(xi1*(1.0 / 2.0) + 1.0 / 2.0, 3.0) + 1.0 / 2.0)) - weight1*(r0 - S*l*(xi1*(1.0 / 2.0) - 1.0 / 2.0))*(1.0 / (l*l)*xi1*(((h*h)*k*(xi1*3.0 + 1.0)*(1.0 / 1.2E1)) / l - (S*(h*h)*k*nu*(xi1*2.0 + pow(xi1*(1.0 / 2.0) - 1.0 / 2.0, 2.0)*3.0 - 1.0)*(1.0 / 1.2E1)) / (r0 - S*l*(xi1*(1.0 / 2.0) - 1.0 / 2.0)))*6.0 - (S*(((h*h)*k*nu*(xi1*3.0 + 1.0)*(1.0 / 1.2E1)) / l - (S*(h*h)*k*(xi1*2.0 + pow(xi1*(1.0 / 2.0) - 1.0 / 2.0, 2.0)*3.0 - 1.0)*(1.0 / 1.2E1)) / (r0 - S*l*(xi1*(1.0 / 2.0) - 1.0 / 2.0)))*(xi1*3.0 + pow(xi1*(1.0 / 2.0) - 1.0 / 2.0, 2.0)*6.0 - 3.0)) / (l*(r0 - S*l*(xi1*(1.0 / 2.0) - 1.0 / 2.0))) + (C*C)*k*l*1.0 / pow(r0 - S*l*(xi1*(1.0 / 2.0) - 1.0 / 2.0), 2.0)*(pow(xi1*(1.0 / 2.0) - 1.0 / 2.0, 2.0)*3.0 + pow(xi1*(1.0 / 2.0) - 1.0 / 2.0, 3.0)*2.0)*(xi1*(1.0 / 2.0) + pow(xi1*(1.0 / 2.0) - 1.0 / 2.0, 2.0)*2.0 + pow(xi1*(1.0 / 2.0) - 1.0 / 2.0, 3.0) - 1.0 / 2.0)) + weight2*(r0 + S*l*(xi2*(1.0 / 2.0) + 1.0 / 2.0))*(1.0 / (l*l)*xi2*(((h*h)*k*(xi2*3.0 - 1.0)*(1.0 / 1.2E1)) / l - (S*(h*h)*k*nu*(xi2*2.0 - pow(xi2*(1.0 / 2.0) + 1.0 / 2.0, 2.0)*3.0 + 1.0)*(1.0 / 1.2E1)) / (r0 + S*l*(xi2*(1.0 / 2.0) + 1.0 / 2.0)))*-6.0 + (S*(((h*h)*k*nu*(xi2*3.0 - 1.0)*(1.0 / 1.2E1)) / l - (S*(h*h)*k*(xi2*2.0 - pow(xi2*(1.0 / 2.0) + 1.0 / 2.0, 2.0)*3.0 + 1.0)*(1.0 / 1.2E1)) / (r0 + S*l*(xi2*(1.0 / 2.0) + 1.0 / 2.0)))*(xi2*3.0 - pow(xi2*(1.0 / 2.0) + 1.0 / 2.0, 2.0)*6.0 + 3.0)) / (l*(r0 + S*l*(xi2*(1.0 / 2.0) + 1.0 / 2.0))) + (C*C)*k*l*1.0 / pow(r0 + S*l*(xi2*(1.0 / 2.0) + 1.0 / 2.0), 2.0)*(pow(xi2*(1.0 / 2.0) + 1.0 / 2.0, 2.0)*3.0 - pow(xi2*(1.0 / 2.0) + 1.0 / 2.0, 3.0)*2.0)*(xi2*(1.0 / 2.0) - pow(xi2*(1.0 / 2.0) + 1.0 / 2.0, 2.0)*2.0 + pow(xi2*(1.0 / 2.0) + 1.0 / 2.0, 3.0) + 1.0 / 2.0)) - weight2*(r0 - S*l*(xi2*(1.0 / 2.0) - 1.0 / 2.0))*(1.0 / (l*l)*xi2*(((h*h)*k*(xi2*3.0 + 1.0)*(1.0 / 1.2E1)) / l - (S*(h*h)*k*nu*(xi2*2.0 + pow(xi2*(1.0 / 2.0) - 1.0 / 2.0, 2.0)*3.0 - 1.0)*(1.0 / 1.2E1)) / (r0 - S*l*(xi2*(1.0 / 2.0) - 1.0 / 2.0)))*6.0 - (S*(((h*h)*k*nu*(xi2*3.0 + 1.0)*(1.0 / 1.2E1)) / l - (S*(h*h)*k*(xi2*2.0 + pow(xi2*(1.0 / 2.0) - 1.0 / 2.0, 2.0)*3.0 - 1.0)*(1.0 / 1.2E1)) / (r0 - S*l*(xi2*(1.0 / 2.0) - 1.0 / 2.0)))*(xi2*3.0 + pow(xi2*(1.0 / 2.0) - 1.0 / 2.0, 2.0)*6.0 - 3.0)) / (l*(r0 - S*l*(xi2*(1.0 / 2.0) - 1.0 / 2.0))) + (C*C)*k*l*1.0 / pow(r0 - S*l*(xi2*(1.0 / 2.0) - 1.0 / 2.0), 2.0)*(pow(xi2*(1.0 / 2.0) - 1.0 / 2.0, 2.0)*3.0 + pow(xi2*(1.0 / 2.0) - 1.0 / 2.0, 3.0)*2.0)*(xi2*(1.0 / 2.0) + pow(xi2*(1.0 / 2.0) - 1.0 / 2.0, 2.0)*2.0 + pow(xi2*(1.0 / 2.0) - 1.0 / 2.0, 3.0) - 1.0 / 2.0)));
	Matrix[42] = -S*(S*prmeter*(weight1*(r0 + S*l*(xi1*(1.0 / 2.0) + 1.0 / 2.0))*((k / l + (S*k*nu*(xi1*(1.0 / 2.0) - 1.0 / 2.0)) / (r0 + S*l*(xi1*(1.0 / 2.0) + 1.0 / 2.0))) / l + (S*(xi1*(1.0 / 2.0) + 1.0 / 2.0)*((k*nu) / l + (S*k*(xi1*(1.0 / 2.0) - 1.0 / 2.0)) / (r0 + S*l*(xi1*(1.0 / 2.0) + 1.0 / 2.0)))) / (r0 + S*l*(xi1*(1.0 / 2.0) + 1.0 / 2.0))) + weight1*(r0 - S*l*(xi1*(1.0 / 2.0) - 1.0 / 2.0))*((k / l - (S*k*nu*(xi1*(1.0 / 2.0) + 1.0 / 2.0)) / (r0 - S*l*(xi1*(1.0 / 2.0) - 1.0 / 2.0))) / l - (S*(xi1*(1.0 / 2.0) - 1.0 / 2.0)*((k*nu) / l - (S*k*(xi1*(1.0 / 2.0) + 1.0 / 2.0)) / (r0 - S*l*(xi1*(1.0 / 2.0) - 1.0 / 2.0)))) / (r0 - S*l*(xi1*(1.0 / 2.0) - 1.0 / 2.0))) + weight2*(r0 + S*l*(xi2*(1.0 / 2.0) + 1.0 / 2.0))*((k / l + (S*k*nu*(xi2*(1.0 / 2.0) - 1.0 / 2.0)) / (r0 + S*l*(xi2*(1.0 / 2.0) + 1.0 / 2.0))) / l + (S*(xi2*(1.0 / 2.0) + 1.0 / 2.0)*((k*nu) / l + (S*k*(xi2*(1.0 / 2.0) - 1.0 / 2.0)) / (r0 + S*l*(xi2*(1.0 / 2.0) + 1.0 / 2.0)))) / (r0 + S*l*(xi2*(1.0 / 2.0) + 1.0 / 2.0))) + weight2*(r0 - S*l*(xi2*(1.0 / 2.0) - 1.0 / 2.0))*((k / l - (S*k*nu*(xi2*(1.0 / 2.0) + 1.0 / 2.0)) / (r0 - S*l*(xi2*(1.0 / 2.0) - 1.0 / 2.0))) / l - (S*(xi2*(1.0 / 2.0) - 1.0 / 2.0)*((k*nu) / l - (S*k*(xi2*(1.0 / 2.0) + 1.0 / 2.0)) / (r0 - S*l*(xi2*(1.0 / 2.0) - 1.0 / 2.0)))) / (r0 - S*l*(xi2*(1.0 / 2.0) - 1.0 / 2.0)))) - C*prmeter*(weight1*(r0 + S*l*(xi1*(1.0 / 2.0) + 1.0 / 2.0))*((C*k*nu*(pow(xi1*(1.0 / 2.0) + 1.0 / 2.0, 2.0)*-3.0 + pow(xi1*(1.0 / 2.0) + 1.0 / 2.0, 3.0)*2.0 + 1.0)) / (l*(r0 + S*l*(xi1*(1.0 / 2.0) + 1.0 / 2.0))) + C*S*k*1.0 / pow(r0 + S*l*(xi1*(1.0 / 2.0) + 1.0 / 2.0), 2.0)*(xi1*(1.0 / 2.0) + 1.0 / 2.0)*(pow(xi1*(1.0 / 2.0) + 1.0 / 2.0, 2.0)*-3.0 + pow(xi1*(1.0 / 2.0) + 1.0 / 2.0, 3.0)*2.0 + 1.0)) - weight1*(r0 - S*l*(xi1*(1.0 / 2.0) - 1.0 / 2.0))*((C*k*nu*(pow(xi1*(1.0 / 2.0) - 1.0 / 2.0, 2.0)*3.0 + pow(xi1*(1.0 / 2.0) - 1.0 / 2.0, 3.0)*2.0 - 1.0)) / (l*(r0 - S*l*(xi1*(1.0 / 2.0) - 1.0 / 2.0))) - C*S*k*1.0 / pow(r0 - S*l*(xi1*(1.0 / 2.0) - 1.0 / 2.0), 2.0)*(xi1*(1.0 / 2.0) - 1.0 / 2.0)*(pow(xi1*(1.0 / 2.0) - 1.0 / 2.0, 2.0)*3.0 + pow(xi1*(1.0 / 2.0) - 1.0 / 2.0, 3.0)*2.0 - 1.0)) + weight2*(r0 + S*l*(xi2*(1.0 / 2.0) + 1.0 / 2.0))*((C*k*nu*(pow(xi2*(1.0 / 2.0) + 1.0 / 2.0, 2.0)*-3.0 + pow(xi2*(1.0 / 2.0) + 1.0 / 2.0, 3.0)*2.0 + 1.0)) / (l*(r0 + S*l*(xi2*(1.0 / 2.0) + 1.0 / 2.0))) + C*S*k*1.0 / pow(r0 + S*l*(xi2*(1.0 / 2.0) + 1.0 / 2.0), 2.0)*(xi2*(1.0 / 2.0) + 1.0 / 2.0)*(pow(xi2*(1.0 / 2.0) + 1.0 / 2.0, 2.0)*-3.0 + pow(xi2*(1.0 / 2.0) + 1.0 / 2.0, 3.0)*2.0 + 1.0)) - weight2*(r0 - S*l*(xi2*(1.0 / 2.0) - 1.0 / 2.0))*((C*k*nu*(pow(xi2*(1.0 / 2.0) - 1.0 / 2.0, 2.0)*3.0 + pow(xi2*(1.0 / 2.0) - 1.0 / 2.0, 3.0)*2.0 - 1.0)) / (l*(r0 - S*l*(xi2*(1.0 / 2.0) - 1.0 / 2.0))) - C*S*k*1.0 / pow(r0 - S*l*(xi2*(1.0 / 2.0) - 1.0 / 2.0), 2.0)*(xi2*(1.0 / 2.0) - 1.0 / 2.0)*(pow(xi2*(1.0 / 2.0) - 1.0 / 2.0, 2.0)*3.0 + pow(xi2*(1.0 / 2.0) - 1.0 / 2.0, 3.0)*2.0 - 1.0)))) - C*(S*prmeter*(C*weight1*((k*nu) / l + (S*k*(xi1*(1.0 / 2.0) - 1.0 / 2.0)) / (r0 + S*l*(xi1*(1.0 / 2.0) + 1.0 / 2.0)))*(pow(xi1*(1.0 / 2.0) + 1.0 / 2.0, 2.0)*3.0 - pow(xi1*(1.0 / 2.0) + 1.0 / 2.0, 3.0)*2.0) + C*weight1*((k*nu) / l - (S*k*(xi1*(1.0 / 2.0) + 1.0 / 2.0)) / (r0 - S*l*(xi1*(1.0 / 2.0) - 1.0 / 2.0)))*(pow(xi1*(1.0 / 2.0) - 1.0 / 2.0, 2.0)*3.0 + pow(xi1*(1.0 / 2.0) - 1.0 / 2.0, 3.0)*2.0) + C*weight2*((k*nu) / l + (S*k*(xi2*(1.0 / 2.0) - 1.0 / 2.0)) / (r0 + S*l*(xi2*(1.0 / 2.0) + 1.0 / 2.0)))*(pow(xi2*(1.0 / 2.0) + 1.0 / 2.0, 2.0)*3.0 - pow(xi2*(1.0 / 2.0) + 1.0 / 2.0, 3.0)*2.0) + C*weight2*((k*nu) / l - (S*k*(xi2*(1.0 / 2.0) + 1.0 / 2.0)) / (r0 - S*l*(xi2*(1.0 / 2.0) - 1.0 / 2.0)))*(pow(xi2*(1.0 / 2.0) - 1.0 / 2.0, 2.0)*3.0 + pow(xi2*(1.0 / 2.0) - 1.0 / 2.0, 3.0)*2.0)) - C*prmeter*(weight1*(r0 + S*l*(xi1*(1.0 / 2.0) + 1.0 / 2.0))*(1.0 / (l*l)*xi1*((h*h)*k*1.0 / (l*l)*xi1*(1.0 / 2.0) - (S*(h*h)*k*nu*(xi1*3.0 - pow(xi1*(1.0 / 2.0) + 1.0 / 2.0, 2.0)*6.0 + 3.0)*(1.0 / 1.2E1)) / (l*(r0 + S*l*(xi1*(1.0 / 2.0) + 1.0 / 2.0))))*-6.0 + (S*((h*h)*k*1.0 / (l*l)*nu*xi1*(1.0 / 2.0) - (S*(h*h)*k*(xi1*3.0 - pow(xi1*(1.0 / 2.0) + 1.0 / 2.0, 2.0)*6.0 + 3.0)*(1.0 / 1.2E1)) / (l*(r0 + S*l*(xi1*(1.0 / 2.0) + 1.0 / 2.0))))*(xi1*3.0 - pow(xi1*(1.0 / 2.0) + 1.0 / 2.0, 2.0)*6.0 + 3.0)) / (l*(r0 + S*l*(xi1*(1.0 / 2.0) + 1.0 / 2.0))) + (C*C)*k*1.0 / pow(r0 + S*l*(xi1*(1.0 / 2.0) + 1.0 / 2.0), 2.0)*(pow(xi1*(1.0 / 2.0) + 1.0 / 2.0, 2.0)*3.0 - pow(xi1*(1.0 / 2.0) + 1.0 / 2.0, 3.0)*2.0)*(pow(xi1*(1.0 / 2.0) + 1.0 / 2.0, 2.0)*-3.0 + pow(xi1*(1.0 / 2.0) + 1.0 / 2.0, 3.0)*2.0 + 1.0)) - weight1*(r0 - S*l*(xi1*(1.0 / 2.0) - 1.0 / 2.0))*(1.0 / (l*l)*xi1*((h*h)*k*1.0 / (l*l)*xi1*(1.0 / 2.0) - (S*(h*h)*k*nu*(xi1*3.0 + pow(xi1*(1.0 / 2.0) - 1.0 / 2.0, 2.0)*6.0 - 3.0)*(1.0 / 1.2E1)) / (l*(r0 - S*l*(xi1*(1.0 / 2.0) - 1.0 / 2.0))))*6.0 - (S*((h*h)*k*1.0 / (l*l)*nu*xi1*(1.0 / 2.0) - (S*(h*h)*k*(xi1*3.0 + pow(xi1*(1.0 / 2.0) - 1.0 / 2.0, 2.0)*6.0 - 3.0)*(1.0 / 1.2E1)) / (l*(r0 - S*l*(xi1*(1.0 / 2.0) - 1.0 / 2.0))))*(xi1*3.0 + pow(xi1*(1.0 / 2.0) - 1.0 / 2.0, 2.0)*6.0 - 3.0)) / (l*(r0 - S*l*(xi1*(1.0 / 2.0) - 1.0 / 2.0))) + (C*C)*k*1.0 / pow(r0 - S*l*(xi1*(1.0 / 2.0) - 1.0 / 2.0), 2.0)*(pow(xi1*(1.0 / 2.0) - 1.0 / 2.0, 2.0)*3.0 + pow(xi1*(1.0 / 2.0) - 1.0 / 2.0, 3.0)*2.0)*(pow(xi1*(1.0 / 2.0) - 1.0 / 2.0, 2.0)*3.0 + pow(xi1*(1.0 / 2.0) - 1.0 / 2.0, 3.0)*2.0 - 1.0)) + weight2*(r0 + S*l*(xi2*(1.0 / 2.0) + 1.0 / 2.0))*(1.0 / (l*l)*xi2*((h*h)*k*1.0 / (l*l)*xi2*(1.0 / 2.0) - (S*(h*h)*k*nu*(xi2*3.0 - pow(xi2*(1.0 / 2.0) + 1.0 / 2.0, 2.0)*6.0 + 3.0)*(1.0 / 1.2E1)) / (l*(r0 + S*l*(xi2*(1.0 / 2.0) + 1.0 / 2.0))))*-6.0 + (S*((h*h)*k*1.0 / (l*l)*nu*xi2*(1.0 / 2.0) - (S*(h*h)*k*(xi2*3.0 - pow(xi2*(1.0 / 2.0) + 1.0 / 2.0, 2.0)*6.0 + 3.0)*(1.0 / 1.2E1)) / (l*(r0 + S*l*(xi2*(1.0 / 2.0) + 1.0 / 2.0))))*(xi2*3.0 - pow(xi2*(1.0 / 2.0) + 1.0 / 2.0, 2.0)*6.0 + 3.0)) / (l*(r0 + S*l*(xi2*(1.0 / 2.0) + 1.0 / 2.0))) + (C*C)*k*1.0 / pow(r0 + S*l*(xi2*(1.0 / 2.0) + 1.0 / 2.0), 2.0)*(pow(xi2*(1.0 / 2.0) + 1.0 / 2.0, 2.0)*3.0 - pow(xi2*(1.0 / 2.0) + 1.0 / 2.0, 3.0)*2.0)*(pow(xi2*(1.0 / 2.0) + 1.0 / 2.0, 2.0)*-3.0 + pow(xi2*(1.0 / 2.0) + 1.0 / 2.0, 3.0)*2.0 + 1.0)) - weight2*(r0 - S*l*(xi2*(1.0 / 2.0) - 1.0 / 2.0))*(1.0 / (l*l)*xi2*((h*h)*k*1.0 / (l*l)*xi2*(1.0 / 2.0) - (S*(h*h)*k*nu*(xi2*3.0 + pow(xi2*(1.0 / 2.0) - 1.0 / 2.0, 2.0)*6.0 - 3.0)*(1.0 / 1.2E1)) / (l*(r0 - S*l*(xi2*(1.0 / 2.0) - 1.0 / 2.0))))*6.0 - (S*((h*h)*k*1.0 / (l*l)*nu*xi2*(1.0 / 2.0) - (S*(h*h)*k*(xi2*3.0 + pow(xi2*(1.0 / 2.0) - 1.0 / 2.0, 2.0)*6.0 - 3.0)*(1.0 / 1.2E1)) / (l*(r0 - S*l*(xi2*(1.0 / 2.0) - 1.0 / 2.0))))*(xi2*3.0 + pow(xi2*(1.0 / 2.0) - 1.0 / 2.0, 2.0)*6.0 - 3.0)) / (l*(r0 - S*l*(xi2*(1.0 / 2.0) - 1.0 / 2.0))) + (C*C)*k*1.0 / pow(r0 - S*l*(xi2*(1.0 / 2.0) - 1.0 / 2.0), 2.0)*(pow(xi2*(1.0 / 2.0) - 1.0 / 2.0, 2.0)*3.0 + pow(xi2*(1.0 / 2.0) - 1.0 / 2.0, 3.0)*2.0)*(pow(xi2*(1.0 / 2.0) - 1.0 / 2.0, 2.0)*3.0 + pow(xi2*(1.0 / 2.0) - 1.0 / 2.0, 3.0)*2.0 - 1.0))));
	Matrix[44] = -S*(S*prmeter*(weight1*(r0 + S*l*(xi1*(1.0 / 2.0) + 1.0 / 2.0))*((C*k*nu*(pow(xi1*(1.0 / 2.0) + 1.0 / 2.0, 2.0)*-3.0 + pow(xi1*(1.0 / 2.0) + 1.0 / 2.0, 3.0)*2.0 + 1.0)) / (l*(r0 + S*l*(xi1*(1.0 / 2.0) + 1.0 / 2.0))) + C*S*k*1.0 / pow(r0 + S*l*(xi1*(1.0 / 2.0) + 1.0 / 2.0), 2.0)*(xi1*(1.0 / 2.0) + 1.0 / 2.0)*(pow(xi1*(1.0 / 2.0) + 1.0 / 2.0, 2.0)*-3.0 + pow(xi1*(1.0 / 2.0) + 1.0 / 2.0, 3.0)*2.0 + 1.0)) - weight1*(r0 - S*l*(xi1*(1.0 / 2.0) - 1.0 / 2.0))*((C*k*nu*(pow(xi1*(1.0 / 2.0) - 1.0 / 2.0, 2.0)*3.0 + pow(xi1*(1.0 / 2.0) - 1.0 / 2.0, 3.0)*2.0 - 1.0)) / (l*(r0 - S*l*(xi1*(1.0 / 2.0) - 1.0 / 2.0))) - C*S*k*1.0 / pow(r0 - S*l*(xi1*(1.0 / 2.0) - 1.0 / 2.0), 2.0)*(xi1*(1.0 / 2.0) - 1.0 / 2.0)*(pow(xi1*(1.0 / 2.0) - 1.0 / 2.0, 2.0)*3.0 + pow(xi1*(1.0 / 2.0) - 1.0 / 2.0, 3.0)*2.0 - 1.0)) + weight2*(r0 + S*l*(xi2*(1.0 / 2.0) + 1.0 / 2.0))*((C*k*nu*(pow(xi2*(1.0 / 2.0) + 1.0 / 2.0, 2.0)*-3.0 + pow(xi2*(1.0 / 2.0) + 1.0 / 2.0, 3.0)*2.0 + 1.0)) / (l*(r0 + S*l*(xi2*(1.0 / 2.0) + 1.0 / 2.0))) + C*S*k*1.0 / pow(r0 + S*l*(xi2*(1.0 / 2.0) + 1.0 / 2.0), 2.0)*(xi2*(1.0 / 2.0) + 1.0 / 2.0)*(pow(xi2*(1.0 / 2.0) + 1.0 / 2.0, 2.0)*-3.0 + pow(xi2*(1.0 / 2.0) + 1.0 / 2.0, 3.0)*2.0 + 1.0)) - weight2*(r0 - S*l*(xi2*(1.0 / 2.0) - 1.0 / 2.0))*((C*k*nu*(pow(xi2*(1.0 / 2.0) - 1.0 / 2.0, 2.0)*3.0 + pow(xi2*(1.0 / 2.0) - 1.0 / 2.0, 3.0)*2.0 - 1.0)) / (l*(r0 - S*l*(xi2*(1.0 / 2.0) - 1.0 / 2.0))) - C*S*k*1.0 / pow(r0 - S*l*(xi2*(1.0 / 2.0) - 1.0 / 2.0), 2.0)*(xi2*(1.0 / 2.0) - 1.0 / 2.0)*(pow(xi2*(1.0 / 2.0) - 1.0 / 2.0, 2.0)*3.0 + pow(xi2*(1.0 / 2.0) - 1.0 / 2.0, 3.0)*2.0 - 1.0))) + C*prmeter*(weight1*(r0 + S*l*(xi1*(1.0 / 2.0) + 1.0 / 2.0))*((k / l + (S*k*nu*(xi1*(1.0 / 2.0) - 1.0 / 2.0)) / (r0 + S*l*(xi1*(1.0 / 2.0) + 1.0 / 2.0))) / l + (S*(xi1*(1.0 / 2.0) + 1.0 / 2.0)*((k*nu) / l + (S*k*(xi1*(1.0 / 2.0) - 1.0 / 2.0)) / (r0 + S*l*(xi1*(1.0 / 2.0) + 1.0 / 2.0)))) / (r0 + S*l*(xi1*(1.0 / 2.0) + 1.0 / 2.0))) + weight1*(r0 - S*l*(xi1*(1.0 / 2.0) - 1.0 / 2.0))*((k / l - (S*k*nu*(xi1*(1.0 / 2.0) + 1.0 / 2.0)) / (r0 - S*l*(xi1*(1.0 / 2.0) - 1.0 / 2.0))) / l - (S*(xi1*(1.0 / 2.0) - 1.0 / 2.0)*((k*nu) / l - (S*k*(xi1*(1.0 / 2.0) + 1.0 / 2.0)) / (r0 - S*l*(xi1*(1.0 / 2.0) - 1.0 / 2.0)))) / (r0 - S*l*(xi1*(1.0 / 2.0) - 1.0 / 2.0))) + weight2*(r0 + S*l*(xi2*(1.0 / 2.0) + 1.0 / 2.0))*((k / l + (S*k*nu*(xi2*(1.0 / 2.0) - 1.0 / 2.0)) / (r0 + S*l*(xi2*(1.0 / 2.0) + 1.0 / 2.0))) / l + (S*(xi2*(1.0 / 2.0) + 1.0 / 2.0)*((k*nu) / l + (S*k*(xi2*(1.0 / 2.0) - 1.0 / 2.0)) / (r0 + S*l*(xi2*(1.0 / 2.0) + 1.0 / 2.0)))) / (r0 + S*l*(xi2*(1.0 / 2.0) + 1.0 / 2.0))) + weight2*(r0 - S*l*(xi2*(1.0 / 2.0) - 1.0 / 2.0))*((k / l - (S*k*nu*(xi2*(1.0 / 2.0) + 1.0 / 2.0)) / (r0 - S*l*(xi2*(1.0 / 2.0) - 1.0 / 2.0))) / l - (S*(xi2*(1.0 / 2.0) - 1.0 / 2.0)*((k*nu) / l - (S*k*(xi2*(1.0 / 2.0) + 1.0 / 2.0)) / (r0 - S*l*(xi2*(1.0 / 2.0) - 1.0 / 2.0)))) / (r0 - S*l*(xi2*(1.0 / 2.0) - 1.0 / 2.0))))) - C*(C*prmeter*(C*weight1*((k*nu) / l + (S*k*(xi1*(1.0 / 2.0) - 1.0 / 2.0)) / (r0 + S*l*(xi1*(1.0 / 2.0) + 1.0 / 2.0)))*(pow(xi1*(1.0 / 2.0) + 1.0 / 2.0, 2.0)*3.0 - pow(xi1*(1.0 / 2.0) + 1.0 / 2.0, 3.0)*2.0) + C*weight1*((k*nu) / l - (S*k*(xi1*(1.0 / 2.0) + 1.0 / 2.0)) / (r0 - S*l*(xi1*(1.0 / 2.0) - 1.0 / 2.0)))*(pow(xi1*(1.0 / 2.0) - 1.0 / 2.0, 2.0)*3.0 + pow(xi1*(1.0 / 2.0) - 1.0 / 2.0, 3.0)*2.0) + C*weight2*((k*nu) / l + (S*k*(xi2*(1.0 / 2.0) - 1.0 / 2.0)) / (r0 + S*l*(xi2*(1.0 / 2.0) + 1.0 / 2.0)))*(pow(xi2*(1.0 / 2.0) + 1.0 / 2.0, 2.0)*3.0 - pow(xi2*(1.0 / 2.0) + 1.0 / 2.0, 3.0)*2.0) + C*weight2*((k*nu) / l - (S*k*(xi2*(1.0 / 2.0) + 1.0 / 2.0)) / (r0 - S*l*(xi2*(1.0 / 2.0) - 1.0 / 2.0)))*(pow(xi2*(1.0 / 2.0) - 1.0 / 2.0, 2.0)*3.0 + pow(xi2*(1.0 / 2.0) - 1.0 / 2.0, 3.0)*2.0)) + S*prmeter*(weight1*(r0 + S*l*(xi1*(1.0 / 2.0) + 1.0 / 2.0))*(1.0 / (l*l)*xi1*((h*h)*k*1.0 / (l*l)*xi1*(1.0 / 2.0) - (S*(h*h)*k*nu*(xi1*3.0 - pow(xi1*(1.0 / 2.0) + 1.0 / 2.0, 2.0)*6.0 + 3.0)*(1.0 / 1.2E1)) / (l*(r0 + S*l*(xi1*(1.0 / 2.0) + 1.0 / 2.0))))*-6.0 + (S*((h*h)*k*1.0 / (l*l)*nu*xi1*(1.0 / 2.0) - (S*(h*h)*k*(xi1*3.0 - pow(xi1*(1.0 / 2.0) + 1.0 / 2.0, 2.0)*6.0 + 3.0)*(1.0 / 1.2E1)) / (l*(r0 + S*l*(xi1*(1.0 / 2.0) + 1.0 / 2.0))))*(xi1*3.0 - pow(xi1*(1.0 / 2.0) + 1.0 / 2.0, 2.0)*6.0 + 3.0)) / (l*(r0 + S*l*(xi1*(1.0 / 2.0) + 1.0 / 2.0))) + (C*C)*k*1.0 / pow(r0 + S*l*(xi1*(1.0 / 2.0) + 1.0 / 2.0), 2.0)*(pow(xi1*(1.0 / 2.0) + 1.0 / 2.0, 2.0)*3.0 - pow(xi1*(1.0 / 2.0) + 1.0 / 2.0, 3.0)*2.0)*(pow(xi1*(1.0 / 2.0) + 1.0 / 2.0, 2.0)*-3.0 + pow(xi1*(1.0 / 2.0) + 1.0 / 2.0, 3.0)*2.0 + 1.0)) - weight1*(r0 - S*l*(xi1*(1.0 / 2.0) - 1.0 / 2.0))*(1.0 / (l*l)*xi1*((h*h)*k*1.0 / (l*l)*xi1*(1.0 / 2.0) - (S*(h*h)*k*nu*(xi1*3.0 + pow(xi1*(1.0 / 2.0) - 1.0 / 2.0, 2.0)*6.0 - 3.0)*(1.0 / 1.2E1)) / (l*(r0 - S*l*(xi1*(1.0 / 2.0) - 1.0 / 2.0))))*6.0 - (S*((h*h)*k*1.0 / (l*l)*nu*xi1*(1.0 / 2.0) - (S*(h*h)*k*(xi1*3.0 + pow(xi1*(1.0 / 2.0) - 1.0 / 2.0, 2.0)*6.0 - 3.0)*(1.0 / 1.2E1)) / (l*(r0 - S*l*(xi1*(1.0 / 2.0) - 1.0 / 2.0))))*(xi1*3.0 + pow(xi1*(1.0 / 2.0) - 1.0 / 2.0, 2.0)*6.0 - 3.0)) / (l*(r0 - S*l*(xi1*(1.0 / 2.0) - 1.0 / 2.0))) + (C*C)*k*1.0 / pow(r0 - S*l*(xi1*(1.0 / 2.0) - 1.0 / 2.0), 2.0)*(pow(xi1*(1.0 / 2.0) - 1.0 / 2.0, 2.0)*3.0 + pow(xi1*(1.0 / 2.0) - 1.0 / 2.0, 3.0)*2.0)*(pow(xi1*(1.0 / 2.0) - 1.0 / 2.0, 2.0)*3.0 + pow(xi1*(1.0 / 2.0) - 1.0 / 2.0, 3.0)*2.0 - 1.0)) + weight2*(r0 + S*l*(xi2*(1.0 / 2.0) + 1.0 / 2.0))*(1.0 / (l*l)*xi2*((h*h)*k*1.0 / (l*l)*xi2*(1.0 / 2.0) - (S*(h*h)*k*nu*(xi2*3.0 - pow(xi2*(1.0 / 2.0) + 1.0 / 2.0, 2.0)*6.0 + 3.0)*(1.0 / 1.2E1)) / (l*(r0 + S*l*(xi2*(1.0 / 2.0) + 1.0 / 2.0))))*-6.0 + (S*((h*h)*k*1.0 / (l*l)*nu*xi2*(1.0 / 2.0) - (S*(h*h)*k*(xi2*3.0 - pow(xi2*(1.0 / 2.0) + 1.0 / 2.0, 2.0)*6.0 + 3.0)*(1.0 / 1.2E1)) / (l*(r0 + S*l*(xi2*(1.0 / 2.0) + 1.0 / 2.0))))*(xi2*3.0 - pow(xi2*(1.0 / 2.0) + 1.0 / 2.0, 2.0)*6.0 + 3.0)) / (l*(r0 + S*l*(xi2*(1.0 / 2.0) + 1.0 / 2.0))) + (C*C)*k*1.0 / pow(r0 + S*l*(xi2*(1.0 / 2.0) + 1.0 / 2.0), 2.0)*(pow(xi2*(1.0 / 2.0) + 1.0 / 2.0, 2.0)*3.0 - pow(xi2*(1.0 / 2.0) + 1.0 / 2.0, 3.0)*2.0)*(pow(xi2*(1.0 / 2.0) + 1.0 / 2.0, 2.0)*-3.0 + pow(xi2*(1.0 / 2.0) + 1.0 / 2.0, 3.0)*2.0 + 1.0)) - weight2*(r0 - S*l*(xi2*(1.0 / 2.0) - 1.0 / 2.0))*(1.0 / (l*l)*xi2*((h*h)*k*1.0 / (l*l)*xi2*(1.0 / 2.0) - (S*(h*h)*k*nu*(xi2*3.0 + pow(xi2*(1.0 / 2.0) - 1.0 / 2.0, 2.0)*6.0 - 3.0)*(1.0 / 1.2E1)) / (l*(r0 - S*l*(xi2*(1.0 / 2.0) - 1.0 / 2.0))))*6.0 - (S*((h*h)*k*1.0 / (l*l)*nu*xi2*(1.0 / 2.0) - (S*(h*h)*k*(xi2*3.0 + pow(xi2*(1.0 / 2.0) - 1.0 / 2.0, 2.0)*6.0 - 3.0)*(1.0 / 1.2E1)) / (l*(r0 - S*l*(xi2*(1.0 / 2.0) - 1.0 / 2.0))))*(xi2*3.0 + pow(xi2*(1.0 / 2.0) - 1.0 / 2.0, 2.0)*6.0 - 3.0)) / (l*(r0 - S*l*(xi2*(1.0 / 2.0) - 1.0 / 2.0))) + (C*C)*k*1.0 / pow(r0 - S*l*(xi2*(1.0 / 2.0) - 1.0 / 2.0), 2.0)*(pow(xi2*(1.0 / 2.0) - 1.0 / 2.0, 2.0)*3.0 + pow(xi2*(1.0 / 2.0) - 1.0 / 2.0, 3.0)*2.0)*(pow(xi2*(1.0 / 2.0) - 1.0 / 2.0, 2.0)*3.0 + pow(xi2*(1.0 / 2.0) - 1.0 / 2.0, 3.0)*2.0 - 1.0))));
	
	Matrix[55] = prmeter*(weight1*(r0 + S*l*(xi1*(1.0 / 2.0) + 1.0 / 2.0))*(((xi1*3.0 + 1.0)*(((h*h)*k*(xi1*3.0 + 1.0)*(1.0 / 1.2E1)) / l - (S*(h*h)*k*nu*(xi1 - pow(xi1*(1.0 / 2.0) + 1.0 / 2.0, 2.0)*3.0 + 1.0)*(1.0 / 1.2E1)) / (r0 + S*l*(xi1*(1.0 / 2.0) + 1.0 / 2.0)))) / l - (S*(((h*h)*k*nu*(xi1*3.0 + 1.0)*(1.0 / 1.2E1)) / l - (S*(h*h)*k*(xi1 - pow(xi1*(1.0 / 2.0) + 1.0 / 2.0, 2.0)*3.0 + 1.0)*(1.0 / 1.2E1)) / (r0 + S*l*(xi1*(1.0 / 2.0) + 1.0 / 2.0)))*(xi1 - pow(xi1*(1.0 / 2.0) + 1.0 / 2.0, 2.0)*3.0 + 1.0)) / (r0 + S*l*(xi1*(1.0 / 2.0) + 1.0 / 2.0)) + (C*C)*k*(l*l)*1.0 / pow(r0 + S*l*(xi1*(1.0 / 2.0) + 1.0 / 2.0), 2.0)*pow(pow(xi1*(1.0 / 2.0) + 1.0 / 2.0, 2.0) - pow(xi1*(1.0 / 2.0) + 1.0 / 2.0, 3.0), 2.0)) + weight2*(r0 + S*l*(xi2*(1.0 / 2.0) + 1.0 / 2.0))*(((xi2*3.0 + 1.0)*(((h*h)*k*(xi2*3.0 + 1.0)*(1.0 / 1.2E1)) / l - (S*(h*h)*k*nu*(xi2 - pow(xi2*(1.0 / 2.0) + 1.0 / 2.0, 2.0)*3.0 + 1.0)*(1.0 / 1.2E1)) / (r0 + S*l*(xi2*(1.0 / 2.0) + 1.0 / 2.0)))) / l - (S*(((h*h)*k*nu*(xi2*3.0 + 1.0)*(1.0 / 1.2E1)) / l - (S*(h*h)*k*(xi2 - pow(xi2*(1.0 / 2.0) + 1.0 / 2.0, 2.0)*3.0 + 1.0)*(1.0 / 1.2E1)) / (r0 + S*l*(xi2*(1.0 / 2.0) + 1.0 / 2.0)))*(xi2 - pow(xi2*(1.0 / 2.0) + 1.0 / 2.0, 2.0)*3.0 + 1.0)) / (r0 + S*l*(xi2*(1.0 / 2.0) + 1.0 / 2.0)) + (C*C)*k*(l*l)*1.0 / pow(r0 + S*l*(xi2*(1.0 / 2.0) + 1.0 / 2.0), 2.0)*pow(pow(xi2*(1.0 / 2.0) + 1.0 / 2.0, 2.0) - pow(xi2*(1.0 / 2.0) + 1.0 / 2.0, 3.0), 2.0)) + weight1*(r0 - S*l*(xi1*(1.0 / 2.0) - 1.0 / 2.0))*(((xi1*3.0 - 1.0)*(((h*h)*k*(xi1*3.0 - 1.0)*(1.0 / 1.2E1)) / l - (S*(h*h)*k*nu*(xi1 + pow(xi1*(1.0 / 2.0) - 1.0 / 2.0, 2.0)*3.0 - 1.0)*(1.0 / 1.2E1)) / (r0 - S*l*(xi1*(1.0 / 2.0) - 1.0 / 2.0)))) / l - (S*(((h*h)*k*nu*(xi1*3.0 - 1.0)*(1.0 / 1.2E1)) / l - (S*(h*h)*k*(xi1 + pow(xi1*(1.0 / 2.0) - 1.0 / 2.0, 2.0)*3.0 - 1.0)*(1.0 / 1.2E1)) / (r0 - S*l*(xi1*(1.0 / 2.0) - 1.0 / 2.0)))*(xi1 + pow(xi1*(1.0 / 2.0) - 1.0 / 2.0, 2.0)*3.0 - 1.0)) / (r0 - S*l*(xi1*(1.0 / 2.0) - 1.0 / 2.0)) + (C*C)*k*(l*l)*1.0 / pow(r0 - S*l*(xi1*(1.0 / 2.0) - 1.0 / 2.0), 2.0)*pow(pow(xi1*(1.0 / 2.0) - 1.0 / 2.0, 2.0) + pow(xi1*(1.0 / 2.0) - 1.0 / 2.0, 3.0), 2.0)) + weight2*(r0 - S*l*(xi2*(1.0 / 2.0) - 1.0 / 2.0))*(((xi2*3.0 - 1.0)*(((h*h)*k*(xi2*3.0 - 1.0)*(1.0 / 1.2E1)) / l - (S*(h*h)*k*nu*(xi2 + pow(xi2*(1.0 / 2.0) - 1.0 / 2.0, 2.0)*3.0 - 1.0)*(1.0 / 1.2E1)) / (r0 - S*l*(xi2*(1.0 / 2.0) - 1.0 / 2.0)))) / l - (S*(((h*h)*k*nu*(xi2*3.0 - 1.0)*(1.0 / 1.2E1)) / l - (S*(h*h)*k*(xi2 + pow(xi2*(1.0 / 2.0) - 1.0 / 2.0, 2.0)*3.0 - 1.0)*(1.0 / 1.2E1)) / (r0 - S*l*(xi2*(1.0 / 2.0) - 1.0 / 2.0)))*(xi2 + pow(xi2*(1.0 / 2.0) - 1.0 / 2.0, 2.0)*3.0 - 1.0)) / (r0 - S*l*(xi2*(1.0 / 2.0) - 1.0 / 2.0)) + (C*C)*k*(l*l)*1.0 / pow(r0 - S*l*(xi2*(1.0 / 2.0) - 1.0 / 2.0), 2.0)*pow(pow(xi2*(1.0 / 2.0) - 1.0 / 2.0, 2.0) + pow(xi2*(1.0 / 2.0) - 1.0 / 2.0, 3.0), 2.0)));
	Matrix[57] = -C*prmeter*(weight1*(r0 - S*l*(xi1*(1.0 / 2.0) - 1.0 / 2.0))*((((h*h)*k*1.0 / (l*l)*xi1*(1.0 / 2.0) - (S*(h*h)*k*nu*(xi1*3.0 + pow(xi1*(1.0 / 2.0) - 1.0 / 2.0, 2.0)*6.0 - 3.0)*(1.0 / 1.2E1)) / (l*(r0 - S*l*(xi1*(1.0 / 2.0) - 1.0 / 2.0))))*(xi1*3.0 - 1.0)) / l - (S*((h*h)*k*1.0 / (l*l)*nu*xi1*(1.0 / 2.0) - (S*(h*h)*k*(xi1*3.0 + pow(xi1*(1.0 / 2.0) - 1.0 / 2.0, 2.0)*6.0 - 3.0)*(1.0 / 1.2E1)) / (l*(r0 - S*l*(xi1*(1.0 / 2.0) - 1.0 / 2.0))))*(xi1 + pow(xi1*(1.0 / 2.0) - 1.0 / 2.0, 2.0)*3.0 - 1.0)) / (r0 - S*l*(xi1*(1.0 / 2.0) - 1.0 / 2.0)) + (C*C)*k*l*1.0 / pow(r0 - S*l*(xi1*(1.0 / 2.0) - 1.0 / 2.0), 2.0)*(pow(xi1*(1.0 / 2.0) - 1.0 / 2.0, 2.0)*3.0 + pow(xi1*(1.0 / 2.0) - 1.0 / 2.0, 3.0)*2.0)*(pow(xi1*(1.0 / 2.0) - 1.0 / 2.0, 2.0) + pow(xi1*(1.0 / 2.0) - 1.0 / 2.0, 3.0))) + weight2*(r0 - S*l*(xi2*(1.0 / 2.0) - 1.0 / 2.0))*((((h*h)*k*1.0 / (l*l)*xi2*(1.0 / 2.0) - (S*(h*h)*k*nu*(xi2*3.0 + pow(xi2*(1.0 / 2.0) - 1.0 / 2.0, 2.0)*6.0 - 3.0)*(1.0 / 1.2E1)) / (l*(r0 - S*l*(xi2*(1.0 / 2.0) - 1.0 / 2.0))))*(xi2*3.0 - 1.0)) / l - (S*((h*h)*k*1.0 / (l*l)*nu*xi2*(1.0 / 2.0) - (S*(h*h)*k*(xi2*3.0 + pow(xi2*(1.0 / 2.0) - 1.0 / 2.0, 2.0)*6.0 - 3.0)*(1.0 / 1.2E1)) / (l*(r0 - S*l*(xi2*(1.0 / 2.0) - 1.0 / 2.0))))*(xi2 + pow(xi2*(1.0 / 2.0) - 1.0 / 2.0, 2.0)*3.0 - 1.0)) / (r0 - S*l*(xi2*(1.0 / 2.0) - 1.0 / 2.0)) + (C*C)*k*l*1.0 / pow(r0 - S*l*(xi2*(1.0 / 2.0) - 1.0 / 2.0), 2.0)*(pow(xi2*(1.0 / 2.0) - 1.0 / 2.0, 2.0)*3.0 + pow(xi2*(1.0 / 2.0) - 1.0 / 2.0, 3.0)*2.0)*(pow(xi2*(1.0 / 2.0) - 1.0 / 2.0, 2.0) + pow(xi2*(1.0 / 2.0) - 1.0 / 2.0, 3.0))) + weight1*(r0 + S*l*(xi1*(1.0 / 2.0) + 1.0 / 2.0))*((((h*h)*k*1.0 / (l*l)*xi1*(1.0 / 2.0) - (S*(h*h)*k*nu*(xi1*3.0 - pow(xi1*(1.0 / 2.0) + 1.0 / 2.0, 2.0)*6.0 + 3.0)*(1.0 / 1.2E1)) / (l*(r0 + S*l*(xi1*(1.0 / 2.0) + 1.0 / 2.0))))*(xi1*3.0 + 1.0)) / l - (S*((h*h)*k*1.0 / (l*l)*nu*xi1*(1.0 / 2.0) - (S*(h*h)*k*(xi1*3.0 - pow(xi1*(1.0 / 2.0) + 1.0 / 2.0, 2.0)*6.0 + 3.0)*(1.0 / 1.2E1)) / (l*(r0 + S*l*(xi1*(1.0 / 2.0) + 1.0 / 2.0))))*(xi1 - pow(xi1*(1.0 / 2.0) + 1.0 / 2.0, 2.0)*3.0 + 1.0)) / (r0 + S*l*(xi1*(1.0 / 2.0) + 1.0 / 2.0)) + (C*C)*k*l*1.0 / pow(r0 + S*l*(xi1*(1.0 / 2.0) + 1.0 / 2.0), 2.0)*(pow(xi1*(1.0 / 2.0) + 1.0 / 2.0, 2.0)*3.0 - pow(xi1*(1.0 / 2.0) + 1.0 / 2.0, 3.0)*2.0)*(pow(xi1*(1.0 / 2.0) + 1.0 / 2.0, 2.0) - pow(xi1*(1.0 / 2.0) + 1.0 / 2.0, 3.0))) + weight2*(r0 + S*l*(xi2*(1.0 / 2.0) + 1.0 / 2.0))*((((h*h)*k*1.0 / (l*l)*xi2*(1.0 / 2.0) - (S*(h*h)*k*nu*(xi2*3.0 - pow(xi2*(1.0 / 2.0) + 1.0 / 2.0, 2.0)*6.0 + 3.0)*(1.0 / 1.2E1)) / (l*(r0 + S*l*(xi2*(1.0 / 2.0) + 1.0 / 2.0))))*(xi2*3.0 + 1.0)) / l - (S*((h*h)*k*1.0 / (l*l)*nu*xi2*(1.0 / 2.0) - (S*(h*h)*k*(xi2*3.0 - pow(xi2*(1.0 / 2.0) + 1.0 / 2.0, 2.0)*6.0 + 3.0)*(1.0 / 1.2E1)) / (l*(r0 + S*l*(xi2*(1.0 / 2.0) + 1.0 / 2.0))))*(xi2 - pow(xi2*(1.0 / 2.0) + 1.0 / 2.0, 2.0)*3.0 + 1.0)) / (r0 + S*l*(xi2*(1.0 / 2.0) + 1.0 / 2.0)) + (C*C)*k*l*1.0 / pow(r0 + S*l*(xi2*(1.0 / 2.0) + 1.0 / 2.0), 2.0)*(pow(xi2*(1.0 / 2.0) + 1.0 / 2.0, 2.0)*3.0 - pow(xi2*(1.0 / 2.0) + 1.0 / 2.0, 3.0)*2.0)*(pow(xi2*(1.0 / 2.0) + 1.0 / 2.0, 2.0) - pow(xi2*(1.0 / 2.0) + 1.0 / 2.0, 3.0)))) - S*prmeter*(C*l*weight1*((k*nu) / l - (S*k*(xi1*(1.0 / 2.0) - 1.0 / 2.0)) / (r0 - S*l*(xi1*(1.0 / 2.0) - 1.0 / 2.0)))*(pow(xi1*(1.0 / 2.0) - 1.0 / 2.0, 2.0) + pow(xi1*(1.0 / 2.0) - 1.0 / 2.0, 3.0)) + C*l*weight2*((k*nu) / l - (S*k*(xi2*(1.0 / 2.0) - 1.0 / 2.0)) / (r0 - S*l*(xi2*(1.0 / 2.0) - 1.0 / 2.0)))*(pow(xi2*(1.0 / 2.0) - 1.0 / 2.0, 2.0) + pow(xi2*(1.0 / 2.0) - 1.0 / 2.0, 3.0)) + C*l*weight1*((k*nu) / l + (S*k*(xi1*(1.0 / 2.0) + 1.0 / 2.0)) / (r0 + S*l*(xi1*(1.0 / 2.0) + 1.0 / 2.0)))*(pow(xi1*(1.0 / 2.0) + 1.0 / 2.0, 2.0) - pow(xi1*(1.0 / 2.0) + 1.0 / 2.0, 3.0)) + C*l*weight2*((k*nu) / l + (S*k*(xi2*(1.0 / 2.0) + 1.0 / 2.0)) / (r0 + S*l*(xi2*(1.0 / 2.0) + 1.0 / 2.0)))*(pow(xi2*(1.0 / 2.0) + 1.0 / 2.0, 2.0) - pow(xi2*(1.0 / 2.0) + 1.0 / 2.0, 3.0)));
	Matrix[59] = -C*prmeter*(C*l*weight1*((k*nu) / l - (S*k*(xi1*(1.0 / 2.0) - 1.0 / 2.0)) / (r0 - S*l*(xi1*(1.0 / 2.0) - 1.0 / 2.0)))*(pow(xi1*(1.0 / 2.0) - 1.0 / 2.0, 2.0) + pow(xi1*(1.0 / 2.0) - 1.0 / 2.0, 3.0)) + C*l*weight2*((k*nu) / l - (S*k*(xi2*(1.0 / 2.0) - 1.0 / 2.0)) / (r0 - S*l*(xi2*(1.0 / 2.0) - 1.0 / 2.0)))*(pow(xi2*(1.0 / 2.0) - 1.0 / 2.0, 2.0) + pow(xi2*(1.0 / 2.0) - 1.0 / 2.0, 3.0)) + C*l*weight1*((k*nu) / l + (S*k*(xi1*(1.0 / 2.0) + 1.0 / 2.0)) / (r0 + S*l*(xi1*(1.0 / 2.0) + 1.0 / 2.0)))*(pow(xi1*(1.0 / 2.0) + 1.0 / 2.0, 2.0) - pow(xi1*(1.0 / 2.0) + 1.0 / 2.0, 3.0)) + C*l*weight2*((k*nu) / l + (S*k*(xi2*(1.0 / 2.0) + 1.0 / 2.0)) / (r0 + S*l*(xi2*(1.0 / 2.0) + 1.0 / 2.0)))*(pow(xi2*(1.0 / 2.0) + 1.0 / 2.0, 2.0) - pow(xi2*(1.0 / 2.0) + 1.0 / 2.0, 3.0))) + S*prmeter*(weight1*(r0 - S*l*(xi1*(1.0 / 2.0) - 1.0 / 2.0))*((((h*h)*k*1.0 / (l*l)*xi1*(1.0 / 2.0) - (S*(h*h)*k*nu*(xi1*3.0 + pow(xi1*(1.0 / 2.0) - 1.0 / 2.0, 2.0)*6.0 - 3.0)*(1.0 / 1.2E1)) / (l*(r0 - S*l*(xi1*(1.0 / 2.0) - 1.0 / 2.0))))*(xi1*3.0 - 1.0)) / l - (S*((h*h)*k*1.0 / (l*l)*nu*xi1*(1.0 / 2.0) - (S*(h*h)*k*(xi1*3.0 + pow(xi1*(1.0 / 2.0) - 1.0 / 2.0, 2.0)*6.0 - 3.0)*(1.0 / 1.2E1)) / (l*(r0 - S*l*(xi1*(1.0 / 2.0) - 1.0 / 2.0))))*(xi1 + pow(xi1*(1.0 / 2.0) - 1.0 / 2.0, 2.0)*3.0 - 1.0)) / (r0 - S*l*(xi1*(1.0 / 2.0) - 1.0 / 2.0)) + (C*C)*k*l*1.0 / pow(r0 - S*l*(xi1*(1.0 / 2.0) - 1.0 / 2.0), 2.0)*(pow(xi1*(1.0 / 2.0) - 1.0 / 2.0, 2.0)*3.0 + pow(xi1*(1.0 / 2.0) - 1.0 / 2.0, 3.0)*2.0)*(pow(xi1*(1.0 / 2.0) - 1.0 / 2.0, 2.0) + pow(xi1*(1.0 / 2.0) - 1.0 / 2.0, 3.0))) + weight2*(r0 - S*l*(xi2*(1.0 / 2.0) - 1.0 / 2.0))*((((h*h)*k*1.0 / (l*l)*xi2*(1.0 / 2.0) - (S*(h*h)*k*nu*(xi2*3.0 + pow(xi2*(1.0 / 2.0) - 1.0 / 2.0, 2.0)*6.0 - 3.0)*(1.0 / 1.2E1)) / (l*(r0 - S*l*(xi2*(1.0 / 2.0) - 1.0 / 2.0))))*(xi2*3.0 - 1.0)) / l - (S*((h*h)*k*1.0 / (l*l)*nu*xi2*(1.0 / 2.0) - (S*(h*h)*k*(xi2*3.0 + pow(xi2*(1.0 / 2.0) - 1.0 / 2.0, 2.0)*6.0 - 3.0)*(1.0 / 1.2E1)) / (l*(r0 - S*l*(xi2*(1.0 / 2.0) - 1.0 / 2.0))))*(xi2 + pow(xi2*(1.0 / 2.0) - 1.0 / 2.0, 2.0)*3.0 - 1.0)) / (r0 - S*l*(xi2*(1.0 / 2.0) - 1.0 / 2.0)) + (C*C)*k*l*1.0 / pow(r0 - S*l*(xi2*(1.0 / 2.0) - 1.0 / 2.0), 2.0)*(pow(xi2*(1.0 / 2.0) - 1.0 / 2.0, 2.0)*3.0 + pow(xi2*(1.0 / 2.0) - 1.0 / 2.0, 3.0)*2.0)*(pow(xi2*(1.0 / 2.0) - 1.0 / 2.0, 2.0) + pow(xi2*(1.0 / 2.0) - 1.0 / 2.0, 3.0))) + weight1*(r0 + S*l*(xi1*(1.0 / 2.0) + 1.0 / 2.0))*((((h*h)*k*1.0 / (l*l)*xi1*(1.0 / 2.0) - (S*(h*h)*k*nu*(xi1*3.0 - pow(xi1*(1.0 / 2.0) + 1.0 / 2.0, 2.0)*6.0 + 3.0)*(1.0 / 1.2E1)) / (l*(r0 + S*l*(xi1*(1.0 / 2.0) + 1.0 / 2.0))))*(xi1*3.0 + 1.0)) / l - (S*((h*h)*k*1.0 / (l*l)*nu*xi1*(1.0 / 2.0) - (S*(h*h)*k*(xi1*3.0 - pow(xi1*(1.0 / 2.0) + 1.0 / 2.0, 2.0)*6.0 + 3.0)*(1.0 / 1.2E1)) / (l*(r0 + S*l*(xi1*(1.0 / 2.0) + 1.0 / 2.0))))*(xi1 - pow(xi1*(1.0 / 2.0) + 1.0 / 2.0, 2.0)*3.0 + 1.0)) / (r0 + S*l*(xi1*(1.0 / 2.0) + 1.0 / 2.0)) + (C*C)*k*l*1.0 / pow(r0 + S*l*(xi1*(1.0 / 2.0) + 1.0 / 2.0), 2.0)*(pow(xi1*(1.0 / 2.0) + 1.0 / 2.0, 2.0)*3.0 - pow(xi1*(1.0 / 2.0) + 1.0 / 2.0, 3.0)*2.0)*(pow(xi1*(1.0 / 2.0) + 1.0 / 2.0, 2.0) - pow(xi1*(1.0 / 2.0) + 1.0 / 2.0, 3.0))) + weight2*(r0 + S*l*(xi2*(1.0 / 2.0) + 1.0 / 2.0))*((((h*h)*k*1.0 / (l*l)*xi2*(1.0 / 2.0) - (S*(h*h)*k*nu*(xi2*3.0 - pow(xi2*(1.0 / 2.0) + 1.0 / 2.0, 2.0)*6.0 + 3.0)*(1.0 / 1.2E1)) / (l*(r0 + S*l*(xi2*(1.0 / 2.0) + 1.0 / 2.0))))*(xi2*3.0 + 1.0)) / l - (S*((h*h)*k*1.0 / (l*l)*nu*xi2*(1.0 / 2.0) - (S*(h*h)*k*(xi2*3.0 - pow(xi2*(1.0 / 2.0) + 1.0 / 2.0, 2.0)*6.0 + 3.0)*(1.0 / 1.2E1)) / (l*(r0 + S*l*(xi2*(1.0 / 2.0) + 1.0 / 2.0))))*(xi2 - pow(xi2*(1.0 / 2.0) + 1.0 / 2.0, 2.0)*3.0 + 1.0)) / (r0 + S*l*(xi2*(1.0 / 2.0) + 1.0 / 2.0)) + (C*C)*k*l*1.0 / pow(r0 + S*l*(xi2*(1.0 / 2.0) + 1.0 / 2.0), 2.0)*(pow(xi2*(1.0 / 2.0) + 1.0 / 2.0, 2.0)*3.0 - pow(xi2*(1.0 / 2.0) + 1.0 / 2.0, 3.0)*2.0)*(pow(xi2*(1.0 / 2.0) + 1.0 / 2.0, 2.0) - pow(xi2*(1.0 / 2.0) + 1.0 / 2.0, 3.0))));
	Matrix[61] = -prmeter*(weight1*(r0 + S*l*(xi1*(1.0 / 2.0) + 1.0 / 2.0))*(-((xi1*3.0 + 1.0)*(((h*h)*k*(xi1*3.0 - 1.0)*(1.0 / 1.2E1)) / l - (S*(h*h)*k*nu*(xi1*2.0 - pow(xi1*(1.0 / 2.0) + 1.0 / 2.0, 2.0)*3.0 + 1.0)*(1.0 / 1.2E1)) / (r0 + S*l*(xi1*(1.0 / 2.0) + 1.0 / 2.0)))) / l + (S*(((h*h)*k*nu*(xi1*3.0 - 1.0)*(1.0 / 1.2E1)) / l - (S*(h*h)*k*(xi1*2.0 - pow(xi1*(1.0 / 2.0) + 1.0 / 2.0, 2.0)*3.0 + 1.0)*(1.0 / 1.2E1)) / (r0 + S*l*(xi1*(1.0 / 2.0) + 1.0 / 2.0)))*(xi1 - pow(xi1*(1.0 / 2.0) + 1.0 / 2.0, 2.0)*3.0 + 1.0)) / (r0 + S*l*(xi1*(1.0 / 2.0) + 1.0 / 2.0)) + (C*C)*k*(l*l)*1.0 / pow(r0 + S*l*(xi1*(1.0 / 2.0) + 1.0 / 2.0), 2.0)*(pow(xi1*(1.0 / 2.0) + 1.0 / 2.0, 2.0) - pow(xi1*(1.0 / 2.0) + 1.0 / 2.0, 3.0))*(xi1*(1.0 / 2.0) - pow(xi1*(1.0 / 2.0) + 1.0 / 2.0, 2.0)*2.0 + pow(xi1*(1.0 / 2.0) + 1.0 / 2.0, 3.0) + 1.0 / 2.0)) + weight2*(r0 + S*l*(xi2*(1.0 / 2.0) + 1.0 / 2.0))*(-((xi2*3.0 + 1.0)*(((h*h)*k*(xi2*3.0 - 1.0)*(1.0 / 1.2E1)) / l - (S*(h*h)*k*nu*(xi2*2.0 - pow(xi2*(1.0 / 2.0) + 1.0 / 2.0, 2.0)*3.0 + 1.0)*(1.0 / 1.2E1)) / (r0 + S*l*(xi2*(1.0 / 2.0) + 1.0 / 2.0)))) / l + (S*(((h*h)*k*nu*(xi2*3.0 - 1.0)*(1.0 / 1.2E1)) / l - (S*(h*h)*k*(xi2*2.0 - pow(xi2*(1.0 / 2.0) + 1.0 / 2.0, 2.0)*3.0 + 1.0)*(1.0 / 1.2E1)) / (r0 + S*l*(xi2*(1.0 / 2.0) + 1.0 / 2.0)))*(xi2 - pow(xi2*(1.0 / 2.0) + 1.0 / 2.0, 2.0)*3.0 + 1.0)) / (r0 + S*l*(xi2*(1.0 / 2.0) + 1.0 / 2.0)) + (C*C)*k*(l*l)*1.0 / pow(r0 + S*l*(xi2*(1.0 / 2.0) + 1.0 / 2.0), 2.0)*(pow(xi2*(1.0 / 2.0) + 1.0 / 2.0, 2.0) - pow(xi2*(1.0 / 2.0) + 1.0 / 2.0, 3.0))*(xi2*(1.0 / 2.0) - pow(xi2*(1.0 / 2.0) + 1.0 / 2.0, 2.0)*2.0 + pow(xi2*(1.0 / 2.0) + 1.0 / 2.0, 3.0) + 1.0 / 2.0)) - weight1*(r0 - S*l*(xi1*(1.0 / 2.0) - 1.0 / 2.0))*(((xi1*3.0 - 1.0)*(((h*h)*k*(xi1*3.0 + 1.0)*(1.0 / 1.2E1)) / l - (S*(h*h)*k*nu*(xi1*2.0 + pow(xi1*(1.0 / 2.0) - 1.0 / 2.0, 2.0)*3.0 - 1.0)*(1.0 / 1.2E1)) / (r0 - S*l*(xi1*(1.0 / 2.0) - 1.0 / 2.0)))) / l - (S*(((h*h)*k*nu*(xi1*3.0 + 1.0)*(1.0 / 1.2E1)) / l - (S*(h*h)*k*(xi1*2.0 + pow(xi1*(1.0 / 2.0) - 1.0 / 2.0, 2.0)*3.0 - 1.0)*(1.0 / 1.2E1)) / (r0 - S*l*(xi1*(1.0 / 2.0) - 1.0 / 2.0)))*(xi1 + pow(xi1*(1.0 / 2.0) - 1.0 / 2.0, 2.0)*3.0 - 1.0)) / (r0 - S*l*(xi1*(1.0 / 2.0) - 1.0 / 2.0)) + (C*C)*k*(l*l)*1.0 / pow(r0 - S*l*(xi1*(1.0 / 2.0) - 1.0 / 2.0), 2.0)*(pow(xi1*(1.0 / 2.0) - 1.0 / 2.0, 2.0) + pow(xi1*(1.0 / 2.0) - 1.0 / 2.0, 3.0))*(xi1*(1.0 / 2.0) + pow(xi1*(1.0 / 2.0) - 1.0 / 2.0, 2.0)*2.0 + pow(xi1*(1.0 / 2.0) - 1.0 / 2.0, 3.0) - 1.0 / 2.0)) - weight2*(r0 - S*l*(xi2*(1.0 / 2.0) - 1.0 / 2.0))*(((xi2*3.0 - 1.0)*(((h*h)*k*(xi2*3.0 + 1.0)*(1.0 / 1.2E1)) / l - (S*(h*h)*k*nu*(xi2*2.0 + pow(xi2*(1.0 / 2.0) - 1.0 / 2.0, 2.0)*3.0 - 1.0)*(1.0 / 1.2E1)) / (r0 - S*l*(xi2*(1.0 / 2.0) - 1.0 / 2.0)))) / l - (S*(((h*h)*k*nu*(xi2*3.0 + 1.0)*(1.0 / 1.2E1)) / l - (S*(h*h)*k*(xi2*2.0 + pow(xi2*(1.0 / 2.0) - 1.0 / 2.0, 2.0)*3.0 - 1.0)*(1.0 / 1.2E1)) / (r0 - S*l*(xi2*(1.0 / 2.0) - 1.0 / 2.0)))*(xi2 + pow(xi2*(1.0 / 2.0) - 1.0 / 2.0, 2.0)*3.0 - 1.0)) / (r0 - S*l*(xi2*(1.0 / 2.0) - 1.0 / 2.0)) + (C*C)*k*(l*l)*1.0 / pow(r0 - S*l*(xi2*(1.0 / 2.0) - 1.0 / 2.0), 2.0)*(pow(xi2*(1.0 / 2.0) - 1.0 / 2.0, 2.0) + pow(xi2*(1.0 / 2.0) - 1.0 / 2.0, 3.0))*(xi2*(1.0 / 2.0) + pow(xi2*(1.0 / 2.0) - 1.0 / 2.0, 2.0)*2.0 + pow(xi2*(1.0 / 2.0) - 1.0 / 2.0, 3.0) - 1.0 / 2.0)));
	Matrix[63] = C*prmeter*(weight1*(r0 - S*l*(xi1*(1.0 / 2.0) - 1.0 / 2.0))*((((h*h)*k*1.0 / (l*l)*xi1*(1.0 / 2.0) - (S*(h*h)*k*nu*(xi1*3.0 + pow(xi1*(1.0 / 2.0) - 1.0 / 2.0, 2.0)*6.0 - 3.0)*(1.0 / 1.2E1)) / (l*(r0 - S*l*(xi1*(1.0 / 2.0) - 1.0 / 2.0))))*(xi1*3.0 - 1.0)) / l - (S*((h*h)*k*1.0 / (l*l)*nu*xi1*(1.0 / 2.0) - (S*(h*h)*k*(xi1*3.0 + pow(xi1*(1.0 / 2.0) - 1.0 / 2.0, 2.0)*6.0 - 3.0)*(1.0 / 1.2E1)) / (l*(r0 - S*l*(xi1*(1.0 / 2.0) - 1.0 / 2.0))))*(xi1 + pow(xi1*(1.0 / 2.0) - 1.0 / 2.0, 2.0)*3.0 - 1.0)) / (r0 - S*l*(xi1*(1.0 / 2.0) - 1.0 / 2.0)) + (C*C)*k*l*1.0 / pow(r0 - S*l*(xi1*(1.0 / 2.0) - 1.0 / 2.0), 2.0)*(pow(xi1*(1.0 / 2.0) - 1.0 / 2.0, 2.0) + pow(xi1*(1.0 / 2.0) - 1.0 / 2.0, 3.0))*(pow(xi1*(1.0 / 2.0) - 1.0 / 2.0, 2.0)*3.0 + pow(xi1*(1.0 / 2.0) - 1.0 / 2.0, 3.0)*2.0 - 1.0)) + weight2*(r0 - S*l*(xi2*(1.0 / 2.0) - 1.0 / 2.0))*((((h*h)*k*1.0 / (l*l)*xi2*(1.0 / 2.0) - (S*(h*h)*k*nu*(xi2*3.0 + pow(xi2*(1.0 / 2.0) - 1.0 / 2.0, 2.0)*6.0 - 3.0)*(1.0 / 1.2E1)) / (l*(r0 - S*l*(xi2*(1.0 / 2.0) - 1.0 / 2.0))))*(xi2*3.0 - 1.0)) / l - (S*((h*h)*k*1.0 / (l*l)*nu*xi2*(1.0 / 2.0) - (S*(h*h)*k*(xi2*3.0 + pow(xi2*(1.0 / 2.0) - 1.0 / 2.0, 2.0)*6.0 - 3.0)*(1.0 / 1.2E1)) / (l*(r0 - S*l*(xi2*(1.0 / 2.0) - 1.0 / 2.0))))*(xi2 + pow(xi2*(1.0 / 2.0) - 1.0 / 2.0, 2.0)*3.0 - 1.0)) / (r0 - S*l*(xi2*(1.0 / 2.0) - 1.0 / 2.0)) + (C*C)*k*l*1.0 / pow(r0 - S*l*(xi2*(1.0 / 2.0) - 1.0 / 2.0), 2.0)*(pow(xi2*(1.0 / 2.0) - 1.0 / 2.0, 2.0) + pow(xi2*(1.0 / 2.0) - 1.0 / 2.0, 3.0))*(pow(xi2*(1.0 / 2.0) - 1.0 / 2.0, 2.0)*3.0 + pow(xi2*(1.0 / 2.0) - 1.0 / 2.0, 3.0)*2.0 - 1.0)) - weight1*(r0 + S*l*(xi1*(1.0 / 2.0) + 1.0 / 2.0))*(-(((h*h)*k*1.0 / (l*l)*xi1*(1.0 / 2.0) - (S*(h*h)*k*nu*(xi1*3.0 - pow(xi1*(1.0 / 2.0) + 1.0 / 2.0, 2.0)*6.0 + 3.0)*(1.0 / 1.2E1)) / (l*(r0 + S*l*(xi1*(1.0 / 2.0) + 1.0 / 2.0))))*(xi1*3.0 + 1.0)) / l + (S*((h*h)*k*1.0 / (l*l)*nu*xi1*(1.0 / 2.0) - (S*(h*h)*k*(xi1*3.0 - pow(xi1*(1.0 / 2.0) + 1.0 / 2.0, 2.0)*6.0 + 3.0)*(1.0 / 1.2E1)) / (l*(r0 + S*l*(xi1*(1.0 / 2.0) + 1.0 / 2.0))))*(xi1 - pow(xi1*(1.0 / 2.0) + 1.0 / 2.0, 2.0)*3.0 + 1.0)) / (r0 + S*l*(xi1*(1.0 / 2.0) + 1.0 / 2.0)) + (C*C)*k*l*1.0 / pow(r0 + S*l*(xi1*(1.0 / 2.0) + 1.0 / 2.0), 2.0)*(pow(xi1*(1.0 / 2.0) + 1.0 / 2.0, 2.0) - pow(xi1*(1.0 / 2.0) + 1.0 / 2.0, 3.0))*(pow(xi1*(1.0 / 2.0) + 1.0 / 2.0, 2.0)*-3.0 + pow(xi1*(1.0 / 2.0) + 1.0 / 2.0, 3.0)*2.0 + 1.0)) - weight2*(r0 + S*l*(xi2*(1.0 / 2.0) + 1.0 / 2.0))*(-(((h*h)*k*1.0 / (l*l)*xi2*(1.0 / 2.0) - (S*(h*h)*k*nu*(xi2*3.0 - pow(xi2*(1.0 / 2.0) + 1.0 / 2.0, 2.0)*6.0 + 3.0)*(1.0 / 1.2E1)) / (l*(r0 + S*l*(xi2*(1.0 / 2.0) + 1.0 / 2.0))))*(xi2*3.0 + 1.0)) / l + (S*((h*h)*k*1.0 / (l*l)*nu*xi2*(1.0 / 2.0) - (S*(h*h)*k*(xi2*3.0 - pow(xi2*(1.0 / 2.0) + 1.0 / 2.0, 2.0)*6.0 + 3.0)*(1.0 / 1.2E1)) / (l*(r0 + S*l*(xi2*(1.0 / 2.0) + 1.0 / 2.0))))*(xi2 - pow(xi2*(1.0 / 2.0) + 1.0 / 2.0, 2.0)*3.0 + 1.0)) / (r0 + S*l*(xi2*(1.0 / 2.0) + 1.0 / 2.0)) + (C*C)*k*l*1.0 / pow(r0 + S*l*(xi2*(1.0 / 2.0) + 1.0 / 2.0), 2.0)*(pow(xi2*(1.0 / 2.0) + 1.0 / 2.0, 2.0) - pow(xi2*(1.0 / 2.0) + 1.0 / 2.0, 3.0))*(pow(xi2*(1.0 / 2.0) + 1.0 / 2.0, 2.0)*-3.0 + pow(xi2*(1.0 / 2.0) + 1.0 / 2.0, 3.0)*2.0 + 1.0))) + S*prmeter*(C*l*weight1*((k*nu) / l - (S*k*(xi1*(1.0 / 2.0) + 1.0 / 2.0)) / (r0 - S*l*(xi1*(1.0 / 2.0) - 1.0 / 2.0)))*(pow(xi1*(1.0 / 2.0) - 1.0 / 2.0, 2.0) + pow(xi1*(1.0 / 2.0) - 1.0 / 2.0, 3.0)) + C*l*weight2*((k*nu) / l - (S*k*(xi2*(1.0 / 2.0) + 1.0 / 2.0)) / (r0 - S*l*(xi2*(1.0 / 2.0) - 1.0 / 2.0)))*(pow(xi2*(1.0 / 2.0) - 1.0 / 2.0, 2.0) + pow(xi2*(1.0 / 2.0) - 1.0 / 2.0, 3.0)) + C*l*weight1*((k*nu) / l + (S*k*(xi1*(1.0 / 2.0) - 1.0 / 2.0)) / (r0 + S*l*(xi1*(1.0 / 2.0) + 1.0 / 2.0)))*(pow(xi1*(1.0 / 2.0) + 1.0 / 2.0, 2.0) - pow(xi1*(1.0 / 2.0) + 1.0 / 2.0, 3.0)) + C*l*weight2*((k*nu) / l + (S*k*(xi2*(1.0 / 2.0) - 1.0 / 2.0)) / (r0 + S*l*(xi2*(1.0 / 2.0) + 1.0 / 2.0)))*(pow(xi2*(1.0 / 2.0) + 1.0 / 2.0, 2.0) - pow(xi2*(1.0 / 2.0) + 1.0 / 2.0, 3.0)));
	Matrix[65] = C*prmeter*(C*l*weight1*((k*nu) / l - (S*k*(xi1*(1.0 / 2.0) + 1.0 / 2.0)) / (r0 - S*l*(xi1*(1.0 / 2.0) - 1.0 / 2.0)))*(pow(xi1*(1.0 / 2.0) - 1.0 / 2.0, 2.0) + pow(xi1*(1.0 / 2.0) - 1.0 / 2.0, 3.0)) + C*l*weight2*((k*nu) / l - (S*k*(xi2*(1.0 / 2.0) + 1.0 / 2.0)) / (r0 - S*l*(xi2*(1.0 / 2.0) - 1.0 / 2.0)))*(pow(xi2*(1.0 / 2.0) - 1.0 / 2.0, 2.0) + pow(xi2*(1.0 / 2.0) - 1.0 / 2.0, 3.0)) + C*l*weight1*((k*nu) / l + (S*k*(xi1*(1.0 / 2.0) - 1.0 / 2.0)) / (r0 + S*l*(xi1*(1.0 / 2.0) + 1.0 / 2.0)))*(pow(xi1*(1.0 / 2.0) + 1.0 / 2.0, 2.0) - pow(xi1*(1.0 / 2.0) + 1.0 / 2.0, 3.0)) + C*l*weight2*((k*nu) / l + (S*k*(xi2*(1.0 / 2.0) - 1.0 / 2.0)) / (r0 + S*l*(xi2*(1.0 / 2.0) + 1.0 / 2.0)))*(pow(xi2*(1.0 / 2.0) + 1.0 / 2.0, 2.0) - pow(xi2*(1.0 / 2.0) + 1.0 / 2.0, 3.0))) - S*prmeter*(weight1*(r0 - S*l*(xi1*(1.0 / 2.0) - 1.0 / 2.0))*((((h*h)*k*1.0 / (l*l)*xi1*(1.0 / 2.0) - (S*(h*h)*k*nu*(xi1*3.0 + pow(xi1*(1.0 / 2.0) - 1.0 / 2.0, 2.0)*6.0 - 3.0)*(1.0 / 1.2E1)) / (l*(r0 - S*l*(xi1*(1.0 / 2.0) - 1.0 / 2.0))))*(xi1*3.0 - 1.0)) / l - (S*((h*h)*k*1.0 / (l*l)*nu*xi1*(1.0 / 2.0) - (S*(h*h)*k*(xi1*3.0 + pow(xi1*(1.0 / 2.0) - 1.0 / 2.0, 2.0)*6.0 - 3.0)*(1.0 / 1.2E1)) / (l*(r0 - S*l*(xi1*(1.0 / 2.0) - 1.0 / 2.0))))*(xi1 + pow(xi1*(1.0 / 2.0) - 1.0 / 2.0, 2.0)*3.0 - 1.0)) / (r0 - S*l*(xi1*(1.0 / 2.0) - 1.0 / 2.0)) + (C*C)*k*l*1.0 / pow(r0 - S*l*(xi1*(1.0 / 2.0) - 1.0 / 2.0), 2.0)*(pow(xi1*(1.0 / 2.0) - 1.0 / 2.0, 2.0) + pow(xi1*(1.0 / 2.0) - 1.0 / 2.0, 3.0))*(pow(xi1*(1.0 / 2.0) - 1.0 / 2.0, 2.0)*3.0 + pow(xi1*(1.0 / 2.0) - 1.0 / 2.0, 3.0)*2.0 - 1.0)) + weight2*(r0 - S*l*(xi2*(1.0 / 2.0) - 1.0 / 2.0))*((((h*h)*k*1.0 / (l*l)*xi2*(1.0 / 2.0) - (S*(h*h)*k*nu*(xi2*3.0 + pow(xi2*(1.0 / 2.0) - 1.0 / 2.0, 2.0)*6.0 - 3.0)*(1.0 / 1.2E1)) / (l*(r0 - S*l*(xi2*(1.0 / 2.0) - 1.0 / 2.0))))*(xi2*3.0 - 1.0)) / l - (S*((h*h)*k*1.0 / (l*l)*nu*xi2*(1.0 / 2.0) - (S*(h*h)*k*(xi2*3.0 + pow(xi2*(1.0 / 2.0) - 1.0 / 2.0, 2.0)*6.0 - 3.0)*(1.0 / 1.2E1)) / (l*(r0 - S*l*(xi2*(1.0 / 2.0) - 1.0 / 2.0))))*(xi2 + pow(xi2*(1.0 / 2.0) - 1.0 / 2.0, 2.0)*3.0 - 1.0)) / (r0 - S*l*(xi2*(1.0 / 2.0) - 1.0 / 2.0)) + (C*C)*k*l*1.0 / pow(r0 - S*l*(xi2*(1.0 / 2.0) - 1.0 / 2.0), 2.0)*(pow(xi2*(1.0 / 2.0) - 1.0 / 2.0, 2.0) + pow(xi2*(1.0 / 2.0) - 1.0 / 2.0, 3.0))*(pow(xi2*(1.0 / 2.0) - 1.0 / 2.0, 2.0)*3.0 + pow(xi2*(1.0 / 2.0) - 1.0 / 2.0, 3.0)*2.0 - 1.0)) - weight1*(r0 + S*l*(xi1*(1.0 / 2.0) + 1.0 / 2.0))*(-(((h*h)*k*1.0 / (l*l)*xi1*(1.0 / 2.0) - (S*(h*h)*k*nu*(xi1*3.0 - pow(xi1*(1.0 / 2.0) + 1.0 / 2.0, 2.0)*6.0 + 3.0)*(1.0 / 1.2E1)) / (l*(r0 + S*l*(xi1*(1.0 / 2.0) + 1.0 / 2.0))))*(xi1*3.0 + 1.0)) / l + (S*((h*h)*k*1.0 / (l*l)*nu*xi1*(1.0 / 2.0) - (S*(h*h)*k*(xi1*3.0 - pow(xi1*(1.0 / 2.0) + 1.0 / 2.0, 2.0)*6.0 + 3.0)*(1.0 / 1.2E1)) / (l*(r0 + S*l*(xi1*(1.0 / 2.0) + 1.0 / 2.0))))*(xi1 - pow(xi1*(1.0 / 2.0) + 1.0 / 2.0, 2.0)*3.0 + 1.0)) / (r0 + S*l*(xi1*(1.0 / 2.0) + 1.0 / 2.0)) + (C*C)*k*l*1.0 / pow(r0 + S*l*(xi1*(1.0 / 2.0) + 1.0 / 2.0), 2.0)*(pow(xi1*(1.0 / 2.0) + 1.0 / 2.0, 2.0) - pow(xi1*(1.0 / 2.0) + 1.0 / 2.0, 3.0))*(pow(xi1*(1.0 / 2.0) + 1.0 / 2.0, 2.0)*-3.0 + pow(xi1*(1.0 / 2.0) + 1.0 / 2.0, 3.0)*2.0 + 1.0)) - weight2*(r0 + S*l*(xi2*(1.0 / 2.0) + 1.0 / 2.0))*(-(((h*h)*k*1.0 / (l*l)*xi2*(1.0 / 2.0) - (S*(h*h)*k*nu*(xi2*3.0 - pow(xi2*(1.0 / 2.0) + 1.0 / 2.0, 2.0)*6.0 + 3.0)*(1.0 / 1.2E1)) / (l*(r0 + S*l*(xi2*(1.0 / 2.0) + 1.0 / 2.0))))*(xi2*3.0 + 1.0)) / l + (S*((h*h)*k*1.0 / (l*l)*nu*xi2*(1.0 / 2.0) - (S*(h*h)*k*(xi2*3.0 - pow(xi2*(1.0 / 2.0) + 1.0 / 2.0, 2.0)*6.0 + 3.0)*(1.0 / 1.2E1)) / (l*(r0 + S*l*(xi2*(1.0 / 2.0) + 1.0 / 2.0))))*(xi2 - pow(xi2*(1.0 / 2.0) + 1.0 / 2.0, 2.0)*3.0 + 1.0)) / (r0 + S*l*(xi2*(1.0 / 2.0) + 1.0 / 2.0)) + (C*C)*k*l*1.0 / pow(r0 + S*l*(xi2*(1.0 / 2.0) + 1.0 / 2.0), 2.0)*(pow(xi2*(1.0 / 2.0) + 1.0 / 2.0, 2.0) - pow(xi2*(1.0 / 2.0) + 1.0 / 2.0, 3.0))*(pow(xi2*(1.0 / 2.0) + 1.0 / 2.0, 2.0)*-3.0 + pow(xi2*(1.0 / 2.0) + 1.0 / 2.0, 3.0)*2.0 + 1.0)));
}

//	Calculate element stress 
void CFrustum::ElementStress(double* stress, double* Displacement)
{

}
